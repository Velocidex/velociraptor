name: Windows Build
on: [push]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: 1.14
      id: go

    - name: setup env
      run: |
        echo "::set-env name=GOPATH::$(dirname $GITHUB_WORKSPACE)"
        echo "::add-path::$(dirname $GITHUB_WORKSPACE)/bin"
      shell: bash

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Use Node.js v12
      uses: actions/setup-node@v2-beta
      if: false
      with:
        node-version: '12'

    - name: Cache node-modules
      uses: actions/cache@v2
      if: false
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: Cache golang packages
      uses: actions/cache@v2
      with:
        path: |
          $GOPATH/pkg/
        key: ${{ runner.os }}-${{ hashFiles('go.mod') }}

    - name: npm install gui
      shell: bash
      if: false
      run: |
            cd gui/static
            npm install
            node node_modules/gulp/bin/gulp.js compile
            cd ../..

    - name: Configure test environment
      shell: cmd
      if: always()
      run: |
        echo %PATH%
        echo %GOPATH%
        mklink c:\Users\link c:\Windows
        mkdir "C:\Program Files\Velociraptor"
        mkdir c:\tmp
        echo Hello > C:\hello.txt
        echo HelloADS > C:\hello.txt:myads
        fsutil file setshortname C:\hello.txt hi.txt
        sc.exe create TestingDetection1 binPath="%COMSPEC% /Q /c echo 'COMSPEC testing 1"
        echo "VSStest" > c:\Users\test.txt
        echo "VSStest2" > c:\Users\test2.txt
        regedit /S artifacts/testdata/windows/init.reg

    - name: Build
      if: always()
      env:
        CC: x86_64-w64-mingw32-gcc
        # Disable CGO for building tests - it takes too long (mainly
        # disables Yara building again).
        CGO_ENABLED: "0"
      shell: bash
      run: |
        mkdir gui/static/dist/
        echo > gui/static/dist/third-party.bundle.js
        echo > gui/static/dist/grr-ui.bundle.js
        go run make.go -v WindowsTest

    - name: Prepare second stage
      if: always()
      run: |
        vssadmin create shadow /for=c:
        echo "VSStest2" >> c:\Users\test2.txt
        wevtutil.exe cl System
        sc.exe create TestingDetection2 binPath="%COMSPEC% /Q /c echo 'COMSPEC testing 2"
        vssadmin create shadow /for=c:

    - name: Test
      shell: bash
      if: always()
      env:
        # Disable CGO for building tests - it takes too long (mainly
        # disables Yara building again).
        CGO_ENABLED: "0"

      run: |
        go test -v ./...

    - name: Test Golden
      shell: bash
      if: always()
      run: |
        output/velociraptor.exe golden artifacts/testdata/windows/ --env srcDir=./ --config artifacts/testdata/windows/test.config.yaml

    - name: Upload Build Artifacts
      shell: bash
      run: |
        mkdir artifact_output
        cp artifacts/testdata/windows/*.out* artifact_output

    - uses: actions/upload-artifact@master
      with:
        name: artifact
        path: artifact-zip
