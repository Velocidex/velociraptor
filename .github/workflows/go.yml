# Only trigger when a PR is committed.
name: Linux Build All Arches
on:
  pull_request:
    types: [closed]
#    branches:
#      - master

jobs:
  build:
    if: github.event.pull_request.merged
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - uses: actions/setup-go@v2
      with:
        go-version: '^1.17'

    - run: go version

#    - uses: actions/cache@v2
#      with:
#        # In order:
#        # * Module download cache
#        # * Build cache (Linux)
#        # * Build cache (Mac)
#        # * Build cache (Windows)
#        path: |
#          ~/go/pkg/mod
#          ~/.cache/go-build
#          ~/Library/Caches/go-build
#          %LocalAppData%\go-build
#        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#        restore-keys: |
#          ${{ runner.os }}-go-

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        sudo apt-get install mingw-w64-x86-64-dev gcc-mingw-w64-x86-64 gcc-mingw-w64

    - name: Use Node.js v12
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Cache node-modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: |
          **/node_modules/
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: npm install gui
      run: |
            cd gui/velociraptor/
            npm install
            npm run build
            cd ../../

    - name: Build All Architectures
      # Uncomment the architectures you want here. NOTE: DarwinBase
      # does not include yara or modules with C compilers needed.
      run: |
        mkdir ./output/
        export PATH=$PATH:~/go/bin/
        go run make.go -v Linux
        go run make.go -v Windows
        go run make.go -v Windowsx86
        go run make.go -v DarwinBase

    - name: StoreBinaries
      uses: actions/upload-artifact@v1
      with:
        name: Binaries.zip
        path: output
