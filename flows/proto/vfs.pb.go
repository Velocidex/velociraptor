// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: vfs.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	proto "www.velocidex.com/golang/velociraptor/actions/proto"
	_ "www.velocidex.com/golang/velociraptor/proto"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VFSDownloadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VfsPath string `protobuf:"bytes,1,opt,name=vfs_path,json=vfsPath,proto3" json:"vfs_path,omitempty"`
	Size    uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Mtime   uint64 `protobuf:"varint,3,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Sparse  bool   `protobuf:"varint,4,opt,name=sparse,proto3" json:"sparse,omitempty"`
	MD5     string `protobuf:"bytes,5,opt,name=MD5,proto3" json:"MD5,omitempty"`
	SHA256  string `protobuf:"bytes,6,opt,name=SHA256,proto3" json:"SHA256,omitempty"`
}

func (x *VFSDownloadInfo) Reset() {
	*x = VFSDownloadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vfs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VFSDownloadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VFSDownloadInfo) ProtoMessage() {}

func (x *VFSDownloadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vfs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VFSDownloadInfo.ProtoReflect.Descriptor instead.
func (*VFSDownloadInfo) Descriptor() ([]byte, []int) {
	return file_vfs_proto_rawDescGZIP(), []int{0}
}

func (x *VFSDownloadInfo) GetVfsPath() string {
	if x != nil {
		return x.VfsPath
	}
	return ""
}

func (x *VFSDownloadInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VFSDownloadInfo) GetMtime() uint64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *VFSDownloadInfo) GetSparse() bool {
	if x != nil {
		return x.Sparse
	}
	return false
}

func (x *VFSDownloadInfo) GetMD5() string {
	if x != nil {
		return x.MD5
	}
	return ""
}

func (x *VFSDownloadInfo) GetSHA256() string {
	if x != nil {
		return x.SHA256
	}
	return ""
}

type VFSListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response  string              `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	Columns   []string            `protobuf:"bytes,2,rep,name=Columns,proto3" json:"Columns,omitempty"`
	Query     *proto.VQLRequest   `protobuf:"bytes,3,opt,name=Query,proto3" json:"Query,omitempty"`
	Timestamp uint64              `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TotalRows uint64              `protobuf:"varint,7,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
	Types     []*proto.VQLTypeMap `protobuf:"bytes,8,rep,name=types,proto3" json:"types,omitempty"`
	// The actual artifact that contains the data.
	ClientId string `protobuf:"bytes,9,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	FlowId   string `protobuf:"bytes,10,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *VFSListResponse) Reset() {
	*x = VFSListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vfs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VFSListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VFSListResponse) ProtoMessage() {}

func (x *VFSListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vfs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VFSListResponse.ProtoReflect.Descriptor instead.
func (*VFSListResponse) Descriptor() ([]byte, []int) {
	return file_vfs_proto_rawDescGZIP(), []int{1}
}

func (x *VFSListResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *VFSListResponse) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *VFSListResponse) GetQuery() *proto.VQLRequest {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *VFSListResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *VFSListResponse) GetTotalRows() uint64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *VFSListResponse) GetTypes() []*proto.VQLTypeMap {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *VFSListResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *VFSListResponse) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type VFSStatDownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Accessor string `protobuf:"bytes,4,opt,name=accessor,proto3" json:"accessor,omitempty"`
	Path     string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *VFSStatDownloadRequest) Reset() {
	*x = VFSStatDownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vfs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VFSStatDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VFSStatDownloadRequest) ProtoMessage() {}

func (x *VFSStatDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vfs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VFSStatDownloadRequest.ProtoReflect.Descriptor instead.
func (*VFSStatDownloadRequest) Descriptor() ([]byte, []int) {
	return file_vfs_proto_rawDescGZIP(), []int{2}
}

func (x *VFSStatDownloadRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *VFSStatDownloadRequest) GetAccessor() string {
	if x != nil {
		return x.Accessor
	}
	return ""
}

func (x *VFSStatDownloadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type VFSListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId       string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	VfsPath        string `protobuf:"bytes,2,opt,name=vfs_path,json=vfsPath,proto3" json:"vfs_path,omitempty"`
	RecursionDepth uint64 `protobuf:"varint,3,opt,name=recursion_depth,json=recursionDepth,proto3" json:"recursion_depth,omitempty"`
}

func (x *VFSListRequest) Reset() {
	*x = VFSListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vfs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VFSListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VFSListRequest) ProtoMessage() {}

func (x *VFSListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vfs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VFSListRequest.ProtoReflect.Descriptor instead.
func (*VFSListRequest) Descriptor() ([]byte, []int) {
	return file_vfs_proto_rawDescGZIP(), []int{3}
}

func (x *VFSListRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *VFSListRequest) GetVfsPath() string {
	if x != nil {
		return x.VfsPath
	}
	return ""
}

func (x *VFSListRequest) GetRecursionDepth() uint64 {
	if x != nil {
		return x.RecursionDepth
	}
	return 0
}

type VFSListRequestState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VfsPath  string             `protobuf:"bytes,1,opt,name=vfs_path,json=vfsPath,proto3" json:"vfs_path,omitempty"`
	Accessor string             `protobuf:"bytes,3,opt,name=accessor,proto3" json:"accessor,omitempty"`
	Current  *proto.VQLResponse `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *VFSListRequestState) Reset() {
	*x = VFSListRequestState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vfs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VFSListRequestState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VFSListRequestState) ProtoMessage() {}

func (x *VFSListRequestState) ProtoReflect() protoreflect.Message {
	mi := &file_vfs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VFSListRequestState.ProtoReflect.Descriptor instead.
func (*VFSListRequestState) Descriptor() ([]byte, []int) {
	return file_vfs_proto_rawDescGZIP(), []int{4}
}

func (x *VFSListRequestState) GetVfsPath() string {
	if x != nil {
		return x.VfsPath
	}
	return ""
}

func (x *VFSListRequestState) GetAccessor() string {
	if x != nil {
		return x.Accessor
	}
	return ""
}

func (x *VFSListRequestState) GetCurrent() *proto.VQLResponse {
	if x != nil {
		return x.Current
	}
	return nil
}

type VFSDownloadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	VfsPath  []string `protobuf:"bytes,2,rep,name=vfs_path,json=vfsPath,proto3" json:"vfs_path,omitempty"`
}

func (x *VFSDownloadFileRequest) Reset() {
	*x = VFSDownloadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vfs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VFSDownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VFSDownloadFileRequest) ProtoMessage() {}

func (x *VFSDownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vfs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VFSDownloadFileRequest.ProtoReflect.Descriptor instead.
func (*VFSDownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_vfs_proto_rawDescGZIP(), []int{5}
}

func (x *VFSDownloadFileRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *VFSDownloadFileRequest) GetVfsPath() []string {
	if x != nil {
		return x.VfsPath
	}
	return nil
}

type ClientMonitoringState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version             uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	LastUpdateTimestamp uint64 `protobuf:"varint,2,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`
}

func (x *ClientMonitoringState) Reset() {
	*x = ClientMonitoringState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vfs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMonitoringState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMonitoringState) ProtoMessage() {}

func (x *ClientMonitoringState) ProtoReflect() protoreflect.Message {
	mi := &file_vfs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMonitoringState.ProtoReflect.Descriptor instead.
func (*ClientMonitoringState) Descriptor() ([]byte, []int) {
	return file_vfs_proto_rawDescGZIP(), []int{6}
}

func (x *ClientMonitoringState) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ClientMonitoringState) GetLastUpdateTimestamp() uint64 {
	if x != nil {
		return x.LastUpdateTimestamp
	}
	return 0
}

var File_vfs_proto protoreflect.FileDescriptor

var file_vfs_proto_rawDesc = []byte{
	0x0a, 0x09, 0x76, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74,
	0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x56, 0x46, 0x53, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x66, 0x73, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x44, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4d, 0x44, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x22, 0x8c, 0x02, 0x0a,
	0x0f, 0x56, 0x46, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x51,
	0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x27, 0x0a, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x51, 0x4c, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x16, 0x56,
	0x46, 0x53, 0x53, 0x74, 0x61, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0xf8, 0x01, 0x0a, 0x0e, 0x56, 0x46, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x1f,
	0x0a, 0x06, 0x52, 0x44, 0x46, 0x55, 0x52, 0x4e, 0x12, 0x12, 0x54, 0x68, 0x65, 0x20, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x01, 0x02, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x08, 0x76, 0x66, 0x73,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xe2, 0xfc, 0xe3,
	0xc4, 0x01, 0x21, 0x12, 0x1f, 0x54, 0x68, 0x65, 0x20, 0x56, 0x46, 0x53, 0x20, 0x50, 0x61, 0x74,
	0x68, 0x20, 0x74, 0x6f, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x20,
	0x69, 0x6e, 0x20, 0x2e, 0x52, 0x07, 0x76, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x5e, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x35, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x2f, 0x12, 0x2a,
	0x49, 0x66, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x63, 0x75,
	0x72, 0x73, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x6d, 0x61, 0x6e, 0x79, 0x20, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x32, 0x01, 0x30, 0x52, 0x0e, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x22, 0x7a, 0x0a,
	0x13, 0x56, 0x46, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x66, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x51, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x16, 0x56, 0x46,
	0x53, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x1a, 0x0a,
	0x06, 0x52, 0x44, 0x46, 0x55, 0x52, 0x4e, 0x12, 0x0d, 0x54, 0x68, 0x65, 0x20, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x20, 0x69, 0x64, 0x1a, 0x01, 0x02, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x08, 0x76, 0x66, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2d, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x27, 0x12, 0x25, 0x54,
	0x68, 0x65, 0x20, 0x56, 0x46, 0x53, 0x20, 0x50, 0x61, 0x74, 0x68, 0x20, 0x74, 0x6f, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x52, 0x07, 0x76, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x22, 0xbb, 0x01,
	0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x26, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x20,
	0x12, 0x1e, 0x54, 0x68, 0x65, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x27, 0x73, 0x20, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x15, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x2c, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x26,
	0x12, 0x24, 0x54, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20,
	0x77, 0x65, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x33, 0x5a, 0x31, 0x77,
	0x77, 0x77, 0x2e, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x72, 0x61,
	0x70, 0x74, 0x6f, 0x72, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vfs_proto_rawDescOnce sync.Once
	file_vfs_proto_rawDescData = file_vfs_proto_rawDesc
)

func file_vfs_proto_rawDescGZIP() []byte {
	file_vfs_proto_rawDescOnce.Do(func() {
		file_vfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_vfs_proto_rawDescData)
	})
	return file_vfs_proto_rawDescData
}

var file_vfs_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_vfs_proto_goTypes = []interface{}{
	(*VFSDownloadInfo)(nil),        // 0: proto.VFSDownloadInfo
	(*VFSListResponse)(nil),        // 1: proto.VFSListResponse
	(*VFSStatDownloadRequest)(nil), // 2: proto.VFSStatDownloadRequest
	(*VFSListRequest)(nil),         // 3: proto.VFSListRequest
	(*VFSListRequestState)(nil),    // 4: proto.VFSListRequestState
	(*VFSDownloadFileRequest)(nil), // 5: proto.VFSDownloadFileRequest
	(*ClientMonitoringState)(nil),  // 6: proto.ClientMonitoringState
	(*proto.VQLRequest)(nil),       // 7: proto.VQLRequest
	(*proto.VQLTypeMap)(nil),       // 8: proto.VQLTypeMap
	(*proto.VQLResponse)(nil),      // 9: proto.VQLResponse
}
var file_vfs_proto_depIdxs = []int32{
	7, // 0: proto.VFSListResponse.Query:type_name -> proto.VQLRequest
	8, // 1: proto.VFSListResponse.types:type_name -> proto.VQLTypeMap
	9, // 2: proto.VFSListRequestState.current:type_name -> proto.VQLResponse
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_vfs_proto_init() }
func file_vfs_proto_init() {
	if File_vfs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vfs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VFSDownloadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vfs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VFSListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vfs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VFSStatDownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vfs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VFSListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vfs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VFSListRequestState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vfs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VFSDownloadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vfs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMonitoringState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vfs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vfs_proto_goTypes,
		DependencyIndexes: file_vfs_proto_depIdxs,
		MessageInfos:      file_vfs_proto_msgTypes,
	}.Build()
	File_vfs_proto = out.File
	file_vfs_proto_rawDesc = nil
	file_vfs_proto_goTypes = nil
	file_vfs_proto_depIdxs = nil
}
