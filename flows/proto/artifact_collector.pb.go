// Code generated by protoc-gen-go. DO NOT EDIT.
// source: artifact_collector.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	proto1 "www.velocidex.com/golang/velociraptor/actions/proto"
	proto2 "www.velocidex.com/golang/velociraptor/crypto/proto"
	_ "www.velocidex.com/golang/velociraptor/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ArtifactCollectorContext_State int32

const (
	ArtifactCollectorContext_UNSET     ArtifactCollectorContext_State = 0
	ArtifactCollectorContext_RUNNING   ArtifactCollectorContext_State = 1
	ArtifactCollectorContext_FINISHED  ArtifactCollectorContext_State = 2
	ArtifactCollectorContext_ERROR     ArtifactCollectorContext_State = 3
	ArtifactCollectorContext_ARCHIVED  ArtifactCollectorContext_State = 4
	ArtifactCollectorContext_CANCELLED ArtifactCollectorContext_State = 5
)

var ArtifactCollectorContext_State_name = map[int32]string{
	0: "UNSET",
	1: "RUNNING",
	2: "FINISHED",
	3: "ERROR",
	4: "ARCHIVED",
	5: "CANCELLED",
}

var ArtifactCollectorContext_State_value = map[string]int32{
	"UNSET":     0,
	"RUNNING":   1,
	"FINISHED":  2,
	"ERROR":     3,
	"ARCHIVED":  4,
	"CANCELLED": 5,
}

func (x ArtifactCollectorContext_State) String() string {
	return proto.EnumName(ArtifactCollectorContext_State_name, int32(x))
}

func (ArtifactCollectorContext_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ecbffc830d4bd8f6, []int{4, 0}
}

type ArtifactParameters struct {
	Env                  []*proto1.VQLEnv `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ArtifactParameters) Reset()         { *m = ArtifactParameters{} }
func (m *ArtifactParameters) String() string { return proto.CompactTextString(m) }
func (*ArtifactParameters) ProtoMessage()    {}
func (*ArtifactParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecbffc830d4bd8f6, []int{0}
}

func (m *ArtifactParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactParameters.Unmarshal(m, b)
}
func (m *ArtifactParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactParameters.Marshal(b, m, deterministic)
}
func (m *ArtifactParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactParameters.Merge(m, src)
}
func (m *ArtifactParameters) XXX_Size() int {
	return xxx_messageInfo_ArtifactParameters.Size(m)
}
func (m *ArtifactParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactParameters.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactParameters proto.InternalMessageInfo

func (m *ArtifactParameters) GetEnv() []*proto1.VQLEnv {
	if m != nil {
		return m.Env
	}
	return nil
}

type ArtifactCollectorArgs struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ClientId string `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// If set we send an urgent request to the client.
	Urgent       bool                `protobuf:"varint,21,opt,name=urgent,proto3" json:"urgent,omitempty"`
	Artifacts    []string            `protobuf:"bytes,2,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Parameters   *ArtifactParameters `protobuf:"bytes,5,opt,name=parameters,proto3" json:"parameters,omitempty"`
	OpsPerSecond float32             `protobuf:"fixed32,6,opt,name=ops_per_second,json=opsPerSecond,proto3" json:"ops_per_second,omitempty"`
	// Resource limits on this collection.
	Timeout uint64 `protobuf:"varint,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Total number of rows we allow to collect.
	MaxRows uint64 `protobuf:"varint,22,opt,name=max_rows,json=maxRows,proto3" json:"max_rows,omitempty"`
	// Total bytes allowed to upload
	MaxUploadBytes       uint64 `protobuf:"varint,23,opt,name=max_upload_bytes,json=maxUploadBytes,proto3" json:"max_upload_bytes,omitempty"`
	AllowCustomOverrides bool   `protobuf:"varint,8,opt,name=allow_custom_overrides,json=allowCustomOverrides,proto3" json:"allow_custom_overrides,omitempty"`
	// Note: Event artifacts may produce several VQLCollectorArgs, one
	// for each artifact/source because Event Artifacts are
	// asyncronous and blocking and need to run each query in
	// parallel.
	CompiledCollectorArgs []*proto1.VQLCollectorArgs `protobuf:"bytes,20,rep,name=compiled_collector_args,json=compiledCollectorArgs,proto3" json:"compiled_collector_args,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                   `json:"-"`
	XXX_unrecognized      []byte                     `json:"-"`
	XXX_sizecache         int32                      `json:"-"`
}

func (m *ArtifactCollectorArgs) Reset()         { *m = ArtifactCollectorArgs{} }
func (m *ArtifactCollectorArgs) String() string { return proto.CompactTextString(m) }
func (*ArtifactCollectorArgs) ProtoMessage()    {}
func (*ArtifactCollectorArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecbffc830d4bd8f6, []int{1}
}

func (m *ArtifactCollectorArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactCollectorArgs.Unmarshal(m, b)
}
func (m *ArtifactCollectorArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactCollectorArgs.Marshal(b, m, deterministic)
}
func (m *ArtifactCollectorArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactCollectorArgs.Merge(m, src)
}
func (m *ArtifactCollectorArgs) XXX_Size() int {
	return xxx_messageInfo_ArtifactCollectorArgs.Size(m)
}
func (m *ArtifactCollectorArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactCollectorArgs.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactCollectorArgs proto.InternalMessageInfo

func (m *ArtifactCollectorArgs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ArtifactCollectorArgs) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ArtifactCollectorArgs) GetUrgent() bool {
	if m != nil {
		return m.Urgent
	}
	return false
}

func (m *ArtifactCollectorArgs) GetArtifacts() []string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *ArtifactCollectorArgs) GetParameters() *ArtifactParameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *ArtifactCollectorArgs) GetOpsPerSecond() float32 {
	if m != nil {
		return m.OpsPerSecond
	}
	return 0
}

func (m *ArtifactCollectorArgs) GetTimeout() uint64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ArtifactCollectorArgs) GetMaxRows() uint64 {
	if m != nil {
		return m.MaxRows
	}
	return 0
}

func (m *ArtifactCollectorArgs) GetMaxUploadBytes() uint64 {
	if m != nil {
		return m.MaxUploadBytes
	}
	return 0
}

func (m *ArtifactCollectorArgs) GetAllowCustomOverrides() bool {
	if m != nil {
		return m.AllowCustomOverrides
	}
	return false
}

func (m *ArtifactCollectorArgs) GetCompiledCollectorArgs() []*proto1.VQLCollectorArgs {
	if m != nil {
		return m.CompiledCollectorArgs
	}
	return nil
}

type ArtifactCollectorResponse struct {
	FlowId               string                 `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Request              *ArtifactCollectorArgs `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ArtifactCollectorResponse) Reset()         { *m = ArtifactCollectorResponse{} }
func (m *ArtifactCollectorResponse) String() string { return proto.CompactTextString(m) }
func (*ArtifactCollectorResponse) ProtoMessage()    {}
func (*ArtifactCollectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecbffc830d4bd8f6, []int{2}
}

func (m *ArtifactCollectorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactCollectorResponse.Unmarshal(m, b)
}
func (m *ArtifactCollectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactCollectorResponse.Marshal(b, m, deterministic)
}
func (m *ArtifactCollectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactCollectorResponse.Merge(m, src)
}
func (m *ArtifactCollectorResponse) XXX_Size() int {
	return xxx_messageInfo_ArtifactCollectorResponse.Size(m)
}
func (m *ArtifactCollectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactCollectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactCollectorResponse proto.InternalMessageInfo

func (m *ArtifactCollectorResponse) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *ArtifactCollectorResponse) GetRequest() *ArtifactCollectorArgs {
	if m != nil {
		return m.Request
	}
	return nil
}

type ArtifactUploadedFileInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VfsPath              string   `protobuf:"bytes,2,opt,name=vfs_path,json=vfsPath,proto3" json:"vfs_path,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	StoredSize           uint64   `protobuf:"varint,4,opt,name=stored_size,json=storedSize,proto3" json:"stored_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtifactUploadedFileInfo) Reset()         { *m = ArtifactUploadedFileInfo{} }
func (m *ArtifactUploadedFileInfo) String() string { return proto.CompactTextString(m) }
func (*ArtifactUploadedFileInfo) ProtoMessage()    {}
func (*ArtifactUploadedFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecbffc830d4bd8f6, []int{3}
}

func (m *ArtifactUploadedFileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactUploadedFileInfo.Unmarshal(m, b)
}
func (m *ArtifactUploadedFileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactUploadedFileInfo.Marshal(b, m, deterministic)
}
func (m *ArtifactUploadedFileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactUploadedFileInfo.Merge(m, src)
}
func (m *ArtifactUploadedFileInfo) XXX_Size() int {
	return xxx_messageInfo_ArtifactUploadedFileInfo.Size(m)
}
func (m *ArtifactUploadedFileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactUploadedFileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactUploadedFileInfo proto.InternalMessageInfo

func (m *ArtifactUploadedFileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtifactUploadedFileInfo) GetVfsPath() string {
	if m != nil {
		return m.VfsPath
	}
	return ""
}

func (m *ArtifactUploadedFileInfo) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ArtifactUploadedFileInfo) GetStoredSize() uint64 {
	if m != nil {
		return m.StoredSize
	}
	return 0
}

// This context is serialized into the data store.
type ArtifactCollectorContext struct {
	ClientId  string                 `protobuf:"bytes,27,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	SessionId string                 `protobuf:"bytes,13,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Request   *ArtifactCollectorArgs `protobuf:"bytes,11,opt,name=request,proto3" json:"request,omitempty"`
	// If an error occurs this is the backtrace.
	Backtrace string `protobuf:"bytes,1,opt,name=backtrace,proto3" json:"backtrace,omitempty"`
	// When the collection was created.
	CreateTime uint64 `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StartTime  uint64 `protobuf:"varint,18,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Last time this collection was active (receiving data).
	ActiveTime uint64 `protobuf:"varint,17,opt,name=active_time,json=activeTime,proto3" json:"active_time,omitempty"`
	// A total count of files uploaded by this query.
	TotalUploadedFiles         uint64 `protobuf:"varint,23,opt,name=total_uploaded_files,json=totalUploadedFiles,proto3" json:"total_uploaded_files,omitempty"`
	TotalExpectedUploadedBytes uint64 `protobuf:"varint,25,opt,name=total_expected_uploaded_bytes,json=totalExpectedUploadedBytes,proto3" json:"total_expected_uploaded_bytes,omitempty"`
	TotalUploadedBytes         uint64 `protobuf:"varint,26,opt,name=total_uploaded_bytes,json=totalUploadedBytes,proto3" json:"total_uploaded_bytes,omitempty"`
	TotalCollectedRows         uint64 `protobuf:"varint,28,opt,name=total_collected_rows,json=totalCollectedRows,proto3" json:"total_collected_rows,omitempty"`
	// We expect the next response from the client to have this id.
	NextResponseId uint64 `protobuf:"varint,30,opt,name=next_response_id,json=nextResponseId,proto3" json:"next_response_id,omitempty"`
	// Total time the query took to run on the client (reported by the
	// client).
	ExecutionDuration int64                          `protobuf:"varint,29,opt,name=execution_duration,json=executionDuration,proto3" json:"execution_duration,omitempty"`
	State             ArtifactCollectorContext_State `protobuf:"varint,14,opt,name=state,proto3,enum=proto.ArtifactCollectorContext_State" json:"state,omitempty"`
	Status            string                         `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	UserNotified      bool                           `protobuf:"varint,16,opt,name=user_notified,json=userNotified,proto3" json:"user_notified,omitempty"`
	// Some of the collected artifacts may not have results.
	ArtifactsWithResults []string `protobuf:"bytes,22,rep,name=artifacts_with_results,json=artifactsWithResults,proto3" json:"artifacts_with_results,omitempty"`
	// Uploads are now permanently stored in a json file. This field is
	// never serialized - it is just a place holder during processing.
	UploadedFiles []*ArtifactUploadedFileInfo `protobuf:"bytes,24,rep,name=uploaded_files,json=uploadedFiles,proto3" json:"uploaded_files,omitempty"`
	// Logs are stored in their own CSV file. This is just a
	// placeholder during processing.
	Logs                 []*proto2.LogMessage `protobuf:"bytes,20,rep,name=logs,proto3" json:"logs,omitempty"`
	Dirty                bool                 `protobuf:"varint,2,opt,name=dirty,proto3" json:"dirty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ArtifactCollectorContext) Reset()         { *m = ArtifactCollectorContext{} }
func (m *ArtifactCollectorContext) String() string { return proto.CompactTextString(m) }
func (*ArtifactCollectorContext) ProtoMessage()    {}
func (*ArtifactCollectorContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecbffc830d4bd8f6, []int{4}
}

func (m *ArtifactCollectorContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactCollectorContext.Unmarshal(m, b)
}
func (m *ArtifactCollectorContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactCollectorContext.Marshal(b, m, deterministic)
}
func (m *ArtifactCollectorContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactCollectorContext.Merge(m, src)
}
func (m *ArtifactCollectorContext) XXX_Size() int {
	return xxx_messageInfo_ArtifactCollectorContext.Size(m)
}
func (m *ArtifactCollectorContext) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactCollectorContext.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactCollectorContext proto.InternalMessageInfo

func (m *ArtifactCollectorContext) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ArtifactCollectorContext) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *ArtifactCollectorContext) GetRequest() *ArtifactCollectorArgs {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ArtifactCollectorContext) GetBacktrace() string {
	if m != nil {
		return m.Backtrace
	}
	return ""
}

func (m *ArtifactCollectorContext) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ArtifactCollectorContext) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ArtifactCollectorContext) GetActiveTime() uint64 {
	if m != nil {
		return m.ActiveTime
	}
	return 0
}

func (m *ArtifactCollectorContext) GetTotalUploadedFiles() uint64 {
	if m != nil {
		return m.TotalUploadedFiles
	}
	return 0
}

func (m *ArtifactCollectorContext) GetTotalExpectedUploadedBytes() uint64 {
	if m != nil {
		return m.TotalExpectedUploadedBytes
	}
	return 0
}

func (m *ArtifactCollectorContext) GetTotalUploadedBytes() uint64 {
	if m != nil {
		return m.TotalUploadedBytes
	}
	return 0
}

func (m *ArtifactCollectorContext) GetTotalCollectedRows() uint64 {
	if m != nil {
		return m.TotalCollectedRows
	}
	return 0
}

func (m *ArtifactCollectorContext) GetNextResponseId() uint64 {
	if m != nil {
		return m.NextResponseId
	}
	return 0
}

func (m *ArtifactCollectorContext) GetExecutionDuration() int64 {
	if m != nil {
		return m.ExecutionDuration
	}
	return 0
}

func (m *ArtifactCollectorContext) GetState() ArtifactCollectorContext_State {
	if m != nil {
		return m.State
	}
	return ArtifactCollectorContext_UNSET
}

func (m *ArtifactCollectorContext) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ArtifactCollectorContext) GetUserNotified() bool {
	if m != nil {
		return m.UserNotified
	}
	return false
}

func (m *ArtifactCollectorContext) GetArtifactsWithResults() []string {
	if m != nil {
		return m.ArtifactsWithResults
	}
	return nil
}

func (m *ArtifactCollectorContext) GetUploadedFiles() []*ArtifactUploadedFileInfo {
	if m != nil {
		return m.UploadedFiles
	}
	return nil
}

func (m *ArtifactCollectorContext) GetLogs() []*proto2.LogMessage {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *ArtifactCollectorContext) GetDirty() bool {
	if m != nil {
		return m.Dirty
	}
	return false
}

// Artifacts to collect for each label.
type LabelEvents struct {
	Label                string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Artifacts            *ArtifactCollectorArgs `protobuf:"bytes,2,opt,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *LabelEvents) Reset()         { *m = LabelEvents{} }
func (m *LabelEvents) String() string { return proto.CompactTextString(m) }
func (*LabelEvents) ProtoMessage()    {}
func (*LabelEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecbffc830d4bd8f6, []int{5}
}

func (m *LabelEvents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelEvents.Unmarshal(m, b)
}
func (m *LabelEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelEvents.Marshal(b, m, deterministic)
}
func (m *LabelEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelEvents.Merge(m, src)
}
func (m *LabelEvents) XXX_Size() int {
	return xxx_messageInfo_LabelEvents.Size(m)
}
func (m *LabelEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelEvents.DiscardUnknown(m)
}

var xxx_messageInfo_LabelEvents proto.InternalMessageInfo

func (m *LabelEvents) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *LabelEvents) GetArtifacts() *ArtifactCollectorArgs {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

// This is stored in the ArtifactCollector state.
type ClientEventTable struct {
	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Artifacts to collect from ALL clients.
	Artifacts            *ArtifactCollectorArgs `protobuf:"bytes,2,opt,name=artifacts,proto3" json:"artifacts,omitempty"`
	LabelEvents          []*LabelEvents         `protobuf:"bytes,3,rep,name=label_events,json=labelEvents,proto3" json:"label_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ClientEventTable) Reset()         { *m = ClientEventTable{} }
func (m *ClientEventTable) String() string { return proto.CompactTextString(m) }
func (*ClientEventTable) ProtoMessage()    {}
func (*ClientEventTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecbffc830d4bd8f6, []int{6}
}

func (m *ClientEventTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientEventTable.Unmarshal(m, b)
}
func (m *ClientEventTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientEventTable.Marshal(b, m, deterministic)
}
func (m *ClientEventTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientEventTable.Merge(m, src)
}
func (m *ClientEventTable) XXX_Size() int {
	return xxx_messageInfo_ClientEventTable.Size(m)
}
func (m *ClientEventTable) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientEventTable.DiscardUnknown(m)
}

var xxx_messageInfo_ClientEventTable proto.InternalMessageInfo

func (m *ClientEventTable) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ClientEventTable) GetArtifacts() *ArtifactCollectorArgs {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *ClientEventTable) GetLabelEvents() []*LabelEvents {
	if m != nil {
		return m.LabelEvents
	}
	return nil
}

type UploadedFileInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VfsPath              string   `protobuf:"bytes,2,opt,name=vfs_path,json=vfsPath,proto3" json:"vfs_path,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadedFileInfo) Reset()         { *m = UploadedFileInfo{} }
func (m *UploadedFileInfo) String() string { return proto.CompactTextString(m) }
func (*UploadedFileInfo) ProtoMessage()    {}
func (*UploadedFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecbffc830d4bd8f6, []int{7}
}

func (m *UploadedFileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadedFileInfo.Unmarshal(m, b)
}
func (m *UploadedFileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadedFileInfo.Marshal(b, m, deterministic)
}
func (m *UploadedFileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadedFileInfo.Merge(m, src)
}
func (m *UploadedFileInfo) XXX_Size() int {
	return xxx_messageInfo_UploadedFileInfo.Size(m)
}
func (m *UploadedFileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadedFileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UploadedFileInfo proto.InternalMessageInfo

func (m *UploadedFileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadedFileInfo) GetVfsPath() string {
	if m != nil {
		return m.VfsPath
	}
	return ""
}

func (m *UploadedFileInfo) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.ArtifactCollectorContext_State", ArtifactCollectorContext_State_name, ArtifactCollectorContext_State_value)
	proto.RegisterType((*ArtifactParameters)(nil), "proto.ArtifactParameters")
	proto.RegisterType((*ArtifactCollectorArgs)(nil), "proto.ArtifactCollectorArgs")
	proto.RegisterType((*ArtifactCollectorResponse)(nil), "proto.ArtifactCollectorResponse")
	proto.RegisterType((*ArtifactUploadedFileInfo)(nil), "proto.ArtifactUploadedFileInfo")
	proto.RegisterType((*ArtifactCollectorContext)(nil), "proto.ArtifactCollectorContext")
	proto.RegisterType((*LabelEvents)(nil), "proto.LabelEvents")
	proto.RegisterType((*ClientEventTable)(nil), "proto.ClientEventTable")
	proto.RegisterType((*UploadedFileInfo)(nil), "proto.UploadedFileInfo")
}

func init() {
	proto.RegisterFile("artifact_collector.proto", fileDescriptor_ecbffc830d4bd8f6)
}

var fileDescriptor_ecbffc830d4bd8f6 = []byte{
	// 1381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xc6, 0x71, 0x62, 0xc7, 0xe3, 0x24, 0xb8, 0xa3, 0xb4, 0xd9, 0xa4, 0x29, 0x1d, 0x6d, 0x55,
	0xc9, 0x20, 0xe1, 0xa4, 0xa9, 0x5a, 0x24, 0x10, 0x48, 0xb1, 0xe3, 0x50, 0x8b, 0xe0, 0xa4, 0x9b,
	0xa4, 0x95, 0xb8, 0x59, 0x8d, 0x77, 0x8f, 0xed, 0x69, 0xd7, 0x3b, 0xdb, 0x99, 0x59, 0xdb, 0xe9,
	0x05, 0x6f, 0xc0, 0x1d, 0xf7, 0x7d, 0x19, 0x9e, 0x04, 0x5e, 0x80, 0x07, 0xe0, 0x02, 0xcd, 0xcc,
	0xae, 0x1d, 0x27, 0x20, 0x84, 0x10, 0xbe, 0xf1, 0xce, 0xf9, 0xce, 0x99, 0x33, 0xe7, 0xef, 0x9b,
	0x41, 0x0e, 0x15, 0x8a, 0xf5, 0x69, 0xa0, 0xfc, 0x80, 0x47, 0x11, 0x04, 0x8a, 0x8b, 0x46, 0x22,
	0xb8, 0xe2, 0x78, 0xc5, 0xfc, 0xed, 0x6c, 0x9a, 0xbf, 0x3d, 0x09, 0x23, 0x1a, 0x2b, 0x16, 0x58,
	0x70, 0x67, 0x8b, 0x06, 0x8a, 0xf1, 0x58, 0xee, 0x59, 0x74, 0xfc, 0x2e, 0xca, 0x81, 0x40, 0x5c,
	0x25, 0x8a, 0x67, 0xf2, 0x37, 0xbc, 0x27, 0x2d, 0xe0, 0xbe, 0x47, 0xf8, 0x30, 0x73, 0x75, 0x46,
	0x05, 0x1d, 0x81, 0x02, 0x21, 0x71, 0x88, 0x8a, 0x10, 0x8f, 0x9d, 0x22, 0x29, 0xd6, 0xab, 0x07,
	0xeb, 0x56, 0xb5, 0xf1, 0xea, 0xe5, 0x49, 0x3b, 0x1e, 0x37, 0x5b, 0xbf, 0xfe, 0xf1, 0xdb, 0x2f,
	0x85, 0xaf, 0xf1, 0xd3, 0x76, 0x3c, 0x66, 0x82, 0xc7, 0x23, 0x88, 0x15, 0x19, 0x53, 0xc1, 0x68,
	0x2f, 0x02, 0x49, 0x14, 0x27, 0x3d, 0x20, 0x89, 0xe0, 0x63, 0x16, 0x42, 0x48, 0xfa, 0x5c, 0x10,
	0x35, 0x04, 0xf2, 0x2e, 0x05, 0x71, 0xd5, 0x70, 0x4b, 0xc6, 0x89, 0xf4, 0xf4, 0xf6, 0xee, 0xcf,
	0x25, 0x74, 0x37, 0x77, 0xde, 0xca, 0xc3, 0x3c, 0x14, 0x03, 0x89, 0x1d, 0x54, 0x0e, 0x04, 0x50,
	0xc5, 0x85, 0x53, 0x20, 0x85, 0x7a, 0xc5, 0xcb, 0x97, 0xf8, 0x3e, 0xaa, 0x04, 0x11, 0x83, 0x58,
	0xf9, 0x2c, 0x74, 0x8a, 0x06, 0x5b, 0xb5, 0x82, 0x4e, 0x88, 0xef, 0xa1, 0x52, 0x2a, 0x06, 0x10,
	0x2b, 0xe7, 0x2e, 0x29, 0xd4, 0x57, 0xbd, 0x6c, 0x85, 0x8f, 0x51, 0x25, 0xcf, 0xa7, 0x74, 0x96,
	0x48, 0xb1, 0x5e, 0x69, 0xd6, 0x4d, 0x14, 0x2e, 0x76, 0x2e, 0x86, 0x40, 0x66, 0xa0, 0x3e, 0x7d,
	0x44, 0xd3, 0x38, 0x18, 0x36, 0xdc, 0xd2, 0x89, 0xf9, 0xf0, 0xe6, 0xa6, 0xf8, 0x2d, 0x42, 0xc9,
	0x2c, 0x49, 0xce, 0x0a, 0x29, 0xd4, 0xab, 0x07, 0xdb, 0x59, 0x76, 0x6e, 0x67, 0xb1, 0xb9, 0x6f,
	0x7c, 0x7c, 0x86, 0x77, 0xe7, 0x32, 0xed, 0x40, 0x5d, 0xf7, 0xd8, 0x70, 0xd1, 0x1c, 0xf5, 0xae,
	0x6d, 0x8f, 0xdf, 0xa0, 0x0d, 0x9e, 0x48, 0x3f, 0x01, 0xe1, 0x4b, 0x08, 0x78, 0x1c, 0x3a, 0x25,
	0x52, 0xa8, 0x2f, 0x35, 0x8f, 0xcc, 0xae, 0xdf, 0xe0, 0x47, 0xa7, 0x09, 0x08, 0x6a, 0xca, 0x4d,
	0x12, 0x10, 0xc4, 0x2a, 0x91, 0xfa, 0xc5, 0x50, 0x70, 0xa5, 0x22, 0x16, 0x0f, 0x3e, 0x6d, 0xb8,
	0x1b, 0xa7, 0x89, 0x24, 0x67, 0x20, 0xc8, 0xb9, 0x41, 0x0f, 0xca, 0x4f, 0xf6, 0xcd, 0xcf, 0x5b,
	0xe3, 0x89, 0x3c, 0x03, 0x61, 0xc5, 0x18, 0x50, 0x59, 0xb1, 0x11, 0xf0, 0x54, 0x39, 0x65, 0x52,
	0xa8, 0x2f, 0x37, 0xbf, 0x33, 0x4e, 0xda, 0xf8, 0x59, 0x37, 0x1d, 0xf5, 0x40, 0x10, 0xde, 0xcf,
	0xf6, 0x37, 0x11, 0x88, 0x34, 0x26, 0x3d, 0xe8, 0x73, 0x01, 0x24, 0xa0, 0x71, 0x00, 0x91, 0xf6,
	0x76, 0xbd, 0xcc, 0xe5, 0x0b, 0xbb, 0xdb, 0x41, 0xf1, 0xf9, 0xfe, 0xbe, 0x97, 0xef, 0x8d, 0xb7,
	0xd1, 0xea, 0x88, 0x4e, 0x7d, 0xc1, 0x27, 0xd2, 0xb9, 0xa7, 0xfd, 0x78, 0xe5, 0x11, 0x9d, 0x7a,
	0x7c, 0x22, 0x71, 0x1d, 0xd5, 0x34, 0x94, 0x26, 0x11, 0xa7, 0xa1, 0xdf, 0xbb, 0x52, 0x20, 0x9d,
	0x2d, 0xa3, 0xb2, 0x31, 0xa2, 0xd3, 0x4b, 0x23, 0x6e, 0x6a, 0x29, 0xfe, 0xa9, 0x80, 0xee, 0xd1,
	0x28, 0xe2, 0x13, 0x3f, 0x48, 0xa5, 0xe2, 0x23, 0x9f, 0x8f, 0x41, 0x08, 0x16, 0x82, 0x74, 0x56,
	0x75, 0xd5, 0x9b, 0xaf, 0xcd, 0xd9, 0x5f, 0xe2, 0xd3, 0x4e, 0x9f, 0x28, 0x91, 0x02, 0x99, 0x00,
	0x99, 0xb0, 0x28, 0x22, 0xa9, 0x04, 0x42, 0x89, 0xb5, 0x9a, 0x55, 0x80, 0xb0, 0x3e, 0x49, 0x04,
	0x48, 0xdd, 0xc5, 0x2c, 0x96, 0x0a, 0x68, 0xa8, 0xa3, 0xd5, 0xc1, 0xc4, 0x74, 0x04, 0xe1, 0x4c,
	0xb1, 0xe1, 0x6d, 0x1a, 0xb7, 0x2d, 0x63, 0x7f, 0x9a, 0x3b, 0xc5, 0xa7, 0x68, 0x2b, 0xe0, 0xa3,
	0x84, 0x45, 0x10, 0xce, 0x87, 0xd5, 0xa7, 0x62, 0x20, 0x9d, 0x4d, 0x33, 0x3f, 0x5b, 0xf3, 0xf9,
	0x59, 0xe8, 0x72, 0xef, 0x6e, 0x6e, 0xb7, 0x20, 0x76, 0x23, 0xb4, 0x7d, 0x6b, 0x2a, 0x3c, 0x90,
	0x09, 0x8f, 0x25, 0xe0, 0x2d, 0x54, 0xee, 0xeb, 0xd8, 0x59, 0x98, 0x4d, 0x46, 0x49, 0x2f, 0x3b,
	0x21, 0x7e, 0x8e, 0xca, 0x02, 0xde, 0xa5, 0x20, 0x95, 0xb3, 0x64, 0x1a, 0x73, 0xf7, 0x46, 0x63,
	0x2e, 0xfa, 0xce, 0x95, 0xdd, 0x1f, 0x91, 0x93, 0x6b, 0xd8, 0x2c, 0x43, 0x78, 0xcc, 0x22, 0xe8,
	0xc4, 0x7d, 0x8e, 0x31, 0x5a, 0xd6, 0x39, 0xc8, 0x3c, 0x99, 0x6f, 0x5d, 0xc3, 0x71, 0x5f, 0xfa,
	0x09, 0x55, 0x43, 0xe3, 0xa8, 0xe2, 0x95, 0xc7, 0x7d, 0x79, 0x46, 0xd5, 0x50, 0xab, 0x4b, 0xf6,
	0x1e, 0xcc, 0x58, 0x2e, 0x7b, 0xe6, 0x1b, 0x3f, 0x44, 0x55, 0xa9, 0xb8, 0x80, 0xd0, 0x37, 0xd0,
	0xb2, 0x81, 0x90, 0x15, 0x9d, 0xb3, 0xf7, 0xe0, 0xfe, 0xbe, 0x3a, 0x3f, 0xc0, 0xec, 0x88, 0x2d,
	0x1e, 0x2b, 0x98, 0xaa, 0xc5, 0x69, 0xbf, 0x7f, 0x63, 0xda, 0x1f, 0x20, 0x24, 0x41, 0x4a, 0xc6,
	0x63, 0x8d, 0xae, 0x1b, 0xb4, 0x92, 0x49, 0x16, 0x13, 0x52, 0xfd, 0x17, 0x09, 0xc1, 0xbb, 0xa8,
	0xd2, 0xa3, 0xc1, 0x5b, 0x25, 0x68, 0x90, 0x47, 0x3e, 0x17, 0xe8, 0x78, 0x0c, 0x15, 0x81, 0xaf,
	0x9b, 0x3a, 0x0b, 0x15, 0x59, 0x91, 0x6e, 0x7a, 0x73, 0x2a, 0x45, 0x85, 0xb2, 0x38, 0x36, 0x78,
	0xc5, 0x48, 0x0c, 0xfc, 0x10, 0x55, 0x35, 0x47, 0x8f, 0x33, 0xfb, 0x3b, 0xd6, 0xde, 0x8a, 0x8c,
	0xc2, 0x3e, 0xda, 0x54, 0x5c, 0xd1, 0x28, 0x1b, 0x05, 0x08, 0xfd, 0x3e, 0x8b, 0x66, 0xc3, 0x80,
	0x0d, 0x76, 0xbd, 0x50, 0x12, 0x1f, 0xa2, 0x07, 0xd6, 0x02, 0xa6, 0x09, 0x04, 0x0a, 0xc2, 0xb9,
	0xa9, 0x9d, 0xa3, 0x6d, 0x63, 0xba, 0x63, 0x94, 0xda, 0x99, 0x4e, 0xbe, 0x85, 0x9d, 0xa9, 0xdb,
	0x4e, 0xad, 0xe5, 0xce, 0x5f, 0x38, 0xbd, 0x61, 0x91, 0xb5, 0x3c, 0x84, 0x76, 0xac, 0x77, 0xaf,
	0x59, 0xb4, 0x72, 0x28, 0x9f, 0xf0, 0x18, 0xa6, 0xca, 0x17, 0x59, 0x2b, 0xeb, 0xa2, 0x7d, 0x62,
	0x27, 0x5c, 0xcb, 0xf3, 0x0e, 0xef, 0x84, 0xf8, 0x73, 0x84, 0x61, 0x0a, 0x41, 0xaa, 0xb9, 0xcd,
	0x0f, 0x53, 0x4b, 0x72, 0xce, 0x03, 0x52, 0xa8, 0x17, 0xbd, 0x3b, 0x33, 0xe4, 0x28, 0x03, 0xf0,
	0x57, 0x68, 0x45, 0x2a, 0xaa, 0xc0, 0xd9, 0x20, 0x85, 0xfa, 0xc6, 0xc1, 0xe3, 0xbf, 0x2b, 0x73,
	0xd6, 0x54, 0x8d, 0x73, 0xad, 0xec, 0x59, 0x1b, 0x7c, 0x8a, 0x4a, 0xfa, 0x23, 0x95, 0xce, 0xc7,
	0xba, 0xd4, 0xcd, 0x2f, 0x0c, 0x79, 0x3c, 0xc1, 0x7b, 0x46, 0x3b, 0x56, 0x52, 0x93, 0x01, 0x8d,
	0x09, 0x08, 0xc1, 0x05, 0xb1, 0xaa, 0xc4, 0x90, 0x45, 0xef, 0xca, 0x90, 0x84, 0x6d, 0xc7, 0x86,
	0x97, 0x6d, 0x83, 0x1f, 0xa1, 0xf5, 0x54, 0x82, 0xf0, 0x63, 0xae, 0x58, 0x9f, 0x41, 0xe8, 0xd4,
	0xcc, 0x55, 0xb4, 0xa6, 0x85, 0xdd, 0x4c, 0x86, 0x3f, 0x68, 0x0e, 0xcb, 0xaf, 0x00, 0x7f, 0xc2,
	0xd4, 0x50, 0xa7, 0x25, 0x8d, 0x94, 0xe6, 0x45, 0x7d, 0x3d, 0x31, 0x73, 0x8c, 0x00, 0x53, 0x7d,
	0x3d, 0xf5, 0xd3, 0x28, 0x22, 0x7a, 0xe0, 0x6e, 0xdd, 0x1e, 0x44, 0x9b, 0x6a, 0x11, 0x13, 0x24,
	0xdb, 0xa0, 0x41, 0x2e, 0x86, 0x4c, 0x12, 0x45, 0xdf, 0xea, 0xcb, 0x58, 0x5b, 0x73, 0x71, 0x8d,
	0xed, 0xf4, 0x0c, 0xef, 0x49, 0x9e, 0x8a, 0xc0, 0xf2, 0x9b, 0x66, 0xb5, 0x7c, 0xb7, 0xd7, 0x4c,
	0x0d, 0x3d, 0xbb, 0x0b, 0x3e, 0x46, 0x1b, 0x37, 0x1a, 0xd0, 0x31, 0x64, 0xf6, 0xf0, 0x46, 0x76,
	0x6f, 0x72, 0x86, 0xb7, 0x9e, 0x2e, 0x34, 0xe7, 0x63, 0xb4, 0x1c, 0xf1, 0x19, 0x15, 0xde, 0xc9,
	0xac, 0x4f, 0xf8, 0xe0, 0x7b, 0x90, 0x92, 0x0e, 0xc0, 0x33, 0x30, 0xde, 0x44, 0x2b, 0x21, 0x13,
	0xea, 0xca, 0x50, 0xca, 0xaa, 0x67, 0x17, 0xee, 0x25, 0x5a, 0x31, 0xc5, 0xc2, 0x15, 0xb4, 0x72,
	0xd9, 0x3d, 0x6f, 0x5f, 0xd4, 0x3e, 0xc2, 0x55, 0x54, 0xf6, 0x2e, 0xbb, 0xdd, 0x4e, 0xf7, 0xdb,
	0x5a, 0x01, 0xaf, 0xa1, 0xd5, 0xe3, 0x4e, 0xb7, 0x73, 0xfe, 0xa2, 0x7d, 0x54, 0x5b, 0xd2, 0x5a,
	0x6d, 0xcf, 0x3b, 0xf5, 0x6a, 0x45, 0x0d, 0x1c, 0x7a, 0xad, 0x17, 0x9d, 0x57, 0xed, 0xa3, 0xda,
	0x32, 0x5e, 0x47, 0x95, 0xd6, 0x61, 0xb7, 0xd5, 0x3e, 0x39, 0x69, 0x1f, 0xd5, 0x56, 0x5c, 0x1f,
	0x55, 0x4f, 0x68, 0x0f, 0xa2, 0xf6, 0x58, 0x17, 0x58, 0xfb, 0x8e, 0xf4, 0x32, 0x1b, 0x76, 0xbb,
	0xc0, 0x5f, 0x2e, 0xbe, 0x19, 0xfe, 0x99, 0x40, 0xe6, 0xea, 0xee, 0x87, 0x02, 0xaa, 0xb5, 0x4c,
	0x5f, 0x18, 0x17, 0x17, 0xfa, 0x65, 0xa4, 0xdf, 0x34, 0x63, 0x10, 0x9a, 0x9c, 0x8c, 0xa3, 0x65,
	0x2f, 0x5f, 0xfe, 0x17, 0x57, 0xf8, 0x19, 0x5a, 0x33, 0xe7, 0xf5, 0xc1, 0x04, 0x93, 0x3d, 0xd9,
	0x70, 0x9e, 0xe7, 0x79, 0x98, 0x5e, 0x35, 0x9a, 0x2f, 0xdc, 0x4b, 0x54, 0xfb, 0x1f, 0xd8, 0xbe,
	0xf9, 0xf4, 0x87, 0x27, 0x93, 0xc9, 0xa4, 0x31, 0x86, 0x88, 0x07, 0x2c, 0x84, 0x69, 0x23, 0xe0,
	0xa3, 0xbd, 0x01, 0x8f, 0x68, 0x3c, 0xd8, 0xb3, 0x42, 0x41, 0x13, 0xc5, 0xc5, 0x9e, 0xbe, 0xb4,
	0xb2, 0x57, 0x6a, 0xaf, 0x64, 0xfe, 0x9e, 0xfe, 0x19, 0x00, 0x00, 0xff, 0xff, 0x80, 0x2d, 0x28,
	0x81, 0xf4, 0x0a, 0x00, 0x00,
}
