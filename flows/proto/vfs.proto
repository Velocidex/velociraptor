syntax = "proto3";

import "proto/semantic.proto";

package proto;

option go_package = "www.velocidex.com/golang/velociraptor/flows/proto";

// This is stored in the VFS datastores to indicate where the actual
// download exist (usually in the flow filestore).
message VFSDownloadInfo {
    // Deprecated but leave it here so we can read older files
    // downloaded within the filestore.
    string vfs_path = 1;

    // The filename for this download within its directory.
    string name = 11;

    uint64 size = 2;
    uint64 mtime = 3;
    bool sparse = 4;
    string MD5 = 5;
    string SHA256 = 6;

    // The VFS path is now expressed as a list of components
    repeated string components = 7;

    // The flow that fetched this file.
    string flow_id = 8;

    // If set this flow is currently in flight.
    bool in_flight = 9;

    // If the collection resulted in an error, show this here.
    string error = 10;
}

message ClientMonitoringState {
    uint64 version = 1 [(sem_type) = {
            description: "The client's reported version.",
        }];

    uint64 last_update_timestamp = 2 [(sem_type) = {
            description: "The last time we updated the client."
        }];
}