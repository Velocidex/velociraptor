// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flows.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
	proto1 "www.velocidex.com/golang/velociraptor/crypto/proto"
	_ "www.velocidex.com/golang/velociraptor/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FlowContext_State int32

const (
	FlowContext_UNSET      FlowContext_State = 0
	FlowContext_RUNNING    FlowContext_State = 1
	FlowContext_TERMINATED FlowContext_State = 2
	FlowContext_ERROR      FlowContext_State = 3
)

var FlowContext_State_name = map[int32]string{
	0: "UNSET",
	1: "RUNNING",
	2: "TERMINATED",
	3: "ERROR",
}

var FlowContext_State_value = map[string]int32{
	"UNSET":      0,
	"RUNNING":    1,
	"TERMINATED": 2,
	"ERROR":      3,
}

func (x FlowContext_State) String() string {
	return proto.EnumName(FlowContext_State_name, int32(x))
}

func (FlowContext_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{2, 0}
}

type StartFlowRequest struct {
	RunnerArgs           *FlowRunnerArgs `protobuf:"bytes,1,opt,name=runner_args,json=runnerArgs,proto3" json:"runner_args,omitempty"`
	Args                 *any.Any        `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StartFlowRequest) Reset()         { *m = StartFlowRequest{} }
func (m *StartFlowRequest) String() string { return proto.CompactTextString(m) }
func (*StartFlowRequest) ProtoMessage()    {}
func (*StartFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{0}
}

func (m *StartFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowRequest.Unmarshal(m, b)
}
func (m *StartFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowRequest.Marshal(b, m, deterministic)
}
func (m *StartFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowRequest.Merge(m, src)
}
func (m *StartFlowRequest) XXX_Size() int {
	return xxx_messageInfo_StartFlowRequest.Size(m)
}
func (m *StartFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowRequest proto.InternalMessageInfo

func (m *StartFlowRequest) GetRunnerArgs() *FlowRunnerArgs {
	if m != nil {
		return m.RunnerArgs
	}
	return nil
}

func (m *StartFlowRequest) GetArgs() *any.Any {
	if m != nil {
		return m.Args
	}
	return nil
}

type UploadedFileInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VfsPath              string   `protobuf:"bytes,2,opt,name=vfs_path,json=vfsPath,proto3" json:"vfs_path,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadedFileInfo) Reset()         { *m = UploadedFileInfo{} }
func (m *UploadedFileInfo) String() string { return proto.CompactTextString(m) }
func (*UploadedFileInfo) ProtoMessage()    {}
func (*UploadedFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{1}
}

func (m *UploadedFileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadedFileInfo.Unmarshal(m, b)
}
func (m *UploadedFileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadedFileInfo.Marshal(b, m, deterministic)
}
func (m *UploadedFileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadedFileInfo.Merge(m, src)
}
func (m *UploadedFileInfo) XXX_Size() int {
	return xxx_messageInfo_UploadedFileInfo.Size(m)
}
func (m *UploadedFileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadedFileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UploadedFileInfo proto.InternalMessageInfo

func (m *UploadedFileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadedFileInfo) GetVfsPath() string {
	if m != nil {
		return m.VfsPath
	}
	return ""
}

func (m *UploadedFileInfo) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

// The flow context.
// Next field: 19
type FlowContext struct {
	Backtrace            string                  `protobuf:"bytes,1,opt,name=backtrace,proto3" json:"backtrace,omitempty"`
	ClientResources      *proto1.ClientResources `protobuf:"bytes,2,opt,name=client_resources,json=clientResources,proto3" json:"client_resources,omitempty"`
	CreateTime           uint64                  `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	CurrentState         string                  `protobuf:"bytes,5,opt,name=current_state,json=currentState,proto3" json:"current_state,omitempty"`
	KillTimestamp        uint64                  `protobuf:"varint,6,opt,name=kill_timestamp,json=killTimestamp,proto3" json:"kill_timestamp,omitempty"`
	NetworkBytesSent     uint64                  `protobuf:"varint,7,opt,name=network_bytes_sent,json=networkBytesSent,proto3" json:"network_bytes_sent,omitempty"`
	NextOutboundId       uint64                  `protobuf:"varint,8,opt,name=next_outbound_id,json=nextOutboundId,proto3" json:"next_outbound_id,omitempty"`
	NextProcessedRequest uint64                  `protobuf:"varint,9,opt,name=next_processed_request,json=nextProcessedRequest,proto3" json:"next_processed_request,omitempty"`
	OutstandingRequests  uint64                  `protobuf:"varint,11,opt,name=outstanding_requests,json=outstandingRequests,proto3" json:"outstanding_requests,omitempty"`
	TotalResults         uint64                  `protobuf:"varint,18,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	// Deprecated: Uploads are now stored in a csv file.
	UploadedFiles              []*UploadedFileInfo  `protobuf:"bytes,24,rep,name=uploaded_files,json=uploadedFiles,proto3" json:"uploaded_files,omitempty"`
	TotalUploadedFiles         uint64               `protobuf:"varint,23,opt,name=total_uploaded_files,json=totalUploadedFiles,proto3" json:"total_uploaded_files,omitempty"`
	TotalExpectedUploadedBytes uint64               `protobuf:"varint,25,opt,name=total_expected_uploaded_bytes,json=totalExpectedUploadedBytes,proto3" json:"total_expected_uploaded_bytes,omitempty"`
	TotalUploadedBytes         uint64               `protobuf:"varint,26,opt,name=total_uploaded_bytes,json=totalUploadedBytes,proto3" json:"total_uploaded_bytes,omitempty"`
	Logs                       []*proto1.LogMessage `protobuf:"bytes,20,rep,name=logs,proto3" json:"logs,omitempty"`
	SessionId                  string               `protobuf:"bytes,13,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	State                      FlowContext_State    `protobuf:"varint,14,opt,name=state,proto3,enum=proto.FlowContext_State" json:"state,omitempty"`
	Status                     string               `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	UserNotified               bool                 `protobuf:"varint,16,opt,name=user_notified,json=userNotified,proto3" json:"user_notified,omitempty"`
	ActiveTime                 uint64               `protobuf:"varint,17,opt,name=active_time,json=activeTime,proto3" json:"active_time,omitempty"`
	Artifacts                  []string             `protobuf:"bytes,21,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	ArtifactsWithResults       []string             `protobuf:"bytes,22,rep,name=artifacts_with_results,json=artifactsWithResults,proto3" json:"artifacts_with_results,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}             `json:"-"`
	XXX_unrecognized           []byte               `json:"-"`
	XXX_sizecache              int32                `json:"-"`
}

func (m *FlowContext) Reset()         { *m = FlowContext{} }
func (m *FlowContext) String() string { return proto.CompactTextString(m) }
func (*FlowContext) ProtoMessage()    {}
func (*FlowContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{2}
}

func (m *FlowContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowContext.Unmarshal(m, b)
}
func (m *FlowContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowContext.Marshal(b, m, deterministic)
}
func (m *FlowContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowContext.Merge(m, src)
}
func (m *FlowContext) XXX_Size() int {
	return xxx_messageInfo_FlowContext.Size(m)
}
func (m *FlowContext) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowContext.DiscardUnknown(m)
}

var xxx_messageInfo_FlowContext proto.InternalMessageInfo

func (m *FlowContext) GetBacktrace() string {
	if m != nil {
		return m.Backtrace
	}
	return ""
}

func (m *FlowContext) GetClientResources() *proto1.ClientResources {
	if m != nil {
		return m.ClientResources
	}
	return nil
}

func (m *FlowContext) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *FlowContext) GetCurrentState() string {
	if m != nil {
		return m.CurrentState
	}
	return ""
}

func (m *FlowContext) GetKillTimestamp() uint64 {
	if m != nil {
		return m.KillTimestamp
	}
	return 0
}

func (m *FlowContext) GetNetworkBytesSent() uint64 {
	if m != nil {
		return m.NetworkBytesSent
	}
	return 0
}

func (m *FlowContext) GetNextOutboundId() uint64 {
	if m != nil {
		return m.NextOutboundId
	}
	return 0
}

func (m *FlowContext) GetNextProcessedRequest() uint64 {
	if m != nil {
		return m.NextProcessedRequest
	}
	return 0
}

func (m *FlowContext) GetOutstandingRequests() uint64 {
	if m != nil {
		return m.OutstandingRequests
	}
	return 0
}

func (m *FlowContext) GetTotalResults() uint64 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

func (m *FlowContext) GetUploadedFiles() []*UploadedFileInfo {
	if m != nil {
		return m.UploadedFiles
	}
	return nil
}

func (m *FlowContext) GetTotalUploadedFiles() uint64 {
	if m != nil {
		return m.TotalUploadedFiles
	}
	return 0
}

func (m *FlowContext) GetTotalExpectedUploadedBytes() uint64 {
	if m != nil {
		return m.TotalExpectedUploadedBytes
	}
	return 0
}

func (m *FlowContext) GetTotalUploadedBytes() uint64 {
	if m != nil {
		return m.TotalUploadedBytes
	}
	return 0
}

func (m *FlowContext) GetLogs() []*proto1.LogMessage {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *FlowContext) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *FlowContext) GetState() FlowContext_State {
	if m != nil {
		return m.State
	}
	return FlowContext_UNSET
}

func (m *FlowContext) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *FlowContext) GetUserNotified() bool {
	if m != nil {
		return m.UserNotified
	}
	return false
}

func (m *FlowContext) GetActiveTime() uint64 {
	if m != nil {
		return m.ActiveTime
	}
	return 0
}

func (m *FlowContext) GetArtifacts() []string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *FlowContext) GetArtifactsWithResults() []string {
	if m != nil {
		return m.ArtifactsWithResults
	}
	return nil
}

// Next field: 23
type FlowRunnerArgs struct {
	Creator              string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NotifyToUser         bool     `protobuf:"varint,2,opt,name=notify_to_user,json=notifyToUser,proto3" json:"notify_to_user,omitempty"`
	ClientId             string   `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	CpuLimit             uint64   `protobuf:"varint,9,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`
	NetworkBytesLimit    uint64   `protobuf:"varint,13,opt,name=network_bytes_limit,json=networkBytesLimit,proto3" json:"network_bytes_limit,omitempty"`
	FlowName             string   `protobuf:"bytes,11,opt,name=flow_name,json=flowName,proto3" json:"flow_name,omitempty"`
	StartTime            uint64   `protobuf:"varint,15,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Args                 *any.Any `protobuf:"bytes,24,opt,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlowRunnerArgs) Reset()         { *m = FlowRunnerArgs{} }
func (m *FlowRunnerArgs) String() string { return proto.CompactTextString(m) }
func (*FlowRunnerArgs) ProtoMessage()    {}
func (*FlowRunnerArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{3}
}

func (m *FlowRunnerArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowRunnerArgs.Unmarshal(m, b)
}
func (m *FlowRunnerArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowRunnerArgs.Marshal(b, m, deterministic)
}
func (m *FlowRunnerArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowRunnerArgs.Merge(m, src)
}
func (m *FlowRunnerArgs) XXX_Size() int {
	return xxx_messageInfo_FlowRunnerArgs.Size(m)
}
func (m *FlowRunnerArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowRunnerArgs.DiscardUnknown(m)
}

var xxx_messageInfo_FlowRunnerArgs proto.InternalMessageInfo

func (m *FlowRunnerArgs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *FlowRunnerArgs) GetNotifyToUser() bool {
	if m != nil {
		return m.NotifyToUser
	}
	return false
}

func (m *FlowRunnerArgs) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *FlowRunnerArgs) GetCpuLimit() uint64 {
	if m != nil {
		return m.CpuLimit
	}
	return 0
}

func (m *FlowRunnerArgs) GetNetworkBytesLimit() uint64 {
	if m != nil {
		return m.NetworkBytesLimit
	}
	return 0
}

func (m *FlowRunnerArgs) GetFlowName() string {
	if m != nil {
		return m.FlowName
	}
	return ""
}

func (m *FlowRunnerArgs) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *FlowRunnerArgs) GetArgs() *any.Any {
	if m != nil {
		return m.Args
	}
	return nil
}

// This is a short lived protobuf to hold various flow state
// information only valid between the start and end of the flow. It is
// used to keep state over multiple client round trips.
type VelociraptorFlowState struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Payload              *any.Any `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VelociraptorFlowState) Reset()         { *m = VelociraptorFlowState{} }
func (m *VelociraptorFlowState) String() string { return proto.CompactTextString(m) }
func (*VelociraptorFlowState) ProtoMessage()    {}
func (*VelociraptorFlowState) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{4}
}

func (m *VelociraptorFlowState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VelociraptorFlowState.Unmarshal(m, b)
}
func (m *VelociraptorFlowState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VelociraptorFlowState.Marshal(b, m, deterministic)
}
func (m *VelociraptorFlowState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VelociraptorFlowState.Merge(m, src)
}
func (m *VelociraptorFlowState) XXX_Size() int {
	return xxx_messageInfo_VelociraptorFlowState.Size(m)
}
func (m *VelociraptorFlowState) XXX_DiscardUnknown() {
	xxx_messageInfo_VelociraptorFlowState.DiscardUnknown(m)
}

var xxx_messageInfo_VelociraptorFlowState proto.InternalMessageInfo

func (m *VelociraptorFlowState) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *VelociraptorFlowState) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Used to describe a flow. The UI uses this information to work out
// how to render the flow and create its form.
type FlowDescriptor struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FriendlyName         string   `protobuf:"bytes,2,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	Category             string   `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Doc                  string   `protobuf:"bytes,4,opt,name=doc,proto3" json:"doc,omitempty"`
	ArgsType             string   `protobuf:"bytes,5,opt,name=args_type,json=argsType,proto3" json:"args_type,omitempty"`
	DefaultArgs          *any.Any `protobuf:"bytes,6,opt,name=default_args,json=defaultArgs,proto3" json:"default_args,omitempty"`
	Behaviours           string   `protobuf:"bytes,7,opt,name=behaviours,proto3" json:"behaviours,omitempty"`
	Internal             bool     `protobuf:"varint,8,opt,name=internal,proto3" json:"internal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlowDescriptor) Reset()         { *m = FlowDescriptor{} }
func (m *FlowDescriptor) String() string { return proto.CompactTextString(m) }
func (*FlowDescriptor) ProtoMessage()    {}
func (*FlowDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{5}
}

func (m *FlowDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowDescriptor.Unmarshal(m, b)
}
func (m *FlowDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowDescriptor.Marshal(b, m, deterministic)
}
func (m *FlowDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowDescriptor.Merge(m, src)
}
func (m *FlowDescriptor) XXX_Size() int {
	return xxx_messageInfo_FlowDescriptor.Size(m)
}
func (m *FlowDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FlowDescriptor proto.InternalMessageInfo

func (m *FlowDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FlowDescriptor) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *FlowDescriptor) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *FlowDescriptor) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

func (m *FlowDescriptor) GetArgsType() string {
	if m != nil {
		return m.ArgsType
	}
	return ""
}

func (m *FlowDescriptor) GetDefaultArgs() *any.Any {
	if m != nil {
		return m.DefaultArgs
	}
	return nil
}

func (m *FlowDescriptor) GetBehaviours() string {
	if m != nil {
		return m.Behaviours
	}
	return ""
}

func (m *FlowDescriptor) GetInternal() bool {
	if m != nil {
		return m.Internal
	}
	return false
}

type AFF4FlowObject struct {
	Urn                  string          `protobuf:"bytes,1,opt,name=urn,proto3" json:"urn,omitempty"`
	RunnerArgs           *FlowRunnerArgs `protobuf:"bytes,2,opt,name=runner_args,json=runnerArgs,proto3" json:"runner_args,omitempty"`
	FlowContext          *FlowContext    `protobuf:"bytes,3,opt,name=flow_context,json=flowContext,proto3" json:"flow_context,omitempty"`
	FlowState            *any.Any        `protobuf:"bytes,4,opt,name=flow_state,json=flowState,proto3" json:"flow_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AFF4FlowObject) Reset()         { *m = AFF4FlowObject{} }
func (m *AFF4FlowObject) String() string { return proto.CompactTextString(m) }
func (*AFF4FlowObject) ProtoMessage()    {}
func (*AFF4FlowObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{6}
}

func (m *AFF4FlowObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AFF4FlowObject.Unmarshal(m, b)
}
func (m *AFF4FlowObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AFF4FlowObject.Marshal(b, m, deterministic)
}
func (m *AFF4FlowObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AFF4FlowObject.Merge(m, src)
}
func (m *AFF4FlowObject) XXX_Size() int {
	return xxx_messageInfo_AFF4FlowObject.Size(m)
}
func (m *AFF4FlowObject) XXX_DiscardUnknown() {
	xxx_messageInfo_AFF4FlowObject.DiscardUnknown(m)
}

var xxx_messageInfo_AFF4FlowObject proto.InternalMessageInfo

func (m *AFF4FlowObject) GetUrn() string {
	if m != nil {
		return m.Urn
	}
	return ""
}

func (m *AFF4FlowObject) GetRunnerArgs() *FlowRunnerArgs {
	if m != nil {
		return m.RunnerArgs
	}
	return nil
}

func (m *AFF4FlowObject) GetFlowContext() *FlowContext {
	if m != nil {
		return m.FlowContext
	}
	return nil
}

func (m *AFF4FlowObject) GetFlowState() *any.Any {
	if m != nil {
		return m.FlowState
	}
	return nil
}

type VQLNameTags struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VQLNameTags) Reset()         { *m = VQLNameTags{} }
func (m *VQLNameTags) String() string { return proto.CompactTextString(m) }
func (*VQLNameTags) ProtoMessage()    {}
func (*VQLNameTags) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{7}
}

func (m *VQLNameTags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VQLNameTags.Unmarshal(m, b)
}
func (m *VQLNameTags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VQLNameTags.Marshal(b, m, deterministic)
}
func (m *VQLNameTags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VQLNameTags.Merge(m, src)
}
func (m *VQLNameTags) XXX_Size() int {
	return xxx_messageInfo_VQLNameTags.Size(m)
}
func (m *VQLNameTags) XXX_DiscardUnknown() {
	xxx_messageInfo_VQLNameTags.DiscardUnknown(m)
}

var xxx_messageInfo_VQLNameTags proto.InternalMessageInfo

func (m *VQLNameTags) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VQLNameTags) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type VQLNameTagsState struct {
	Tags                 []*VQLNameTags `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VQLNameTagsState) Reset()         { *m = VQLNameTagsState{} }
func (m *VQLNameTagsState) String() string { return proto.CompactTextString(m) }
func (*VQLNameTagsState) ProtoMessage()    {}
func (*VQLNameTagsState) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6bd6ebccf1a7f18, []int{8}
}

func (m *VQLNameTagsState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VQLNameTagsState.Unmarshal(m, b)
}
func (m *VQLNameTagsState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VQLNameTagsState.Marshal(b, m, deterministic)
}
func (m *VQLNameTagsState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VQLNameTagsState.Merge(m, src)
}
func (m *VQLNameTagsState) XXX_Size() int {
	return xxx_messageInfo_VQLNameTagsState.Size(m)
}
func (m *VQLNameTagsState) XXX_DiscardUnknown() {
	xxx_messageInfo_VQLNameTagsState.DiscardUnknown(m)
}

var xxx_messageInfo_VQLNameTagsState proto.InternalMessageInfo

func (m *VQLNameTagsState) GetTags() []*VQLNameTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.FlowContext_State", FlowContext_State_name, FlowContext_State_value)
	proto.RegisterType((*StartFlowRequest)(nil), "proto.StartFlowRequest")
	proto.RegisterType((*UploadedFileInfo)(nil), "proto.uploaded_file_info")
	proto.RegisterType((*FlowContext)(nil), "proto.FlowContext")
	proto.RegisterType((*FlowRunnerArgs)(nil), "proto.FlowRunnerArgs")
	proto.RegisterType((*VelociraptorFlowState)(nil), "proto.VelociraptorFlowState")
	proto.RegisterType((*FlowDescriptor)(nil), "proto.FlowDescriptor")
	proto.RegisterType((*AFF4FlowObject)(nil), "proto.AFF4FlowObject")
	proto.RegisterType((*VQLNameTags)(nil), "proto.VQLNameTags")
	proto.RegisterType((*VQLNameTagsState)(nil), "proto.VQLNameTagsState")
}

func init() { proto.RegisterFile("flows.proto", fileDescriptor_b6bd6ebccf1a7f18) }

var fileDescriptor_b6bd6ebccf1a7f18 = []byte{
	// 1904 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xdd, 0x72, 0x1b, 0xb7,
	0x15, 0x2e, 0x2d, 0xda, 0x22, 0x41, 0x49, 0xa6, 0x61, 0x59, 0x59, 0x29, 0xe9, 0x04, 0x61, 0x3d,
	0xb1, 0xc6, 0xe3, 0x2e, 0x6d, 0x59, 0x69, 0x32, 0x4a, 0x63, 0x57, 0xd4, 0x8f, 0xcb, 0x19, 0x5b,
	0x4a, 0x21, 0x2a, 0x6e, 0x27, 0x99, 0xe1, 0x80, 0xbb, 0xe0, 0x12, 0xf1, 0x12, 0x60, 0x01, 0xac,
	0x68, 0xf6, 0x05, 0xfa, 0x14, 0x9d, 0xbe, 0x4c, 0xa7, 0x7d, 0x8f, 0xf6, 0xaa, 0xef, 0xd0, 0x8b,
	0x0e, 0x0e, 0xb0, 0x14, 0x25, 0x27, 0x9e, 0x44, 0x37, 0x5a, 0xe2, 0x7c, 0xe7, 0x7c, 0x38, 0xc0,
	0xf9, 0x03, 0x6a, 0x0c, 0x73, 0x35, 0x35, 0xf1, 0x44, 0x2b, 0xab, 0xf0, 0x4d, 0xf8, 0xb7, 0xb5,
	0x99, 0x29, 0x95, 0xe5, 0xbc, 0x0d, 0xbf, 0x06, 0xc5, 0xb0, 0xcd, 0xe4, 0xcc, 0x23, 0xb6, 0xf6,
	0xa6, 0xd3, 0x69, 0x7c, 0xc1, 0x73, 0x95, 0x88, 0x94, 0xbf, 0x8d, 0x13, 0x35, 0x6e, 0x67, 0x2a,
	0x67, 0x32, 0x6b, 0xfb, 0x45, 0xcd, 0x26, 0x56, 0x69, 0xaf, 0xd9, 0x36, 0x7c, 0xcc, 0xa4, 0x15,
	0x49, 0xd0, 0x7d, 0xfe, 0x73, 0x74, 0xdd, 0xb6, 0xfa, 0x63, 0x6e, 0x59, 0xca, 0x2c, 0x0b, 0x06,
	0xbe, 0xfa, 0x69, 0x06, 0x12, 0x3d, 0x9b, 0x58, 0x15, 0xec, 0x7c, 0xaf, 0x06, 0xc1, 0xbb, 0xd6,
	0x5f, 0x2b, 0xa8, 0x79, 0x66, 0x99, 0xb6, 0xc7, 0xb9, 0x9a, 0x52, 0xfe, 0xe7, 0x82, 0x1b, 0x8b,
	0x7f, 0x83, 0x1a, 0xba, 0x90, 0x92, 0xeb, 0x3e, 0xd3, 0x99, 0x89, 0x2a, 0xa4, 0xb2, 0xdd, 0xd8,
	0xb9, 0xe7, 0x35, 0x62, 0x00, 0x82, 0x74, 0x5f, 0x67, 0x86, 0x22, 0x3d, 0xff, 0xc6, 0x5f, 0xa2,
	0x2a, 0x28, 0x2c, 0x81, 0xc2, 0x7a, 0xec, 0x8f, 0x2c, 0x2e, 0x8f, 0x2c, 0xde, 0x97, 0xb3, 0xce,
	0x9d, 0x7f, 0xff, 0xef, 0x3f, 0xff, 0xa8, 0x34, 0x70, 0xdd, 0xd9, 0x21, 0x60, 0x02, 0x94, 0x5a,
	0xaf, 0x11, 0x2e, 0x26, 0xb9, 0x62, 0x29, 0x4f, 0xfb, 0x43, 0x91, 0xf3, 0xbe, 0x90, 0x43, 0x85,
	0x31, 0xaa, 0x4a, 0x36, 0xe6, 0xb0, 0x87, 0x3a, 0x85, 0x6f, 0xbc, 0x89, 0x6a, 0x17, 0x43, 0xd3,
	0x9f, 0x30, 0x3b, 0x8a, 0x6e, 0xc0, 0xfa, 0xf2, 0xc5, 0xd0, 0x7c, 0xcd, 0xec, 0xc8, 0xc1, 0x8d,
	0xf8, 0x0b, 0x87, 0x1d, 0x54, 0x29, 0x7c, 0xb7, 0xfe, 0xbb, 0x82, 0x1a, 0x8e, 0xec, 0x40, 0x49,
	0xcb, 0xdf, 0x5a, 0xfc, 0x11, 0xaa, 0x0f, 0x58, 0xf2, 0xc6, 0x6a, 0x96, 0x94, 0x76, 0x2f, 0x17,
	0xf0, 0x3e, 0x6a, 0x26, 0xb9, 0xe0, 0xd2, 0xf6, 0x35, 0x37, 0xaa, 0xd0, 0x09, 0x37, 0x40, 0xd2,
	0xd8, 0xd9, 0x08, 0x07, 0x70, 0x00, 0x62, 0x5a, 0x4a, 0xe9, 0xed, 0xe4, 0xea, 0x02, 0xde, 0x45,
	0x8d, 0x44, 0x73, 0x66, 0x79, 0xdf, 0x8a, 0x71, 0xd8, 0x4b, 0xe7, 0x2e, 0xf8, 0xbd, 0x8a, 0x1a,
	0xf4, 0xf0, 0xf8, 0x90, 0x59, 0xee, 0x44, 0x14, 0x79, 0x5c, 0x4f, 0x8c, 0x39, 0xfe, 0x15, 0x5a,
	0x4d, 0x0a, 0xad, 0x1d, 0xb3, 0xb1, 0xcc, 0xf2, 0xe8, 0x26, 0x6c, 0x6d, 0x25, 0x2c, 0x9e, 0xb9,
	0x35, 0xbc, 0x87, 0xd6, 0xde, 0x88, 0x3c, 0x07, 0xc3, 0xc6, 0xb2, 0xf1, 0x24, 0xba, 0xf5, 0xe3,
	0xd6, 0x57, 0x1d, 0xb4, 0x57, 0x22, 0xf1, 0x23, 0x84, 0x25, 0xb7, 0x53, 0xa5, 0xdf, 0xf4, 0x07,
	0x33, 0xcb, 0x4d, 0xdf, 0x70, 0x69, 0xa3, 0x65, 0x38, 0xa9, 0x66, 0x90, 0x74, 0x9c, 0xe0, 0x8c,
	0x4b, 0x8b, 0xb7, 0x51, 0x53, 0xf2, 0xb7, 0xb6, 0xaf, 0x0a, 0x3b, 0x50, 0x85, 0x4c, 0xfb, 0x22,
	0x8d, 0x6a, 0x80, 0x5d, 0x73, 0xeb, 0xa7, 0x61, 0xb9, 0x9b, 0xe2, 0x5d, 0xb4, 0x01, 0xc8, 0x89,
	0x56, 0x09, 0x37, 0x86, 0xa7, 0x7d, 0xed, 0xe3, 0x28, 0xaa, 0x03, 0x7e, 0xdd, 0x49, 0xbf, 0x2e,
	0x85, 0x65, 0x8c, 0x3d, 0x41, 0xeb, 0xaa, 0xb0, 0xc6, 0x32, 0x99, 0x0a, 0x99, 0x95, 0x2a, 0x26,
	0x6a, 0x80, 0xce, 0xdd, 0x05, 0x59, 0xd0, 0x30, 0x78, 0x84, 0x56, 0xad, 0xb2, 0x2c, 0x77, 0x37,
	0x53, 0xe4, 0xd6, 0x44, 0x18, 0x7c, 0x3f, 0x00, 0xdf, 0xbf, 0xc2, 0x5f, 0xf6, 0x46, 0x9c, 0x00,
	0x80, 0xc8, 0x62, 0x3c, 0xe0, 0x9a, 0xa8, 0x21, 0x09, 0x50, 0x22, 0x24, 0xb1, 0x23, 0x4e, 0x5c,
	0x06, 0x3d, 0x30, 0x61, 0x95, 0x24, 0x2a, 0xcf, 0x79, 0x62, 0x85, 0x92, 0x74, 0x05, 0x14, 0xa9,
	0x47, 0xe3, 0x29, 0x5a, 0xbb, 0x12, 0x8b, 0x26, 0x8a, 0xc8, 0xd2, 0x76, 0x63, 0x67, 0x33, 0x84,
	0xc0, 0xbb, 0x81, 0xda, 0xf9, 0x0c, 0x76, 0xd1, 0xc6, 0xbf, 0xde, 0x27, 0xb9, 0x30, 0xd6, 0x71,
	0x83, 0x26, 0x29, 0xb1, 0x84, 0x19, 0x32, 0x61, 0x1a, 0x24, 0xe5, 0x56, 0x62, 0xba, 0x5a, 0x8a,
	0x8f, 0x1d, 0x18, 0xff, 0x09, 0xad, 0x7b, 0x17, 0xaf, 0xd1, 0x7f, 0x00, 0x9e, 0x3e, 0x00, 0x8e,
	0x4f, 0xf0, 0xc7, 0xbd, 0x6b, 0x5e, 0xce, 0x39, 0x00, 0x1d, 0x53, 0x0c, 0x46, 0xce, 0xaf, 0x98,
	0x56, 0xe8, 0x97, 0xde, 0x34, 0x7f, 0x3b, 0xe1, 0x89, 0xe5, 0xe9, 0x25, 0x07, 0x84, 0x43, 0xb4,
	0x09, 0x1c, 0x8f, 0x80, 0xe3, 0x53, 0x7c, 0xff, 0xf7, 0x6a, 0x4a, 0xc6, 0x4c, 0xce, 0x08, 0x48,
	0xc9, 0x94, 0x13, 0xaf, 0x48, 0xac, 0x22, 0x9a, 0x27, 0x5c, 0x5c, 0xf0, 0x98, 0x6e, 0x81, 0xc9,
	0xa3, 0x60, 0xb1, 0x24, 0x84, 0x28, 0xc2, 0xdf, 0xbd, 0xe3, 0x8b, 0xe7, 0xd9, 0x02, 0x9e, 0x87,
	0xc0, 0x73, 0x1f, 0xb7, 0xde, 0xe5, 0x09, 0xd6, 0x53, 0x62, 0x14, 0x19, 0x32, 0x7d, 0xdd, 0x1d,
	0x6f, 0xfd, 0x39, 0xaa, 0xe6, 0x2a, 0x33, 0xd1, 0x3a, 0x5c, 0xcc, 0x9d, 0x70, 0x31, 0x2f, 0x55,
	0xf6, 0x8a, 0x1b, 0xc3, 0x32, 0xde, 0x89, 0x80, 0x00, 0xe3, 0xd5, 0x97, 0xe1, 0x3a, 0x1c, 0x3c,
	0xde, 0xaa, 0xdc, 0xa0, 0xa0, 0x88, 0x1f, 0x23, 0x64, 0xb8, 0x31, 0x42, 0x49, 0x17, 0xda, 0xab,
	0x2e, 0xd9, 0xca, 0xe2, 0x84, 0xea, 0x67, 0x5e, 0xd2, 0x3d, 0xa4, 0xf5, 0x00, 0xea, 0xa6, 0x38,
	0x46, 0x37, 0x7d, 0x66, 0xae, 0x91, 0xca, 0xf6, 0xda, 0x4e, 0xb4, 0x50, 0x10, 0x43, 0x6d, 0x89,
	0x21, 0x4b, 0xa9, 0x87, 0xe1, 0x53, 0x74, 0xcb, 0x7d, 0x14, 0x26, 0xba, 0x0d, 0xd6, 0x3f, 0x07,
	0xeb, 0x4f, 0x70, 0x1b, 0xd0, 0xd2, 0x1a, 0xb7, 0x2b, 0x26, 0x09, 0xd7, 0x5a, 0x69, 0xe2, 0xa1,
	0xc4, 0x25, 0x25, 0x19, 0xcc, 0x20, 0x44, 0x7c, 0x61, 0x89, 0x69, 0x30, 0xe3, 0x4a, 0x44, 0x61,
	0xb8, 0xee, 0x4b, 0x65, 0xc5, 0x50, 0xf0, 0x34, 0x6a, 0x92, 0xca, 0x76, 0x8d, 0xae, 0xb8, 0xc5,
	0x93, 0xb0, 0xe6, 0xaa, 0x0f, 0x4b, 0xac, 0xb8, 0x08, 0xd5, 0xe7, 0xce, 0x7b, 0xaa, 0x8f, 0xc7,
	0x41, 0xf5, 0xc9, 0x50, 0x9d, 0x69, 0x2b, 0x86, 0x2c, 0xb1, 0x26, 0xba, 0x47, 0x96, 0xb6, 0xeb,
	0x9d, 0x2e, 0xe8, 0x1c, 0xe0, 0xfd, 0xee, 0x65, 0xc0, 0x12, 0xcd, 0x6d, 0xa1, 0xa5, 0x21, 0x8c,
	0x18, 0x0e, 0xa7, 0x3a, 0xd7, 0x22, 0x76, 0x24, 0x0c, 0x19, 0x0a, 0x9e, 0xa7, 0x64, 0x2a, 0xf2,
	0xdc, 0xa7, 0x81, 0x1d, 0xf1, 0x71, 0x4c, 0x2f, 0x6d, 0xe3, 0xbf, 0x57, 0xd0, 0xc6, 0xfc, 0x57,
	0x7f, 0x2a, 0xec, 0x68, 0x9e, 0xce, 0x1b, 0x40, 0x2b, 0x80, 0x36, 0xc1, 0xcc, 0xa5, 0xf3, 0xb0,
	0xc8, 0x73, 0xe2, 0x0a, 0xbd, 0x8b, 0x3a, 0xb7, 0x89, 0x4b, 0x3a, 0xa7, 0xea, 0x96, 0x84, 0x2e,
	0x93, 0x3c, 0x26, 0x3d, 0xb7, 0x05, 0xcb, 0xde, 0x70, 0xe3, 0x77, 0xac, 0xf4, 0x78, 0xae, 0x41,
	0x5c, 0xef, 0x68, 0xfb, 0x1a, 0x0d, 0xdf, 0x31, 0x5d, 0x9f, 0x5b, 0x7b, 0x2d, 0xec, 0x28, 0x24,
	0x7f, 0x6b, 0x0f, 0xdd, 0xf4, 0xc5, 0xb6, 0x8e, 0x6e, 0x9e, 0x9f, 0x9c, 0x1d, 0xf5, 0x9a, 0xbf,
	0xc0, 0x0d, 0xb4, 0x4c, 0xcf, 0x4f, 0x4e, 0xba, 0x27, 0x2f, 0x9a, 0x15, 0xbc, 0x86, 0x50, 0xef,
	0x88, 0xbe, 0xea, 0x9e, 0xec, 0xf7, 0x8e, 0x0e, 0x9b, 0x37, 0x1c, 0xee, 0x88, 0xd2, 0x53, 0xda,
	0x5c, 0x6a, 0xfd, 0xeb, 0x16, 0x5a, 0xbb, 0xda, 0x20, 0xb1, 0x40, 0xcb, 0x50, 0xe5, 0x95, 0xf6,
	0xcd, 0xa6, 0x73, 0x0a, 0x0e, 0x76, 0xf1, 0xa1, 0x73, 0x90, 0x4b, 0x2b, 0xac, 0xbb, 0x6d, 0x66,
	0x89, 0x6f, 0x06, 0x69, 0x38, 0x48, 0x57, 0x1e, 0xbc, 0x43, 0x09, 0x93, 0x64, 0xc0, 0x09, 0x23,
	0xee, 0x9e, 0xdd, 0xce, 0x89, 0xd2, 0x64, 0x54, 0x48, 0x4b, 0x44, 0xea, 0xe2, 0xb9, 0xb4, 0x8f,
	0x67, 0x68, 0x0d, 0x42, 0x63, 0xd6, 0xb7, 0xaa, 0xef, 0xc0, 0xd0, 0xb9, 0x6a, 0x9d, 0x33, 0x60,
	0x7c, 0x85, 0xdb, 0x67, 0x23, 0x55, 0xe4, 0x29, 0x61, 0xc4, 0x47, 0x50, 0xc2, 0x5c, 0xed, 0x73,
	0xb6, 0x21, 0xea, 0xc2, 0x11, 0x0b, 0x29, 0xac, 0x70, 0xf6, 0xe2, 0xd6, 0x3a, 0x44, 0xd5, 0x8c,
	0x30, 0x4b, 0x0e, 0xd4, 0x78, 0x92, 0x73, 0x87, 0xdf, 0xa9, 0x5a, 0x5d, 0x70, 0xba, 0xe2, 0xa9,
	0x7a, 0xea, 0xdc, 0x70, 0x8d, 0x5f, 0xa3, 0x7a, 0x68, 0x9b, 0x22, 0xf5, 0x9d, 0xab, 0xb3, 0x07,
	0xac, 0xbb, 0xa8, 0xee, 0x1b, 0xe6, 0x39, 0x3d, 0xc1, 0xf7, 0x7b, 0xf3, 0xa8, 0x26, 0x62, 0xc1,
	0x51, 0xa2, 0x26, 0x5c, 0x33, 0x97, 0xfe, 0x4a, 0x42, 0x8a, 0xd6, 0x3c, 0xa8, 0x9b, 0xe2, 0x01,
	0xaa, 0x27, 0x93, 0xa2, 0x9f, 0x8b, 0xb1, 0x08, 0x0d, 0xa5, 0x73, 0x04, 0x86, 0x9f, 0xe3, 0x5d,
	0x57, 0x6a, 0xc7, 0xc2, 0x12, 0x25, 0x17, 0xd2, 0x85, 0x24, 0x93, 0x82, 0x18, 0x9e, 0x28, 0x99,
	0x1a, 0x77, 0x62, 0xa9, 0xcf, 0xa6, 0xf2, 0x48, 0xb7, 0x2a, 0x95, 0x9d, 0xea, 0xe7, 0x3b, 0x8f,
	0x1f, 0xd3, 0x5a, 0x32, 0x29, 0x5e, 0x3a, 0x7d, 0x6c, 0xd1, 0xdd, 0xab, 0x9d, 0xd1, 0xb3, 0xad,
	0x02, 0xdb, 0x21, 0xb0, 0x3d, 0xc3, 0xed, 0x6b, 0x6c, 0xbe, 0xd3, 0x58, 0xcd, 0x86, 0x43, 0x91,
	0xfc, 0x08, 0x51, 0xed, 0xc9, 0x63, 0xff, 0x47, 0xef, 0x2c, 0x36, 0x58, 0xcf, 0xfa, 0x2d, 0xaa,
	0xc3, 0x40, 0x07, 0xf3, 0x4d, 0x03, 0x8e, 0xec, 0x19, 0x70, 0x7d, 0x81, 0x9f, 0xba, 0x73, 0xf2,
	0x37, 0x3d, 0x0c, 0xae, 0x31, 0x63, 0x88, 0x70, 0x57, 0x30, 0x76, 0x21, 0x23, 0xb3, 0xcb, 0x94,
	0x74, 0xf5, 0xb8, 0x08, 0xc7, 0xe6, 0x16, 0x4e, 0xdc, 0x8c, 0xc4, 0x10, 0x32, 0x6e, 0xac, 0xf3,
	0x45, 0xe0, 0x36, 0x78, 0xd2, 0x01, 0xeb, 0xbf, 0xbd, 0x52, 0x04, 0xf0, 0xc3, 0x43, 0xe5, 0xa2,
	0x81, 0x84, 0xee, 0xbd, 0x70, 0x27, 0x85, 0xb4, 0x22, 0xf7, 0xbf, 0x1d, 0x32, 0x26, 0x8e, 0xa1,
	0x0e, 0x56, 0xa1, 0x64, 0x7c, 0x17, 0xa6, 0xbd, 0xe8, 0x3d, 0xd3, 0xde, 0x0e, 0x50, 0x3e, 0xc2,
	0x0f, 0x9c, 0x43, 0xa1, 0xc7, 0x2f, 0x50, 0x4c, 0x99, 0x21, 0x60, 0x90, 0xa7, 0x90, 0xcf, 0xbe,
	0x3c, 0xc3, 0x38, 0xf8, 0x2d, 0xba, 0xf7, 0xcd, 0xc2, 0x00, 0xeb, 0x92, 0xca, 0x67, 0x25, 0x46,
	0x55, 0x3b, 0x9b, 0xcc, 0x27, 0x42, 0xf7, 0x8d, 0x63, 0xb4, 0x3c, 0x61, 0x33, 0xd7, 0x1e, 0xc2,
	0xac, 0xf6, 0x83, 0xbb, 0xa1, 0x25, 0xa8, 0xf5, 0xb7, 0xaa, 0x4f, 0xd3, 0x43, 0x6e, 0x12, 0x2d,
	0x9c, 0x7d, 0x37, 0xbb, 0x5e, 0x0e, 0x9a, 0x97, 0x9d, 0x16, 0xa6, 0x54, 0xb8, 0x09, 0xe6, 0xc6,
	0x86, 0x4c, 0x18, 0xcb, 0x35, 0x4f, 0xdd, 0x3c, 0xf1, 0x82, 0xd2, 0x38, 0x4c, 0xa4, 0xbf, 0x43,
	0xab, 0x43, 0x2d, 0xb8, 0x4c, 0xf3, 0x99, 0xbf, 0x4e, 0x18, 0x4b, 0x3b, 0x1f, 0x82, 0x95, 0x7b,
	0xf8, 0xee, 0x71, 0x10, 0x7a, 0xaf, 0x7d, 0xf1, 0x59, 0x29, 0x35, 0xe0, 0xbe, 0x76, 0x50, 0x2d,
	0x61, 0x96, 0x67, 0x4a, 0xcf, 0x60, 0x60, 0xac, 0x77, 0x36, 0x40, 0xb9, 0x89, 0x61, 0xa3, 0xa4,
	0x14, 0xc6, 0x74, 0x8e, 0xc3, 0xbb, 0x68, 0x29, 0x55, 0x49, 0x54, 0x05, 0x78, 0x0b, 0xe0, 0x1f,
	0xe1, 0x2d, 0x80, 0xa7, 0x2a, 0x29, 0x5c, 0xa0, 0xf8, 0x04, 0x37, 0x56, 0x0b, 0x99, 0xc5, 0xd4,
	0xc1, 0xf1, 0x33, 0x57, 0xe9, 0x33, 0xd3, 0x87, 0x43, 0xf4, 0x99, 0xfa, 0x09, 0xe8, 0x7e, 0x88,
	0x37, 0x41, 0x97, 0xe9, 0x0c, 0x74, 0x0d, 0x71, 0x90, 0xb0, 0xdb, 0x9a, 0xd3, 0xe9, 0xb9, 0xb3,
	0xfe, 0x23, 0x5a, 0x49, 0xf9, 0x90, 0x15, 0xb9, 0xf5, 0xaf, 0x83, 0x5b, 0xef, 0xb9, 0xfe, 0x8f,
	0xc1, 0xf0, 0x26, 0xfe, 0xe0, 0xd0, 0x6b, 0x78, 0xff, 0xe7, 0x04, 0x31, 0x6d, 0x04, 0x53, 0x50,
	0x29, 0xbf, 0x40, 0x68, 0xc0, 0x47, 0xec, 0x42, 0xa8, 0x42, 0x1b, 0x18, 0x4c, 0xeb, 0xf3, 0x2e,
	0xde, 0x84, 0xad, 0x5d, 0x8a, 0x63, 0xba, 0x80, 0xc5, 0x27, 0xa8, 0x26, 0xa4, 0x75, 0xc5, 0x31,
	0x87, 0x21, 0xb5, 0x36, 0x0f, 0xbc, 0x87, 0xdd, 0xb0, 0x0e, 0xd4, 0x86, 0x30, 0xcd, 0x21, 0xdc,
	0x2f, 0x84, 0x11, 0x83, 0x9c, 0x97, 0x73, 0xe1, 0x8b, 0xf3, 0x6e, 0x4c, 0xe7, 0x36, 0x5a, 0xff,
	0xac, 0xa0, 0xb5, 0xfd, 0xe3, 0xe3, 0x5d, 0x47, 0x7a, 0x3a, 0xf8, 0x9e, 0x27, 0x16, 0x37, 0xd1,
	0x52, 0xa1, 0x65, 0x88, 0x3a, 0xf7, 0x79, 0xfd, 0x95, 0x74, 0xe3, 0xa7, 0xbe, 0x92, 0x3e, 0x43,
	0x2b, 0x90, 0xf7, 0x89, 0x9f, 0x19, 0xc2, 0x6b, 0x09, 0xbf, 0x3b, 0x4d, 0x50, 0x78, 0x87, 0x96,
	0xcf, 0x96, 0xa7, 0x08, 0x81, 0x9a, 0x1f, 0x41, 0xaa, 0xef, 0x09, 0x73, 0x28, 0x2b, 0x90, 0x2c,
	0xad, 0xa7, 0xa8, 0xf1, 0xcd, 0x1f, 0x5e, 0xba, 0x08, 0xeb, 0xb1, 0xcc, 0xfc, 0xe0, 0x6b, 0xaa,
	0x89, 0x96, 0x2c, 0xcb, 0xc2, 0x43, 0xca, 0x7d, 0xb6, 0xf6, 0x50, 0x73, 0x41, 0xc9, 0x67, 0xdd,
	0xa7, 0xa8, 0x6a, 0x19, 0xbc, 0x05, 0x97, 0x16, 0x36, 0xbb, 0x00, 0xa3, 0x20, 0x1f, 0xdc, 0x02,
	0xc1, 0xd3, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xce, 0x84, 0x37, 0x0b, 0x43, 0x0f, 0x00, 0x00,
}
