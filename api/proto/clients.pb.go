// Code generated by protoc-gen-go. DO NOT EDIT.
// source: clients.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	_ "www.velocidex.com/golang/velociraptor/proto"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchClientsRequest_SortingSense int32

const (
	SearchClientsRequest_UNSORTED  SearchClientsRequest_SortingSense = 0
	SearchClientsRequest_SORT_UP   SearchClientsRequest_SortingSense = 1
	SearchClientsRequest_SORT_DOWN SearchClientsRequest_SortingSense = 2
)

// Enum value maps for SearchClientsRequest_SortingSense.
var (
	SearchClientsRequest_SortingSense_name = map[int32]string{
		0: "UNSORTED",
		1: "SORT_UP",
		2: "SORT_DOWN",
	}
	SearchClientsRequest_SortingSense_value = map[string]int32{
		"UNSORTED":  0,
		"SORT_UP":   1,
		"SORT_DOWN": 2,
	}
)

func (x SearchClientsRequest_SortingSense) Enum() *SearchClientsRequest_SortingSense {
	p := new(SearchClientsRequest_SortingSense)
	*p = x
	return p
}

func (x SearchClientsRequest_SortingSense) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchClientsRequest_SortingSense) Descriptor() protoreflect.EnumDescriptor {
	return file_clients_proto_enumTypes[0].Descriptor()
}

func (SearchClientsRequest_SortingSense) Type() protoreflect.EnumType {
	return &file_clients_proto_enumTypes[0]
}

func (x SearchClientsRequest_SortingSense) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchClientsRequest_SortingSense.Descriptor instead.
func (SearchClientsRequest_SortingSense) EnumDescriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{2, 0}
}

// Post filter results to only see clients that are currently
// online
type SearchClientsRequest_Filters int32

const (
	SearchClientsRequest_UNFILTERED SearchClientsRequest_Filters = 0
	SearchClientsRequest_ONLINE     SearchClientsRequest_Filters = 1
)

// Enum value maps for SearchClientsRequest_Filters.
var (
	SearchClientsRequest_Filters_name = map[int32]string{
		0: "UNFILTERED",
		1: "ONLINE",
	}
	SearchClientsRequest_Filters_value = map[string]int32{
		"UNFILTERED": 0,
		"ONLINE":     1,
	}
)

func (x SearchClientsRequest_Filters) Enum() *SearchClientsRequest_Filters {
	p := new(SearchClientsRequest_Filters)
	*p = x
	return p
}

func (x SearchClientsRequest_Filters) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchClientsRequest_Filters) Descriptor() protoreflect.EnumDescriptor {
	return file_clients_proto_enumTypes[1].Descriptor()
}

func (SearchClientsRequest_Filters) Type() protoreflect.EnumType {
	return &file_clients_proto_enumTypes[1]
}

func (x SearchClientsRequest_Filters) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchClientsRequest_Filters.Descriptor instead.
func (SearchClientsRequest_Filters) EnumDescriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{2, 1}
}

// GRR uses an int for client_version which is difficult to use
// semantic versioning. We use a string instead which represents the
// commit number.
type AgentInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BuildTime string `protobuf:"bytes,3,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	BuildUrl  string `protobuf:"bytes,4,opt,name=build_url,json=buildUrl,proto3" json:"build_url,omitempty"`
}

func (x *AgentInformation) Reset() {
	*x = AgentInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInformation) ProtoMessage() {}

func (x *AgentInformation) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInformation.ProtoReflect.Descriptor instead.
func (*AgentInformation) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{0}
}

func (x *AgentInformation) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AgentInformation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentInformation) GetBuildTime() string {
	if x != nil {
		return x.BuildTime
	}
	return ""
}

func (x *AgentInformation) GetBuildUrl() string {
	if x != nil {
		return x.BuildUrl
	}
	return ""
}

// TODO: This is an older protobuf that is now largely supeceeded by
// actions_proto.ClientInfo. We need to replace use of this protobuf
// by ClientInfo.
type ApiClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId                    string            `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	AgentInformation            *AgentInformation `protobuf:"bytes,2,opt,name=agent_information,json=agentInformation,proto3" json:"agent_information,omitempty"`
	OsInfo                      *Uname            `protobuf:"bytes,3,opt,name=os_info,json=osInfo,proto3" json:"os_info,omitempty"`
	FirstSeenAt                 uint64            `protobuf:"varint,6,opt,name=first_seen_at,json=firstSeenAt,proto3" json:"first_seen_at,omitempty"`
	LastSeenAt                  uint64            `protobuf:"varint,7,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	LastIp                      string            `protobuf:"bytes,16,opt,name=last_ip,json=lastIp,proto3" json:"last_ip,omitempty"`
	LastInterrogateFlowId       string            `protobuf:"bytes,19,opt,name=last_interrogate_flow_id,json=lastInterrogateFlowId,proto3" json:"last_interrogate_flow_id,omitempty"`
	LastInterrogateArtifactName string            `protobuf:"bytes,21,opt,name=last_interrogate_artifact_name,json=lastInterrogateArtifactName,proto3" json:"last_interrogate_artifact_name,omitempty"`
	Labels                      []string          `protobuf:"bytes,18,rep,name=labels,proto3" json:"labels,omitempty"`
	LastHuntTimestamp           uint64            `protobuf:"varint,22,opt,name=last_hunt_timestamp,json=lastHuntTimestamp,proto3" json:"last_hunt_timestamp,omitempty"`
	LastEventTableVersion       uint64            `protobuf:"varint,23,opt,name=last_event_table_version,json=lastEventTableVersion,proto3" json:"last_event_table_version,omitempty"`
	// Last time the labels on this client were updated.
	LastLabelTimestamp uint64 `protobuf:"varint,24,opt,name=last_label_timestamp,json=lastLabelTimestamp,proto3" json:"last_label_timestamp,omitempty"`
}

func (x *ApiClient) Reset() {
	*x = ApiClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiClient) ProtoMessage() {}

func (x *ApiClient) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiClient.ProtoReflect.Descriptor instead.
func (*ApiClient) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{1}
}

func (x *ApiClient) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ApiClient) GetAgentInformation() *AgentInformation {
	if x != nil {
		return x.AgentInformation
	}
	return nil
}

func (x *ApiClient) GetOsInfo() *Uname {
	if x != nil {
		return x.OsInfo
	}
	return nil
}

func (x *ApiClient) GetFirstSeenAt() uint64 {
	if x != nil {
		return x.FirstSeenAt
	}
	return 0
}

func (x *ApiClient) GetLastSeenAt() uint64 {
	if x != nil {
		return x.LastSeenAt
	}
	return 0
}

func (x *ApiClient) GetLastIp() string {
	if x != nil {
		return x.LastIp
	}
	return ""
}

func (x *ApiClient) GetLastInterrogateFlowId() string {
	if x != nil {
		return x.LastInterrogateFlowId
	}
	return ""
}

func (x *ApiClient) GetLastInterrogateArtifactName() string {
	if x != nil {
		return x.LastInterrogateArtifactName
	}
	return ""
}

func (x *ApiClient) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ApiClient) GetLastHuntTimestamp() uint64 {
	if x != nil {
		return x.LastHuntTimestamp
	}
	return 0
}

func (x *ApiClient) GetLastEventTableVersion() uint64 {
	if x != nil {
		return x.LastEventTableVersion
	}
	return 0
}

func (x *ApiClient) GetLastLabelTimestamp() uint64 {
	if x != nil {
		return x.LastLabelTimestamp
	}
	return 0
}

type SearchClientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Query  string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// Retrieves only the names of matching search terms (used for
	// suggestion box). If this is false, we return the entire client
	// record of matching clients.
	NameOnly bool                              `protobuf:"varint,4,opt,name=name_only,json=nameOnly,proto3" json:"name_only,omitempty"`
	Sort     SearchClientsRequest_SortingSense `protobuf:"varint,6,opt,name=sort,proto3,enum=proto.SearchClientsRequest_SortingSense" json:"sort,omitempty"`
	Filter   SearchClientsRequest_Filters      `protobuf:"varint,7,opt,name=filter,proto3,enum=proto.SearchClientsRequest_Filters" json:"filter,omitempty"`
}

func (x *SearchClientsRequest) Reset() {
	*x = SearchClientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClientsRequest) ProtoMessage() {}

func (x *SearchClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClientsRequest.ProtoReflect.Descriptor instead.
func (*SearchClientsRequest) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{2}
}

func (x *SearchClientsRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchClientsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchClientsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchClientsRequest) GetNameOnly() bool {
	if x != nil {
		return x.NameOnly
	}
	return false
}

func (x *SearchClientsRequest) GetSort() SearchClientsRequest_SortingSense {
	if x != nil {
		return x.Sort
	}
	return SearchClientsRequest_UNSORTED
}

func (x *SearchClientsRequest) GetFilter() SearchClientsRequest_Filters {
	if x != nil {
		return x.Filter
	}
	return SearchClientsRequest_UNFILTERED
}

type SearchClientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ApiClient `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Names []string     `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *SearchClientsResponse) Reset() {
	*x = SearchClientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClientsResponse) ProtoMessage() {}

func (x *SearchClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClientsResponse.ProtoReflect.Descriptor instead.
func (*SearchClientsResponse) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{3}
}

func (x *SearchClientsResponse) GetItems() []*ApiClient {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchClientsResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type GetClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Lightweight bool   `protobuf:"varint,2,opt,name=lightweight,proto3" json:"lightweight,omitempty"`
	// If true we also update the MRU for this client.
	UpdateMru bool `protobuf:"varint,3,opt,name=update_mru,json=updateMru,proto3" json:"update_mru,omitempty"`
}

func (x *GetClientRequest) Reset() {
	*x = GetClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientRequest) ProtoMessage() {}

func (x *GetClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientRequest.ProtoReflect.Descriptor instead.
func (*GetClientRequest) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{4}
}

func (x *GetClientRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetClientRequest) GetLightweight() bool {
	if x != nil {
		return x.Lightweight
	}
	return false
}

func (x *GetClientRequest) GetUpdateMru() bool {
	if x != nil {
		return x.UpdateMru
	}
	return false
}

type LabelClientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIds []string `protobuf:"bytes,1,rep,name=client_ids,json=clientIds,proto3" json:"client_ids,omitempty"`
	Labels    []string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	Operation string   `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *LabelClientsRequest) Reset() {
	*x = LabelClientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelClientsRequest) ProtoMessage() {}

func (x *LabelClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelClientsRequest.ProtoReflect.Descriptor instead.
func (*LabelClientsRequest) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{5}
}

func (x *LabelClientsRequest) GetClientIds() []string {
	if x != nil {
		return x.ClientIds
	}
	return nil
}

func (x *LabelClientsRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *LabelClientsRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

type ClientLabels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When was the labeling record last updated.
	Timestamp uint64   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Label     []string `protobuf:"bytes,2,rep,name=label,proto3" json:"label,omitempty"`
}

func (x *ClientLabels) Reset() {
	*x = ClientLabels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientLabels) ProtoMessage() {}

func (x *ClientLabels) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientLabels.ProtoReflect.Descriptor instead.
func (*ClientLabels) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{6}
}

func (x *ClientLabels) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ClientLabels) GetLabel() []string {
	if x != nil {
		return x.Label
	}
	return nil
}

type ClientMetadataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// A Json blob of unstructured data.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ClientMetadataItem) Reset() {
	*x = ClientMetadataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMetadataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMetadataItem) ProtoMessage() {}

func (x *ClientMetadataItem) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMetadataItem.ProtoReflect.Descriptor instead.
func (*ClientMetadataItem) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{7}
}

func (x *ClientMetadataItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ClientMetadataItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ClientMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*ClientMetadataItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	ClientId string                `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *ClientMetadata) Reset() {
	*x = ClientMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMetadata) ProtoMessage() {}

func (x *ClientMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMetadata.ProtoReflect.Descriptor instead.
func (*ClientMetadata) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{8}
}

func (x *ClientMetadata) GetItems() []*ClientMetadataItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ClientMetadata) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type SetClientMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Add []*ClientMetadataItem `protobuf:"bytes,1,rep,name=add,proto3" json:"add,omitempty"`
	// A list of keys to remove
	Remove   []string `protobuf:"bytes,2,rep,name=remove,proto3" json:"remove,omitempty"`
	ClientId string   `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *SetClientMetadataRequest) Reset() {
	*x = SetClientMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClientMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClientMetadataRequest) ProtoMessage() {}

func (x *SetClientMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClientMetadataRequest.ProtoReflect.Descriptor instead.
func (*SetClientMetadataRequest) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{9}
}

func (x *SetClientMetadataRequest) GetAdd() []*ClientMetadataItem {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *SetClientMetadataRequest) GetRemove() []string {
	if x != nil {
		return x.Remove
	}
	return nil
}

func (x *SetClientMetadataRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// Message to carry uname information.
type Uname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System       string   `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Hostname     string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Release      string   `protobuf:"bytes,3,opt,name=release,proto3" json:"release,omitempty"`
	Machine      string   `protobuf:"bytes,5,opt,name=machine,proto3" json:"machine,omitempty"`
	Fqdn         string   `protobuf:"bytes,7,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	MacAddresses []string `protobuf:"bytes,11,rep,name=mac_addresses,json=macAddresses,proto3" json:"mac_addresses,omitempty"`
}

func (x *Uname) Reset() {
	*x = Uname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uname) ProtoMessage() {}

func (x *Uname) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uname.ProtoReflect.Descriptor instead.
func (*Uname) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{10}
}

func (x *Uname) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *Uname) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Uname) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *Uname) GetMachine() string {
	if x != nil {
		return x.Machine
	}
	return ""
}

func (x *Uname) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *Uname) GetMacAddresses() []string {
	if x != nil {
		return x.MacAddresses
	}
	return nil
}

type IndexRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Usually client id
	Entity string `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	// The term under which we indexed the entity.
	Term string `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
}

func (x *IndexRecord) Reset() {
	*x = IndexRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRecord) ProtoMessage() {}

func (x *IndexRecord) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRecord.ProtoReflect.Descriptor instead.
func (*IndexRecord) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{11}
}

func (x *IndexRecord) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *IndexRecord) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

var File_clients_proto protoreflect.FileDescriptor

var file_clients_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65,
	0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x10,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x72, 0x6c, 0x22, 0xfd, 0x05, 0x0a, 0x09, 0x41,
	0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xe2, 0xfc, 0xe3,
	0xc4, 0x01, 0x1c, 0x0a, 0x0b, 0x41, 0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x0d, 0x54, 0x68, 0x65, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x64, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x11, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x06,
	0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x74, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x42, 0x50, 0xe2,
	0xfc, 0xe3, 0xc4, 0x01, 0x4a, 0x0a, 0x0b, 0x52, 0x44, 0x46, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x3b, 0x57, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x20, 0x77, 0x61, 0x73, 0x20, 0x66, 0x69, 0x72, 0x73, 0x74, 0x20, 0x73, 0x65,
	0x65, 0x6e, 0x20, 0x28, 0x69, 0x2e, 0x65, 0x2e, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x69, 0x74,
	0x20, 0x77, 0x61, 0x73, 0x20, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x29, 0x2e, 0x52,
	0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x58, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x36, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x30, 0x0a, 0x0b, 0x52, 0x44, 0x46, 0x44,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x4c, 0x61, 0x73, 0x74, 0x20, 0x74, 0x69,
	0x6d, 0x65, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x2e, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69,
	0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x22, 0x12,
	0x20, 0x54, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x73, 0x65, 0x65, 0x6e, 0x20, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x20, 0x41, 0x50, 0x49, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x70, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x73,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77,
	0x49, 0x64, 0x12, 0x43, 0x0a, 0x1e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x72, 0x6f, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x6c, 0x61, 0x73, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6c, 0x61,
	0x73, 0x74, 0x48, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x37, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xd3, 0x02, 0x0a, 0x14, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x38, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x53, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x4f,
	0x52, 0x54, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x22, 0x25, 0x0a, 0x07, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01,
	0x22, 0xa6, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x65, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x4f, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x49, 0x12, 0x47, 0x49, 0x66, 0x20, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x69, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x20, 0x77, 0x65, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x68, 0x65, 0x72,
	0x65, 0x2e, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x2d, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x27, 0x12, 0x25, 0x49, 0x66, 0x20, 0x73, 0x65, 0x74,
	0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x73, 0x6f,
	0x6d, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x0b, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x72, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x72, 0x75, 0x22, 0x6a, 0x0a, 0x13, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x3c, 0x0a, 0x12, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a, 0x0e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x18, 0x53, 0x65, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x61,
	0x64, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa3, 0x03, 0x0a, 0x05, 0x55, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x33, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x2d, 0x12, 0x2b, 0x54, 0x68, 0x65, 0x20, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x28,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x7c, 0x44, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x7c, 0x4c,
	0x69, 0x6e, 0x75, 0x78, 0x29, 0x2e, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x40,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x24, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x1e, 0x12, 0x1c, 0x54, 0x68, 0x65, 0x20, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x50, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x36, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x30, 0x12, 0x2e, 0x54, 0x68, 0x65, 0x20, 0x4f,
	0x53, 0x20, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x20, 0x65, 0x2e, 0x67, 0x2e, 0x20, 0x37, 0x2c, 0x20, 0x4f, 0x53, 0x58,
	0x2c, 0x20, 0x64, 0x65, 0x62, 0x69, 0x61, 0x6e, 0x2e, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x33, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x2d, 0x12, 0x2b, 0x54, 0x68, 0x65,
	0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x20, 0x65, 0x2e, 0x67, 0x2e, 0x20, 0x41, 0x4d, 0x44, 0x36, 0x34, 0x2c,
	0x20, 0x78, 0x38, 0x36, 0x5f, 0x36, 0x34, 0x2e, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x45, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x31, 0xe2, 0xfc, 0xe3, 0xc4, 0x01, 0x2b, 0x12, 0x29, 0x54, 0x68, 0x65, 0x20, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x27, 0x73, 0x20, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x20, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x6e, 0x61, 0x6d,
	0x65, 0x2e, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x63, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x39, 0x0a,
	0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x42, 0x31, 0x5a, 0x2f, 0x77, 0x77, 0x77, 0x2e,
	0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x72, 0x61, 0x70, 0x74, 0x6f,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_clients_proto_rawDescOnce sync.Once
	file_clients_proto_rawDescData = file_clients_proto_rawDesc
)

func file_clients_proto_rawDescGZIP() []byte {
	file_clients_proto_rawDescOnce.Do(func() {
		file_clients_proto_rawDescData = protoimpl.X.CompressGZIP(file_clients_proto_rawDescData)
	})
	return file_clients_proto_rawDescData
}

var file_clients_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_clients_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_clients_proto_goTypes = []interface{}{
	(SearchClientsRequest_SortingSense)(0), // 0: proto.SearchClientsRequest.SortingSense
	(SearchClientsRequest_Filters)(0),      // 1: proto.SearchClientsRequest.Filters
	(*AgentInformation)(nil),               // 2: proto.AgentInformation
	(*ApiClient)(nil),                      // 3: proto.ApiClient
	(*SearchClientsRequest)(nil),           // 4: proto.SearchClientsRequest
	(*SearchClientsResponse)(nil),          // 5: proto.SearchClientsResponse
	(*GetClientRequest)(nil),               // 6: proto.GetClientRequest
	(*LabelClientsRequest)(nil),            // 7: proto.LabelClientsRequest
	(*ClientLabels)(nil),                   // 8: proto.ClientLabels
	(*ClientMetadataItem)(nil),             // 9: proto.ClientMetadataItem
	(*ClientMetadata)(nil),                 // 10: proto.ClientMetadata
	(*SetClientMetadataRequest)(nil),       // 11: proto.SetClientMetadataRequest
	(*Uname)(nil),                          // 12: proto.Uname
	(*IndexRecord)(nil),                    // 13: proto.IndexRecord
}
var file_clients_proto_depIdxs = []int32{
	2,  // 0: proto.ApiClient.agent_information:type_name -> proto.AgentInformation
	12, // 1: proto.ApiClient.os_info:type_name -> proto.Uname
	0,  // 2: proto.SearchClientsRequest.sort:type_name -> proto.SearchClientsRequest.SortingSense
	1,  // 3: proto.SearchClientsRequest.filter:type_name -> proto.SearchClientsRequest.Filters
	3,  // 4: proto.SearchClientsResponse.items:type_name -> proto.ApiClient
	9,  // 5: proto.ClientMetadata.items:type_name -> proto.ClientMetadataItem
	9,  // 6: proto.SetClientMetadataRequest.add:type_name -> proto.ClientMetadataItem
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_clients_proto_init() }
func file_clients_proto_init() {
	if File_clients_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clients_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchClientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchClientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelClientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientLabels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMetadataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClientMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clients_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_clients_proto_goTypes,
		DependencyIndexes: file_clients_proto_depIdxs,
		EnumInfos:         file_clients_proto_enumTypes,
		MessageInfos:      file_clients_proto_msgTypes,
	}.Build()
	File_clients_proto = out.File
	file_clients_proto_rawDesc = nil
	file_clients_proto_goTypes = nil
	file_clients_proto_depIdxs = nil
}
