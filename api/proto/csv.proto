syntax = "proto3";

import "proto/semantic.proto";
import "artifacts/proto/artifact.proto";

package proto;

option go_package = "www.velocidex.com/golang/velociraptor/api/proto";

message GetTableRequest {
    // Paging parameters.
    uint64 rows = 2;         // Number of rows to fetch
    uint64 start_row = 3;    // First row to fetch.

    // The following are used to create the path manager used to fetch
    // the correct JSONL files. See getPathManager() in csv.go

    // For event artifacts we can get events after this time. Event
    // artifacts should specify the artifact name with client_id being
    // either "server" for server events or the client id for the
    // client events. Number of seconds since epoch.
    int64 start_time = 13;
    int64 end_time = 14;

    // For collected artifacts tables.
    string client_id = 4;
    string flow_id = 5;
    string artifact = 6;

    // Can be log, uploads for collection additional tables.
    string type = 7;

    // For collected hunts. With hunts, type can be clients, hunt_status.
    string hunt_id = 8;

    // For notebook tables.
    string notebook_id = 9;
    string cell_id = 10;
    int64 table_id = 11;

    // For timelines
    string timeline = 16;
    // Skip these timeline components.
    repeated string skip_components = 17;

    // For download handler when creating an export file - control
    // output format. Can be "csv", "jsonl"
    string download_format = 12;

    // Optionally for downloads, the caller may specify the filename.
    string download_filename = 18;

    // If specified only emit these columns.
    repeated string columns = 15;

    // If specified, transform the table first.
    string sort_column = 19;
    bool sort_direction = 20;
    string filter_column = 21;
    string filter_regex = 22;

    // This transformation takes a range from the larger result set
    // and pages within that range.
    uint64 start_idx = 27;
    uint64 end_idx = 28;

    // The org id may be specified in the query string - The protobuf
    // is normally parsed from the query string directly.
    string org_id = 23;

    // The required timezone to export in.
    string timezone = 24;

    uint64 version = 25;

    // Used for VFS components
    repeated string vfs_components = 26;
}

message Row {
    repeated string cell = 1;
}

message GetTableResponse {
    repeated string columns = 1 [(sem_type) = {
            description: "The columns",
        }];

    repeated Row rows = 2;

    int64 total_rows = 3;

    repeated ColumnType column_types = 4;

    int64 start_time = 5;
    int64 end_time = 6;
}