// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acl.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	_ "www.velocidex.com/golang/velociraptor/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ApiClientACL struct {
	AllQuery       bool     `protobuf:"varint,1,opt,name=all_query,json=allQuery,proto3" json:"all_query,omitempty"`
	AnyQuery       bool     `protobuf:"varint,10,opt,name=any_query,json=anyQuery,proto3" json:"any_query,omitempty"`
	PublishQueues  []string `protobuf:"bytes,2,rep,name=publish_queues,json=publishQueues,proto3" json:"publish_queues,omitempty"`
	ReadResults    bool     `protobuf:"varint,3,opt,name=read_results,json=readResults,proto3" json:"read_results,omitempty"`
	LabelClients   bool     `protobuf:"varint,11,opt,name=label_clients,json=labelClients,proto3" json:"label_clients,omitempty"`
	CollectClient  bool     `protobuf:"varint,4,opt,name=collect_client,json=collectClient,proto3" json:"collect_client,omitempty"`
	CollectServer  bool     `protobuf:"varint,5,opt,name=collect_server,json=collectServer,proto3" json:"collect_server,omitempty"`
	ArtifactWriter bool     `protobuf:"varint,6,opt,name=artifact_writer,json=artifactWriter,proto3" json:"artifact_writer,omitempty"`
	Execve         bool     `protobuf:"varint,7,opt,name=execve,proto3" json:"execve,omitempty"`
	NotebookEditor bool     `protobuf:"varint,8,opt,name=notebook_editor,json=notebookEditor,proto3" json:"notebook_editor,omitempty"`
	ServerAdmin    bool     `protobuf:"varint,12,opt,name=server_admin,json=serverAdmin,proto3" json:"server_admin,omitempty"`
	// A list of roles in lieu of the permissions above. These will be
	// interpolated into this ACL object.
	Roles                []string `protobuf:"bytes,9,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiClientACL) Reset()         { *m = ApiClientACL{} }
func (m *ApiClientACL) String() string { return proto.CompactTextString(m) }
func (*ApiClientACL) ProtoMessage()    {}
func (*ApiClientACL) Descriptor() ([]byte, []int) {
	return fileDescriptor_a452f070aeef01eb, []int{0}
}

func (m *ApiClientACL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiClientACL.Unmarshal(m, b)
}
func (m *ApiClientACL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiClientACL.Marshal(b, m, deterministic)
}
func (m *ApiClientACL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiClientACL.Merge(m, src)
}
func (m *ApiClientACL) XXX_Size() int {
	return xxx_messageInfo_ApiClientACL.Size(m)
}
func (m *ApiClientACL) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiClientACL.DiscardUnknown(m)
}

var xxx_messageInfo_ApiClientACL proto.InternalMessageInfo

func (m *ApiClientACL) GetAllQuery() bool {
	if m != nil {
		return m.AllQuery
	}
	return false
}

func (m *ApiClientACL) GetAnyQuery() bool {
	if m != nil {
		return m.AnyQuery
	}
	return false
}

func (m *ApiClientACL) GetPublishQueues() []string {
	if m != nil {
		return m.PublishQueues
	}
	return nil
}

func (m *ApiClientACL) GetReadResults() bool {
	if m != nil {
		return m.ReadResults
	}
	return false
}

func (m *ApiClientACL) GetLabelClients() bool {
	if m != nil {
		return m.LabelClients
	}
	return false
}

func (m *ApiClientACL) GetCollectClient() bool {
	if m != nil {
		return m.CollectClient
	}
	return false
}

func (m *ApiClientACL) GetCollectServer() bool {
	if m != nil {
		return m.CollectServer
	}
	return false
}

func (m *ApiClientACL) GetArtifactWriter() bool {
	if m != nil {
		return m.ArtifactWriter
	}
	return false
}

func (m *ApiClientACL) GetExecve() bool {
	if m != nil {
		return m.Execve
	}
	return false
}

func (m *ApiClientACL) GetNotebookEditor() bool {
	if m != nil {
		return m.NotebookEditor
	}
	return false
}

func (m *ApiClientACL) GetServerAdmin() bool {
	if m != nil {
		return m.ServerAdmin
	}
	return false
}

func (m *ApiClientACL) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

// A role is a named sets of ACL permissions. A user may possess
// multiple roles.
type Role struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Permissions          *ApiClientACL `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_a452f070aeef01eb, []int{1}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetPermissions() *ApiClientACL {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func init() {
	proto.RegisterType((*ApiClientACL)(nil), "proto.ApiClientACL")
	proto.RegisterType((*Role)(nil), "proto.Role")
}

func init() { proto.RegisterFile("acl.proto", fileDescriptor_a452f070aeef01eb) }

var fileDescriptor_a452f070aeef01eb = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0xc7, 0x55, 0xb6, 0x2d, 0x8d, 0xfb, 0x81, 0x64, 0x10, 0xb2, 0xe0, 0x62, 0x16, 0x01, 0x45,
	0x48, 0xa9, 0x00, 0x71, 0xe1, 0xd6, 0x5d, 0x71, 0x62, 0x0f, 0x34, 0x1c, 0xe0, 0x16, 0xb9, 0xce,
	0xec, 0xae, 0x85, 0x63, 0x87, 0xb1, 0x9b, 0x6e, 0x9f, 0x81, 0xd7, 0xe2, 0x49, 0xe0, 0x35, 0x38,
	0xa0, 0x8c, 0xb3, 0x52, 0xf7, 0x94, 0xcc, 0x6f, 0x7e, 0xfe, 0xfb, 0x93, 0x65, 0x4a, 0xdb, 0xbc,
	0x41, 0x1f, 0x3d, 0x1f, 0xd1, 0xe7, 0xc9, 0xc7, 0xfd, 0x7e, 0x9f, 0xb7, 0x60, 0xbd, 0x36, 0x15,
	0xdc, 0xe4, 0xda, 0xd7, 0xab, 0x2b, 0x6f, 0x95, 0xbb, 0x5a, 0x25, 0x88, 0xaa, 0x89, 0x1e, 0x57,
	0x24, 0xaf, 0x02, 0xd4, 0xca, 0x45, 0xa3, 0x53, 0xc4, 0xe9, 0xaf, 0x21, 0x9b, 0xad, 0x1b, 0x73,
	0x6e, 0x0d, 0xb8, 0xb8, 0x3e, 0xbf, 0xe0, 0x9f, 0x59, 0xa6, 0xac, 0x2d, 0x7f, 0xee, 0x00, 0x0f,
	0x62, 0x20, 0x07, 0xcb, 0xc9, 0x59, 0xfe, 0xe7, 0xdf, 0xdf, 0xdf, 0x83, 0x25, 0x7f, 0xf9, 0x05,
	0x7d, 0x6b, 0x2a, 0x08, 0x52, 0xe1, 0xd6, 0x44, 0x54, 0x78, 0x90, 0xe4, 0x49, 0x0b, 0x2d, 0x58,
	0xa9, 0xb4, 0x86, 0x10, 0xf2, 0x62, 0xa2, 0xac, 0xdd, 0x74, 0x9c, 0x3f, 0x65, 0x99, 0x72, 0x87,
	0x3e, 0x8c, 0x75, 0x61, 0xc5, 0x44, 0xb9, 0x43, 0x6a, 0x7e, 0x67, 0x8b, 0x66, 0xb7, 0xb5, 0x26,
	0x5c, 0x77, 0xc2, 0x0e, 0x82, 0xb8, 0x27, 0x4f, 0x96, 0xd9, 0xd9, 0x5b, 0x9a, 0xee, 0x0d, 0x7f,
	0x7d, 0x61, 0x42, 0x94, 0xfe, 0x52, 0xa6, 0xae, 0x8c, 0xd7, 0x20, 0x35, 0xad, 0x53, 0x6a, 0xe5,
	0x64, 0x3f, 0x56, 0x46, 0x9f, 0x17, 0xf3, 0xbe, 0xd8, 0x90, 0xc9, 0x9f, 0xb1, 0x19, 0x82, 0xaa,
	0x4a, 0x84, 0xb0, 0xb3, 0x31, 0x88, 0x13, 0x9a, 0x79, 0xda, 0xb1, 0x22, 0x21, 0xfe, 0x9c, 0xcd,
	0xad, 0xda, 0x82, 0x2d, 0x53, 0x62, 0x10, 0x53, 0x72, 0x66, 0x04, 0xd3, 0x69, 0x04, 0xfe, 0x82,
	0x2d, 0xb4, 0xb7, 0x16, 0x74, 0xec, 0x35, 0x31, 0x24, 0x6b, 0xde, 0xd3, 0xe4, 0x1d, 0x6b, 0x01,
	0xb0, 0x05, 0x14, 0xa3, 0x3b, 0xda, 0x57, 0x82, 0xfc, 0x15, 0x7b, 0xa0, 0x30, 0x9a, 0x4b, 0xa5,
	0x63, 0xb9, 0x47, 0x13, 0x01, 0xc5, 0x98, 0xbc, 0xc5, 0x2d, 0xfe, 0x46, 0x94, 0x3f, 0x66, 0x63,
	0xb8, 0x01, 0xdd, 0x82, 0xb8, 0x4f, 0xfd, 0xbe, 0xea, 0x02, 0x9c, 0x8f, 0xb0, 0xf5, 0xfe, 0x47,
	0x09, 0x95, 0x89, 0x1e, 0xc5, 0x24, 0x05, 0xdc, 0xe2, 0x4f, 0x44, 0xbb, 0xfd, 0xa7, 0x85, 0x94,
	0xaa, 0xaa, 0x8d, 0x13, 0xb3, 0xb4, 0xff, 0xc4, 0xd6, 0x1d, 0xe2, 0x8f, 0xd8, 0x08, 0xbd, 0x85,
	0x20, 0xb2, 0xee, 0xcc, 0x8b, 0x54, 0x9c, 0x6e, 0xd8, 0xb0, 0xf0, 0x16, 0x38, 0x67, 0x43, 0xa7,
	0x6a, 0xa0, 0xfb, 0xcf, 0x0a, 0xfa, 0xe7, 0x1f, 0xd8, 0xb4, 0x01, 0xac, 0x4d, 0x08, 0xc6, 0xbb,
	0xee, 0xae, 0x06, 0xcb, 0xe9, 0xbb, 0x87, 0xe9, 0x19, 0xe5, 0xc7, 0x4f, 0xa8, 0x38, 0xf6, 0xb6,
	0x63, 0x12, 0xde, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x03, 0xb1, 0xe4, 0x12, 0xb7, 0x02, 0x00,
	0x00,
}
