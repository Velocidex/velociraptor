name: Windows.Detection.TemplateInjection
description: |
    This content will detect injected templates in Office documents.   
    
    Template injection is a form of defence evasion where a malicious macro 
    is loaded into an OOXML document via a resource file masquerading as 
    an office template.   
    
    The default artifact will also detect MSHTML RCE Vulnerability #CVE-2021-40444.  
      
    This artifact can also be modified to search for other suspicious rels files:  
    - document.xml.rels = macros, ole objects, images  
    - settings.xml.rels = templates  
    - websettings.xml.rels = frames  
    - header#.xml.rels and footer#.xml.rels and others has also been observed 
    hosting image files for canary files or abused for NetNTLM hash colleciton.  
    
    Change TemplateFileRegex to '\\.xml\\.rels$' for looser file selection.  
    Change TemplateTargetRegex to '^(https?|smb|\\\\|//|mhtml|file)' for looser 
    Target selection.  

author: Matt Green - @mgreen27

reference:
  - https://attack.mitre.org/techniques/T1221/
  - https://www.sans.org/reading-room/whitepapers/testing/template-injection-attacks-bypassing-security-controls-living-land-38780

type: CLIENT

parameters:
  - name: SearchGlob
    description: Glob to search
    default: C:\Users\**\*.{docx,dotx,xlsx,xltx,pptx,potx,ppsx,sldx}
  - name: TemplateFileRegex
    description: Regex to search inside resource section.
    default: '(document|settings)\.xml\.rels$'
  - name: TemplateTargetRegex
    description: Regex to search inside resource section.
    default: '^(https?|smb|\\\\|//|mhtml)'
  - name: UploadDocument
    type: bool
    description: Select to upload document on detection.
    

sources:
  - precondition:
      SELECT OS From info() where OS = 'windows'

    query: |
      -- Find target docs
      LET office_docs = SELECT FullPath AS OfficePath
        FROM glob(globs=SearchGlob)

      -- select zip members inside the doc that have some content.
      LET document_parts = SELECT * FROM foreach(row=office_docs,
            query= {
                SELECT *,
                    FullPath AS ZipMemberPath,
                    OfficePath
                FROM glob(globs=url(
                    scheme="file", path=OfficePath, fragment="/**").String,
                    accessor='zip')
                WHERE not IsDir and Size > 0 and ZipMemberPath =~ TemplateFileRegex
            })
            
      -- parse settings file by line and extract config
      LET template = SELECT * FROM foreach(row=document_parts,
        query={
            SELECT 
                FullPath as SectionPath,
                url(parse=FullPath).Path as Document,
                url(parse=FullPath).Fragment as Section,
                parse_string_with_regex(
                    string=Line,
                    regex=['\\s+Target="(?P<Target>.+)"\\s+TargetMode='
                        ]).Target as TemplateTarget,
                Mtime as SectionMtime,
                Atime as SectionAtime,
                Ctime as SectionCtime
            FROM parse_lines(filename=FullPath,accessor='zip')
            WHERE TemplateTarget
        })
            
      -- search settings for remote or file templates, format mshtml entries
      LET hits = SELECT * FROM foreach(row=template,
            query={
                SELECT
                    FullPath,
                    hash(path=FullPath) as Hash,
                    Mtime,
                    Size,
                    Section,
                    regex_replace(source=TemplateTarget,re='.*Target="(mhtml)',replace='mhtml') as TemplateTarget,
                    SectionMtime,
                    hash(path=SectionPath,accessor='zip') as SectionHash
                FROM stat(filename=Document)
                WHERE
                    TemplateTarget =~ TemplateTargetRegex
                     AND (( Section=~'/document.xml.rels$' AND TemplateTarget=~'^mhtml:' ) 
                            OR NOT Section=~'/document.xml.rels$' )
            })

      -- upload hits to server
      LET upload_hits = SELECT 
            FullPath,
            Hash,
            Mtime,
            Size,
            Section,
            TemplateTarget,
            SectionMtime,
            SectionHash,
            upload(file=DocumentPath) as Upload
        FROM hits
      
      -- output rows
      SELECT * FROM if(condition= UploadDocument,
            then= upload_hits,
            else= hits)