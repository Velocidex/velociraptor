name: Windows.Detection.ProcessMemory.CobaltStrike
description: |
  This artifact scans processes for a Cobalt Strike yara signature and enables 
  fast upload of processes with hits for analysis
  
  Commonly abused by attackers for its high feature / low cost return on 
  investment, Cobalt Strike is a commercial penetration testing tool providing 
  post exploitation capability throughout the attack lifecycle.

author: "Matt Green - @mgreen27"

reference:
  - https://attack.mitre.org/software/S0154/
  - https://malpedia.caad.fkie.fraunhofer.de/details/win.cobalt_strike

parameters:
  - name: ProcessRegex
    default: .
  - name: PidRegex
    default: .
  - name: UploadHits
    type: bool
  - name: YaraRule
    default: |
      rule win_cobalt_strike_auto {
         meta:
           author = "Felix Bilstein - yara-signator at cocacoding dot com"
           date = "2019-11-26"
           version = "1"
           description = "autogenerated rule brought to you by yara-signator"
           tool = "yara-signator 0.2a"
           malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cobalt_strike"
           malpedia_license = "CC BY-SA 4.0"
           malpedia_sharing = "TLP:WHITE"

         strings:
           $sequence_0 = { 3bc7 750d ff15???????? 3d33270000 }
           $sequence_1 = { e9???????? eb0a b801000000 e9???????? }
           $sequence_2 = { 8bd0 e8???????? 85c0 7e0e }
           $sequence_3 = { ffb5f8f9ffff ff15???????? 8b4dfc 33cd e8???????? c9 c3 }
           $sequence_4 = { e8???????? e9???????? 833d?????????? 7505 e8???????? }
           $sequence_5 = { 250000ff00 33d0 8b4db0 c1e908 }
           $sequence_6 = { ff75f4 ff7610 ff761c ff75fc }
           $sequence_7 = { 8903 6a06 eb39 33ff 85c0 762b 03f1 }
           $sequence_8 = { 894dd4 8b458c d1f8 894580 8b45f8 c1e818 0fb6c8 }
           $sequence_9 = { 890a 8b4508 0fb64804 81e1ff000000 c1e118 8b5508 0fb64205 }
           $sequence_10 = { 33d2 e8???????? 48b873797374656d3332 4c8bc7 488903 49ffc0 }
           $sequence_11 = { 488bd1 498d4bd8 498943e0 498943e8 }
           $sequence_12 = { b904000000 486bc90e 488b542430 4c8b442430 418b0c08 8b0402 }
           $sequence_13 = { ba80000000 e8???????? 488d4c2438 e8???????? 488d4c2420 8bd0 e8???????? }
           $sequence_14 = { 488b4c2430 8b0401 89442428 b804000000 486bc004 }
           $sequence_15 = { 4883c708 4883c304 49ffc3 48ffcd 0f854fffffff 488d4c2420 }

        condition:
            7 of them
      }

sources:
  - precondition:
      SELECT OS From info() where OS = 'windows'

    query: |
      -- find velociraptor process
      LET me = SELECT Pid FROM pslist(pid=getpid())
      
      -- find all processes and add filters
      LET processes = SELECT Name as ProcessName, CommandLine, Pid
        FROM pslist()
        WHERE 
            Name =~ ProcessRegex
            AND format(format="%d", args=Pid) =~ PidRegex
            AND NOT Pid in me.Pid

      -- scan processes in scope with our rule
      LET hits = SELECT * FROM foreach(
        row=processes,
        query={
            SELECT 
                ProcessName,
                CommandLine,
                Pid,
                Strings.Offset as Offsets,
                Namespace,
                Rule,
                Meta,
                Strings.Name as IOCname,
                Strings.Data as IOCdata
             FROM proc_yara(rules=YaraRule, pid=Pid) 
             LIMIT 1
          })
      
      -- upload hits using proc_dump plugin
      LET upload_hits = SELECT * FROM foreach(
        row=hits,
        query={
            SELECT 
                ProcessName,
                CommandLine,
                Pid,
                Offsets,
                Namespace,
                Rule,
                Meta,
                IOCname,
                IOCdata,
                upload(file=FullPath,name=format(format='%v-%v.dmp',
                    args= [ split(string=ProcessName,sep='\\.')[0], Pid ]
                        )) as ProcessDump
            FROM proc_dump(pid=Pid)
          })
      
      -- output rows
      SELECT * FROM if(condition= UploadHits,
            then= upload_hits,
            else= hits)