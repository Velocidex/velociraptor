name: Windows.EventLogs.Cleared

description: |
  Extract Event Logs related to EventLog clearing 
  - Security Log  - EventID 1102
  - System Log - EventID 104

reference:
  - https://attack.mitre.org/versions/v6/techniques/T1070/

author: Matt Green - @mgreen27

precondition: SELECT OS From info() where OS = 'windows'

parameters:
  - name: EvtxLookupTable
    default: |
        Glob
        %SystemRoot%\System32\Winevt\Logs\Security.evtx
        %SystemRoot%\System32\Winevt\Logs\System.evtx
  - name: DateAfter
    type: timestamp
    description: "search for events after this date. YYYY-MM-DDTmm:hh:ssZ"
  - name: DateBefore
    type: timestamp
    description: "search for events before this date. YYYY-MM-DDTmm:hh:ssZ"
  - name: SearchVSS
    description: "Add VSS into query."
    type: bool

sources:
  - queries:
      # Date bounds for time box
      - LET DateAfterTime <= if(condition=DateAfter,
            then=timestamp(epoch=DateAfter), else=timestamp(epoch="1600-01-01"))
      - LET DateBeforeTime <= if(condition=DateBefore,
            then=timestamp(epoch=DateBefore), else=timestamp(epoch="2200-01-01"))

      # Extract all target paths from specified globs
      - LET evtxglobs <= SELECT expand(path=Glob) as EvtxGlob
                     FROM parse_csv(filename=EvtxLookupTable, accessor='data')

      - LET files = SELECT * FROM foreach(
            row=evtxglobs,
            query={
                SELECT * FROM if(condition=SearchVSS,
                    then= {
                        SELECT *
                        FROM Artifact.Windows.Search.VSS(SearchFilesGlob=EvtxGlob)
                    },
                    else= {
                        SELECT *, FullPath as Source
                        FROM glob(globs=EvtxGlob)
                    })
                })

     # Parse all target files, order by source and add dedupe string
      - LET hits = SELECT *
            FROM foreach(
                row=files,
                query={
                    SELECT
                        timestamp(epoch=int(int=System.TimeCreated.SystemTime)) AS EventTime,
                        System.Computer as Computer,
                        System.EventID.Value as EventID,
                        System.EventRecordID as EventRecordID,
                        if(condition= System.EventID.Value = 1102,
                            then= System.Channel,
                            else= UserData.LogFileCleared.Channel) as Channel,
                        if(condition= System.EventID.Value = 1102,
                            then= UserData.LogFileCleared.SubjectDomainName + '\\' +
                                UserData.LogFileCleared.SubjectUserName,
                            else= UserData.LogFileCleared.SubjectDomainName + '\\' +
                                UserData.LogFileCleared.SubjectUserName) as UserName,
                        if(condition= System.EventID.Value = 1102, 
                            then= UserData.LogFileCleared.SubjectUserSid,
                            else= System.Security.UserID) as SecurityID,
                        Message,
                        Source,
                        format(format="%v-%v-%v",args=[System.EventID.Value,System.EventRecordID,
                            timestamp(epoch=int(int=System.TimeCreated.SystemTime))]) as _Group
                FROM parse_evtx(filename=FullPath)
                WHERE
                    EventTime < DateBeforeTime AND
                    EventTime > DateAfterTime AND
                    ( EventID = 1102 AND Channel = 'Security' AND Message =~ 'cleared')
                    OR ( EventID = 104 AND Message =~ 'Log clear' )
            })
            ORDER BY Source DESC

      # Group results for deduplication
      - LET grouped = SELECT *
          FROM hits
          GROUP BY _Group

      # Output results
      - SELECT
            EventTime,
            Computer,
            EventID,
            EventRecordID,
            Channel,
            UserName,
            SecurityID,
            Message,
            Source
        FROM grouped