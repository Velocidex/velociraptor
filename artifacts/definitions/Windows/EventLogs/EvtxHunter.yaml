name: Windows.EventLogs.EvtxHunter

description: |
  This Artifact will hunt the Event Log message field for a regex value.
  For example and IP, username or string.
  
  Searching EventLog files is helpful for triage and scoping an incident.
  The idea is a user can search for any IOC or other string of interest and 
  return all results across the Event Log ecosystem.  
  
  There are several parameter's available for search leveraging regex.   
    - EvtxGlob glob of EventLogs to target. Default to all but can be targeted.
    - dateAfter enables search for events after this date.  
    - dateBefore enables search for events before this date.   
    - IocRegex enables regex search over the message field.  
    - WhitelistRegex enables a regex whitelist for the Message field. 
    
    Note: this artifact can potentially be heavy on the endpoint. 
    Please use with caution. 
    EventIds with an EventData field regex will be aplied and requires double 
    escape for backslash due to serialisation of this field. 
    E.g C:\\\\FOLDER\\\\binary\\.exe
    For EventIds with no EventData the Message field is queried and requires 
    standard velociraptor escape. E.g C:\\FOLDER\\binary\\.exe

author: Matt Green - @mgreen27

precondition: SELECT OS From info() where OS = 'windows'

parameters:
  - name: EvtxGlob
    default: '%SystemRoot%\System32\Winevt\Logs\*.evtx'
  - name: IocRegex
    description: "IOC Regex"
    default:
  - name: WhitelistRegex
    description: "Regex of string to witelist"
  - name: SearchVSS
    description: "Add VSS into query."
    type: bool
  - name: DateAfter
    type: timestamp
    description: "search for events after this date. YYYY-MM-DDTmm:hh:ssZ"
  - name: DateBefore
    type: timestamp
    description: "search for events before this date. YYYY-MM-DDTmm:hh:ssZ"

sources:
  - queries:
      # Date bounds for time box
      - LET DateAfterTime <= if(condition=DateAfter, 
            then=timestamp(epoch=DateAfter), else=timestamp(epoch="1600-01-01"))
      - LET DateBeforeTime <= if(condition=DateBefore, 
            then=timestamp(epoch=DateBefore), else=timestamp(epoch="2200-01-01"))
      
      # Extract all target paths from specified globs
      - LET evtxglobs <= SELECT FullPath
                FROM glob(globs=expand(path=EvtxGlob))

      - LET files <= SELECT * FROM foreach(
            row=evtxglobs,
            query={
                SELECT * FROM if(condition=SearchVSS,
                    then= {
                        SELECT * 
                        FROM Artifact.Windows.Search.VSS(SearchFilesGlob=FullPath)
                    },
                    else= {
                        SELECT *, FullPath AS Source
                        FROM glob(globs=FullPath)
                    })
                })

     # Parse all target files and order by source
      - LET hits <=  SELECT *
            FROM foreach(
                row=files,
                query={
                    SELECT 
                        timestamp(epoch=int(int=System.TimeCreated.SystemTime)) AS EventTime,
                        System.Computer as Computer, 
                        System.Channel as Channel,
                        System.EventID.Value as EventID,
                        System.EventRecordID as EventRecordID,
                        if(condition=EventData,then= EventData) as EventData,
                        if(condition=Message,then= Message) as Message,
                        Source
                FROM parse_evtx(filename=FullPath)
                WHERE ( EventData OR Message )
                    AND EventTime < DateBeforeTime
                    AND EventTime > DateAfterTime 
                    AND if(condition=EventData,
                        then= str(str=EventData) =~ IocRegex,
                        else= if(condition=Message,
                            then= Message=~IocRegex))
            })
            ORDER BY Source

      # Group results for deduplication
      - LET grouped = SELECT *
          FROM hits
          GROUP BY EventTime, EventRecordID, EventID, Channel

      # Output results
      - SELECT
            EventTime,
            Computer,
            Channel,
            EventID,
            EventRecordID,
            EventData,
            Message,
            Source
        FROM grouped  