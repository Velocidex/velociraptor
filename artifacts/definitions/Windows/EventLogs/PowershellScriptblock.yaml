name: Windows.EventLogs.PowershellScriptblock
description: |
  This Artifact will search and extract ScriptBlock events (Event ID 4104) from
  Powershell-Operational Event Logs.

  Powershell is commonly used by attackers accross all stages of the attack
  lifecycle. A valuable hunt is to search Scriptblock logs for signs of
  malicious content.

  There are several parameter's availible for search leveraging regex.
    - DateAfter enables search for events after this date.
    - DateBefore enables search for events before this date.
    - SearchStrings enables regex search over scriptblock text field.
    - StringWhiteList enables a regex whitelist for scriptblock text field.
    - PathWhitelist enables a regex whitelist for path of scriptblock.
    - LogLevel enables searching on type of log. Default is Warning level
      which is logged even if ScriptBlock logging is turned off when
      suspicious keywords detected in Powershell interpreter. See second
      reference for list of keywords.
    - SearchVSS enables VSS search

author: Matt Green - @mgreen27

reference:
  - https://attack.mitre.org/techniques/T1059/001/
  - https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/runtime/CompiledScriptBlock.cs#L1781-L1943

parameters:
  - name: EventLog
    default: C:\Windows\system32\winevt\logs\Microsoft-Windows-PowerShell%4Operational.evtx
  - name: DateAfter
    description: "search for events after this date. YYYY-MM-DDTmm:hh:ss Z"
    type: timestamp
  - name: DateBefore
    description: "search for events before this date. YYYY-MM-DDTmm:hh:ss Z"
    type: timestamp
  - name: SearchStrings
    description: "regex search over scriptblock text field."
  - name: StringWhitelist
    description: "Regex of string to witelist"
  - name: PathWhitelist
    description: "Regex of path to whitelist."
    
  - name: FileAccessor
    description: "File Accessor"
    default: file
    
  - name: LogLevel
    description: "Log level. Warning is Powershell default bad keyword list."
    type: choices
    default: Warning
    choices:
       - All
       - Warning
       - Verbose
  - name: LogLevelMap
    type: hidden
    default: |
      Choice,Regex
      All,"."
      Warning,"3"
      Verbose,"5"
  - name: SearchVSS
    description: "Add VSS into query."
    type: bool

sources:
  - query: |
        -- Build time bounds
        LET DateAfterTime <= if(condition=DateAfter,
            then=timestamp(epoch=DateAfter), else=timestamp(epoch="1600-01-01"))
        LET DateBeforeTime <= if(condition=DateBefore,
            then=timestamp(epoch=DateBefore), else=timestamp(epoch="2200-01-01"))

        -- Parse Log level dropdown selection
        LET LogLevelRegex <= SELECT format(format="%v", args=Regex) as value
            FROM parse_csv(filename=LogLevelMap, accessor="data")
            WHERE Choice=LogLevel LIMIT 1

        -- Determine target files
        LET files = SELECT *
          FROM if(condition=SearchVSS,
            then= {
              SELECT *
              FROM Artifact.Windows.Search.VSS(SearchFilesGlob=EventLog)
            },
            else= {
              SELECT *, FullPath AS Source
              FROM glob(globs=EventLog, accessor=FileAccessor)
            })

        -- Main query
        LET hits = SELECT *
          FROM foreach(
            row=files,
            query={
              SELECT timestamp(epoch=System.TimeCreated.SystemTime) As EventTime,
                System.EventID.Value as EventID,
                System.Computer as Computer,
                System.Security.UserID as SecurityID,
                EventData.Path as Path,
                EventData.ScriptBlockId as ScriptBlockId,
                EventData.ScriptBlockText as ScriptBlockText,
                Message,
                System.EventRecordID as EventRecordID,
                System.Level as Level,
                System.Opcode as Opcode,
                System.Task as Task,
                Source
              FROM parse_evtx(filename=FullPath, accessor=FileAccessor)
              WHERE System.EventID.Value = 4104
                AND EventTime < DateBeforeTime
                AND EventTime > DateAfterTime
                AND format(format="%d", args=System.Level) =~ LogLevelRegex.value[0]
                AND if(condition=SearchStrings,
                    then=ScriptBlockText =~ SearchStrings,
                    else=TRUE)
                AND if(condition=StringWhitelist,
                    then= NOT ScriptBlockText =~ StringWhitelist,
                    else=TRUE)
                AND if(condition=PathWhitelist,
                    then= NOT Path =~ PathWhitelist,
                    else=TRUE)
          })
          ORDER BY Source DESC

        -- Group results for deduplication
        LET grouped = SELECT *
          FROM hits
          GROUP BY EventRecordID

        -- Output results
        SELECT
            EventTime,
            EventID,
            Computer,
            SecurityID,
            Path,
            ScriptBlockId,
            ScriptBlockText,
            Message,
            EventRecordID,
            Level,
            Opcode,
            Task,
            Source
        FROM grouped
