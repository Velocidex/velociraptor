// Code generated by protoc-gen-go. DO NOT EDIT.
// source: artifact.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	_ "www.velocidex.com/golang/velociraptor/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FieldDescriptor struct {
	FriendlyName string   `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Repeated     bool     `protobuf:"varint,3,opt,name=repeated,proto3" json:"repeated,omitempty"`
	Type         string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Doc          string   `protobuf:"bytes,5,opt,name=doc,proto3" json:"doc,omitempty"`
	Labels       []string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	Default      string   `protobuf:"bytes,7,opt,name=default,proto3" json:"default,omitempty"`
	// Same as doc field.
	Description          string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldDescriptor) Reset()         { *m = FieldDescriptor{} }
func (m *FieldDescriptor) String() string { return proto.CompactTextString(m) }
func (*FieldDescriptor) ProtoMessage()    {}
func (*FieldDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{0}
}

func (m *FieldDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDescriptor.Unmarshal(m, b)
}
func (m *FieldDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDescriptor.Marshal(b, m, deterministic)
}
func (m *FieldDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDescriptor.Merge(m, src)
}
func (m *FieldDescriptor) XXX_Size() int {
	return xxx_messageInfo_FieldDescriptor.Size(m)
}
func (m *FieldDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDescriptor proto.InternalMessageInfo

func (m *FieldDescriptor) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *FieldDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldDescriptor) GetRepeated() bool {
	if m != nil {
		return m.Repeated
	}
	return false
}

func (m *FieldDescriptor) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FieldDescriptor) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

func (m *FieldDescriptor) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *FieldDescriptor) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *FieldDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type EnumValue struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnumValue) Reset()         { *m = EnumValue{} }
func (m *EnumValue) String() string { return proto.CompactTextString(m) }
func (*EnumValue) ProtoMessage()    {}
func (*EnumValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{1}
}

func (m *EnumValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnumValue.Unmarshal(m, b)
}
func (m *EnumValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnumValue.Marshal(b, m, deterministic)
}
func (m *EnumValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnumValue.Merge(m, src)
}
func (m *EnumValue) XXX_Size() int {
	return xxx_messageInfo_EnumValue.Size(m)
}
func (m *EnumValue) XXX_DiscardUnknown() {
	xxx_messageInfo_EnumValue.DiscardUnknown(m)
}

var xxx_messageInfo_EnumValue proto.InternalMessageInfo

func (m *EnumValue) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *EnumValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TypeDescriptor struct {
	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	// Same as doc field.
	Description  string             `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Fields       []*FieldDescriptor `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Name         string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	FriendlyName string             `protobuf:"bytes,7,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	Kind         string             `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	// The fields are all part of a single one of structure. NOTE:
	// Currently we only support an all or nothing approach to oneof -
	// there can be at most a single oneof group within the proto and
	// it implies that all the fields belong to it.
	Oneof                bool         `protobuf:"varint,5,opt,name=oneof,proto3" json:"oneof,omitempty"`
	Default              string       `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`
	AllowedValues        []*EnumValue `protobuf:"bytes,8,rep,name=allowed_values,json=allowedValues,proto3" json:"allowed_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TypeDescriptor) Reset()         { *m = TypeDescriptor{} }
func (m *TypeDescriptor) String() string { return proto.CompactTextString(m) }
func (*TypeDescriptor) ProtoMessage()    {}
func (*TypeDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{2}
}

func (m *TypeDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeDescriptor.Unmarshal(m, b)
}
func (m *TypeDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeDescriptor.Marshal(b, m, deterministic)
}
func (m *TypeDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeDescriptor.Merge(m, src)
}
func (m *TypeDescriptor) XXX_Size() int {
	return xxx_messageInfo_TypeDescriptor.Size(m)
}
func (m *TypeDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_TypeDescriptor proto.InternalMessageInfo

func (m *TypeDescriptor) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

func (m *TypeDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TypeDescriptor) GetFields() []*FieldDescriptor {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *TypeDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TypeDescriptor) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *TypeDescriptor) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TypeDescriptor) GetOneof() bool {
	if m != nil {
		return m.Oneof
	}
	return false
}

func (m *TypeDescriptor) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *TypeDescriptor) GetAllowedValues() []*EnumValue {
	if m != nil {
		return m.AllowedValues
	}
	return nil
}

type Types struct {
	Items                []*TypeDescriptor `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Types) Reset()         { *m = Types{} }
func (m *Types) String() string { return proto.CompactTextString(m) }
func (*Types) ProtoMessage()    {}
func (*Types) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{3}
}

func (m *Types) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Types.Unmarshal(m, b)
}
func (m *Types) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Types.Marshal(b, m, deterministic)
}
func (m *Types) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Types.Merge(m, src)
}
func (m *Types) XXX_Size() int {
	return xxx_messageInfo_Types.Size(m)
}
func (m *Types) XXX_DiscardUnknown() {
	xxx_messageInfo_Types.DiscardUnknown(m)
}

var xxx_messageInfo_Types proto.InternalMessageInfo

func (m *Types) GetItems() []*TypeDescriptor {
	if m != nil {
		return m.Items
	}
	return nil
}

type ArtifactParameter struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Default     string `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// For type = choice
	Choices              []string `protobuf:"bytes,6,rep,name=choices,proto3" json:"choices,omitempty"`
	FriendlyName         string   `protobuf:"bytes,5,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtifactParameter) Reset()         { *m = ArtifactParameter{} }
func (m *ArtifactParameter) String() string { return proto.CompactTextString(m) }
func (*ArtifactParameter) ProtoMessage()    {}
func (*ArtifactParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{4}
}

func (m *ArtifactParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactParameter.Unmarshal(m, b)
}
func (m *ArtifactParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactParameter.Marshal(b, m, deterministic)
}
func (m *ArtifactParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactParameter.Merge(m, src)
}
func (m *ArtifactParameter) XXX_Size() int {
	return xxx_messageInfo_ArtifactParameter.Size(m)
}
func (m *ArtifactParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactParameter.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactParameter proto.InternalMessageInfo

func (m *ArtifactParameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtifactParameter) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *ArtifactParameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ArtifactParameter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ArtifactParameter) GetChoices() []string {
	if m != nil {
		return m.Choices
	}
	return nil
}

func (m *ArtifactParameter) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

type ArtifactSource struct {
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Precondition         string   `protobuf:"bytes,1,opt,name=precondition,proto3" json:"precondition,omitempty"`
	Queries              []string `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
	PostProcess          []string `protobuf:"bytes,5,rep,name=post_process,json=postProcess,proto3" json:"post_process,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtifactSource) Reset()         { *m = ArtifactSource{} }
func (m *ArtifactSource) String() string { return proto.CompactTextString(m) }
func (*ArtifactSource) ProtoMessage()    {}
func (*ArtifactSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{5}
}

func (m *ArtifactSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactSource.Unmarshal(m, b)
}
func (m *ArtifactSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactSource.Marshal(b, m, deterministic)
}
func (m *ArtifactSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactSource.Merge(m, src)
}
func (m *ArtifactSource) XXX_Size() int {
	return xxx_messageInfo_ArtifactSource.Size(m)
}
func (m *ArtifactSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactSource.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactSource proto.InternalMessageInfo

func (m *ArtifactSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtifactSource) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ArtifactSource) GetPrecondition() string {
	if m != nil {
		return m.Precondition
	}
	return ""
}

func (m *ArtifactSource) GetQueries() []string {
	if m != nil {
		return m.Queries
	}
	return nil
}

func (m *ArtifactSource) GetPostProcess() []string {
	if m != nil {
		return m.PostProcess
	}
	return nil
}

type Report struct {
	// Each report type will be handled differently. Read about the
	// different types in reporting.go
	Type                 string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Template             string               `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Parameters           []*ArtifactParameter `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Report) Reset()         { *m = Report{} }
func (m *Report) String() string { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()    {}
func (*Report) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{6}
}

func (m *Report) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Report.Unmarshal(m, b)
}
func (m *Report) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Report.Marshal(b, m, deterministic)
}
func (m *Report) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Report.Merge(m, src)
}
func (m *Report) XXX_Size() int {
	return xxx_messageInfo_Report.Size(m)
}
func (m *Report) XXX_DiscardUnknown() {
	xxx_messageInfo_Report.DiscardUnknown(m)
}

var xxx_messageInfo_Report proto.InternalMessageInfo

func (m *Report) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Report) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *Report) GetParameters() []*ArtifactParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type Artifact struct {
	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Author      string   `protobuf:"bytes,12,opt,name=author,proto3" json:"author,omitempty"`
	Reference   []string `protobuf:"bytes,5,rep,name=reference,proto3" json:"reference,omitempty"`
	// If set here this applies to all sources.
	Precondition string               `protobuf:"bytes,8,opt,name=precondition,proto3" json:"precondition,omitempty"`
	Parameters   []*ArtifactParameter `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// Unfortunately we can not use enum due to limitations in
	// yaml->json->protobuf conversion.
	Type     string            `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Sources  []*ArtifactSource `protobuf:"bytes,4,rep,name=sources,proto3" json:"sources,omitempty"`
	Includes []string          `protobuf:"bytes,9,rep,name=includes,proto3" json:"includes,omitempty"`
	Reports  []*Report         `protobuf:"bytes,11,rep,name=reports,proto3" json:"reports,omitempty"`
	// Internal use only
	Raw                  string   `protobuf:"bytes,7,opt,name=raw,proto3" json:"raw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{7}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Artifact) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Artifact) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Artifact) GetReference() []string {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *Artifact) GetPrecondition() string {
	if m != nil {
		return m.Precondition
	}
	return ""
}

func (m *Artifact) GetParameters() []*ArtifactParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Artifact) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Artifact) GetSources() []*ArtifactSource {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *Artifact) GetIncludes() []string {
	if m != nil {
		return m.Includes
	}
	return nil
}

func (m *Artifact) GetReports() []*Report {
	if m != nil {
		return m.Reports
	}
	return nil
}

func (m *Artifact) GetRaw() string {
	if m != nil {
		return m.Raw
	}
	return ""
}

type ArtifactDescriptors struct {
	Items                []*Artifact `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ArtifactDescriptors) Reset()         { *m = ArtifactDescriptors{} }
func (m *ArtifactDescriptors) String() string { return proto.CompactTextString(m) }
func (*ArtifactDescriptors) ProtoMessage()    {}
func (*ArtifactDescriptors) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{8}
}

func (m *ArtifactDescriptors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactDescriptors.Unmarshal(m, b)
}
func (m *ArtifactDescriptors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactDescriptors.Marshal(b, m, deterministic)
}
func (m *ArtifactDescriptors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactDescriptors.Merge(m, src)
}
func (m *ArtifactDescriptors) XXX_Size() int {
	return xxx_messageInfo_ArtifactDescriptors.Size(m)
}
func (m *ArtifactDescriptors) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactDescriptors.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactDescriptors proto.InternalMessageInfo

func (m *ArtifactDescriptors) GetItems() []*Artifact {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*FieldDescriptor)(nil), "proto.FieldDescriptor")
	proto.RegisterType((*EnumValue)(nil), "proto.EnumValue")
	proto.RegisterType((*TypeDescriptor)(nil), "proto.TypeDescriptor")
	proto.RegisterType((*Types)(nil), "proto.Types")
	proto.RegisterType((*ArtifactParameter)(nil), "proto.ArtifactParameter")
	proto.RegisterType((*ArtifactSource)(nil), "proto.ArtifactSource")
	proto.RegisterType((*Report)(nil), "proto.Report")
	proto.RegisterType((*Artifact)(nil), "proto.Artifact")
	proto.RegisterType((*ArtifactDescriptors)(nil), "proto.ArtifactDescriptors")
}

func init() { proto.RegisterFile("artifact.proto", fileDescriptor_a1932e98ed811590) }

var fileDescriptor_a1932e98ed811590 = []byte{
	// 1614 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4f, 0x6f, 0x23, 0x49,
	0x15, 0x57, 0xc7, 0xe3, 0xc4, 0xa9, 0xf9, 0xb3, 0x4b, 0x01, 0x4b, 0x33, 0x07, 0x78, 0x78, 0x04,
	0x64, 0x20, 0xdb, 0x11, 0x3b, 0x8c, 0x76, 0x09, 0x2b, 0x24, 0x7b, 0x26, 0xec, 0x66, 0x95, 0xb1,
	0x33, 0x9d, 0x68, 0x46, 0xbb, 0x97, 0xa8, 0xd2, 0xfd, 0x6c, 0x17, 0x53, 0x5d, 0xd5, 0x53, 0x55,
	0x3d, 0x8e, 0xb9, 0x70, 0x40, 0xe2, 0xb6, 0x12, 0x02, 0x21, 0x01, 0xe2, 0x3b, 0x20, 0x3e, 0x00,
	0x37, 0x3e, 0x01, 0x07, 0x24, 0x38, 0x2d, 0xf0, 0x35, 0x38, 0xa0, 0xaa, 0xae, 0x76, 0xdb, 0xf1,
	0x08, 0xc4, 0x81, 0x93, 0x5d, 0xd5, 0xaf, 0xde, 0xfb, 0xbd, 0xf7, 0x7e, 0xef, 0x57, 0x45, 0xee,
	0x30, 0x6d, 0xf9, 0x84, 0x65, 0x36, 0x29, 0xb5, 0xb2, 0x8a, 0x76, 0xfd, 0xcf, 0xdd, 0xc3, 0xf9,
	0x7c, 0x9e, 0xbc, 0x42, 0xa1, 0x32, 0x9e, 0xe3, 0x55, 0x92, 0xa9, 0xe2, 0x60, 0xaa, 0x04, 0x93,
	0xd3, 0x83, 0x7a, 0x53, 0xb3, 0xd2, 0x2a, 0x7d, 0xe0, 0x8d, 0x0f, 0x0c, 0x16, 0x4c, 0x5a, 0x9e,
	0xd5, 0x2e, 0xfa, 0x9f, 0x45, 0xe4, 0x8d, 0x1f, 0x72, 0x14, 0xf9, 0x63, 0x34, 0x99, 0xe6, 0xce,
	0x90, 0xde, 0x23, 0xb7, 0x27, 0x9a, 0xa3, 0xcc, 0xc5, 0xe2, 0x42, 0xb2, 0x02, 0xe3, 0x08, 0xa2,
	0xbd, 0xdd, 0xf4, 0x56, 0xb3, 0x39, 0x62, 0x05, 0x52, 0x4a, 0x6e, 0xf8, 0x6f, 0x5b, 0xfe, 0x9b,
	0xff, 0x4f, 0xef, 0x92, 0x9e, 0xc6, 0x12, 0x99, 0xc5, 0x3c, 0xee, 0x40, 0xb4, 0xd7, 0x4b, 0x97,
	0x6b, 0x67, 0x6f, 0x17, 0x25, 0xc6, 0x37, 0x6a, 0x7b, 0xf7, 0x9f, 0xbe, 0x49, 0x3a, 0xb9, 0xca,
	0xe2, 0xae, 0xdf, 0x72, 0x7f, 0xe9, 0x5b, 0x64, 0x5b, 0xb0, 0x4b, 0x14, 0x26, 0xde, 0x86, 0xce,
	0xde, 0x6e, 0x1a, 0x56, 0x34, 0x26, 0x3b, 0x39, 0x4e, 0x58, 0x25, 0x6c, 0xbc, 0xe3, 0xad, 0x9b,
	0x25, 0x05, 0x72, 0x33, 0x0f, 0xd0, 0xb9, 0x92, 0x71, 0xcf, 0x7f, 0x5d, 0xdd, 0xea, 0x3f, 0x24,
	0xbb, 0x47, 0xb2, 0x2a, 0x9e, 0x31, 0x51, 0x21, 0xfd, 0x02, 0xe9, 0xbe, 0x72, 0x7f, 0x7c, 0x4e,
	0xdd, 0xb4, 0x5e, 0xbc, 0x2e, 0x99, 0xfe, 0xdf, 0xb7, 0xc8, 0x9d, 0xf3, 0x45, 0x89, 0x2b, 0x85,
	0x09, 0x78, 0xa3, 0x16, 0xef, 0xb5, 0xe8, 0xbb, 0x1b, 0xd1, 0x69, 0x42, 0xb6, 0x27, 0xae, 0xbe,
	0x26, 0xde, 0x82, 0xce, 0xde, 0xcd, 0x77, 0xde, 0xaa, 0x0b, 0x9f, 0x5c, 0x2b, 0x7a, 0x1a, 0xac,
	0x96, 0x50, 0x3a, 0x2b, 0x75, 0xdd, 0x68, 0xc8, 0xce, 0xeb, 0x1b, 0xf2, 0x82, 0xcb, 0xbc, 0x29,
	0xb0, 0xfb, 0xef, 0xb2, 0x55, 0x12, 0xd5, 0xc4, 0x97, 0xb8, 0x97, 0xd6, 0x0b, 0x3a, 0x6e, 0x8b,
	0xb9, 0xed, 0x8c, 0x87, 0x0f, 0xff, 0xf1, 0xaf, 0x7f, 0xfe, 0x29, 0x3a, 0xa0, 0x6f, 0x9f, 0xcf,
	0x10, 0x7e, 0x64, 0x94, 0x04, 0x94, 0x99, 0xca, 0x31, 0x87, 0x60, 0x07, 0xbe, 0x4c, 0x30, 0x51,
	0x1a, 0xec, 0x8c, 0x1b, 0x70, 0xdd, 0x4b, 0xda, 0x1e, 0xbc, 0x4b, 0xee, 0x30, 0x21, 0xd4, 0x1c,
	0xf3, 0x0b, 0x6f, 0x68, 0xe2, 0x9e, 0xcf, 0xf5, 0xcd, 0x90, 0xeb, 0xb2, 0xfc, 0xe9, 0xed, 0x60,
	0xe7, 0x57, 0xa6, 0xff, 0x5d, 0xd2, 0x75, 0x25, 0x36, 0xf4, 0xdb, 0xa4, 0xcb, 0x2d, 0x16, 0x26,
	0x8e, 0xfc, 0xc1, 0x2f, 0x86, 0x83, 0xeb, 0xf5, 0x4f, 0x6b, 0x9b, 0xfe, 0x6f, 0x3a, 0xe4, 0x73,
	0x83, 0x30, 0x09, 0xa7, 0x4c, 0xb3, 0x02, 0x2d, 0xea, 0x65, 0xe1, 0xa2, 0x95, 0xc2, 0xad, 0xd0,
	0x66, 0xeb, 0x3f, 0xd2, 0xa6, 0xb3, 0xd9, 0xb8, 0xd7, 0x11, 0x36, 0x26, 0x3b, 0xd9, 0x4c, 0xf1,
	0x0c, 0x1b, 0x7e, 0x36, 0xcb, 0xcd, 0x16, 0x75, 0x37, 0x5b, 0x74, 0xf8, 0x59, 0xf4, 0x37, 0x57,
	0xe8, 0xbf, 0x46, 0xe4, 0x2f, 0x51, 0x93, 0x80, 0x81, 0x82, 0x2d, 0x80, 0x65, 0x19, 0x96, 0x16,
	0xca, 0x26, 0x1b, 0x03, 0xf3, 0x19, 0xcf, 0x66, 0xc0, 0x34, 0x02, 0xcb, 0x5d, 0x27, 0xac, 0x02,
	0x3b, 0x43, 0x30, 0x99, 0x2a, 0x11, 0x4a, 0xcd, 0x5d, 0x2b, 0x14, 0xe0, 0x15, 0x66, 0x95, 0x83,
	0x9b, 0xc0, 0x68, 0x7c, 0x7e, 0x74, 0x08, 0x4c, 0x88, 0x55, 0x2f, 0xee, 0xbc, 0xb1, 0x9a, 0xcb,
	0xa9, 0x81, 0xb7, 0x81, 0x4f, 0x60, 0xa1, 0x2a, 0x90, 0x88, 0x39, 0x18, 0x55, 0xa0, 0x9d, 0x71,
	0x39, 0x05, 0x14, 0x06, 0xbd, 0xef, 0x97, 0x15, 0xea, 0x05, 0x64, 0x4c, 0x42, 0x25, 0x4b, 0x96,
	0xbd, 0x00, 0x4c, 0xa6, 0x09, 0x4c, 0xb4, 0x2a, 0xe0, 0xa3, 0xb3, 0xf1, 0x08, 0x2a, 0xe3, 0xcc,
	0x9d, 0xa5, 0x5b, 0x9e, 0x32, 0x6d, 0x70, 0xef, 0x3e, 0x3c, 0x7b, 0x7a, 0x02, 0x93, 0x4a, 0x66,
	0x1e, 0x45, 0xff, 0xcf, 0x5d, 0x72, 0xa7, 0x49, 0xed, 0x4c, 0x55, 0x3a, 0x43, 0xfa, 0xfb, 0x68,
	0x95, 0xd2, 0xc3, 0xdf, 0x46, 0x9e, 0x6d, 0xbf, 0x8c, 0xe8, 0xcf, 0x23, 0xc7, 0x37, 0xf7, 0x09,
	0xd4, 0xa4, 0x26, 0x56, 0x23, 0x70, 0x60, 0xfc, 0xd9, 0x04, 0x8e, 0x27, 0x20, 0x95, 0x05, 0x83,
	0x16, 0xe6, 0x08, 0x55, 0x40, 0x6a, 0x96, 0x67, 0xb0, 0x3d, 0xc2, 0xad, 0x41, 0x31, 0x49, 0xe0,
	0x7c, 0x75, 0x33, 0x53, 0x45, 0xc9, 0x05, 0x6a, 0x98, 0x73, 0x21, 0x60, 0x8a, 0x12, 0x35, 0xb3,
	0x08, 0x2c, 0x24, 0x3b, 0xe7, 0x76, 0x56, 0x47, 0x76, 0x30, 0x92, 0x40, 0x9b, 0x4f, 0xa3, 0x75,
	0x76, 0x78, 0x0a, 0x0c, 0x5f, 0x78, 0xdc, 0x48, 0xb3, 0x01, 0xac, 0x7c, 0x0c, 0xe5, 0x6d, 0x67,
	0xa3, 0x41, 0x3e, 0x52, 0x16, 0x81, 0x5b, 0x5f, 0xcf, 0x4b, 0x04, 0x2e, 0x2d, 0xea, 0x52, 0x09,
	0x27, 0x86, 0x75, 0x58, 0x65, 0x67, 0xa8, 0x5b, 0xa4, 0x2b, 0x3e, 0x4d, 0xb2, 0x4e, 0xc5, 0x19,
	0xb9, 0x55, 0x6a, 0xcc, 0x94, 0xcc, 0xb9, 0xc7, 0xe3, 0x29, 0x3e, 0x7c, 0xec, 0xf1, 0xfc, 0x80,
	0xbe, 0x3f, 0xf0, 0x3d, 0xc0, 0xab, 0x52, 0xa3, 0x31, 0x0e, 0x92, 0x55, 0x2e, 0x22, 0xba, 0x59,
	0xf4, 0xe1, 0x96, 0x74, 0x69, 0x3a, 0xd8, 0xc2, 0x4c, 0xd7, 0x3c, 0x53, 0x4b, 0x76, 0x5c, 0x61,
	0x38, 0xd6, 0x72, 0xb5, 0x3b, 0xfc, 0xc4, 0x07, 0x39, 0xa7, 0xe9, 0xd3, 0x7a, 0x1b, 0xec, 0x8c,
	0xd9, 0xba, 0x98, 0xba, 0x92, 0xc0, 0x25, 0x28, 0x9d, 0xa3, 0x4e, 0x60, 0x2c, 0xc5, 0x02, 0x54,
	0x65, 0xcb, 0xca, 0xd6, 0x94, 0x71, 0xbd, 0x11, 0xcc, 0xd8, 0x65, 0xa5, 0x85, 0x70, 0xa8, 0x32,
	0x25, 0x04, 0x66, 0x16, 0xf3, 0x24, 0x6d, 0x42, 0x51, 0x43, 0x6e, 0x95, 0xca, 0xd8, 0x8b, 0x52,
	0xab, 0x0c, 0x8d, 0x89, 0xbb, 0x3e, 0xf4, 0xa9, 0x0f, 0xfd, 0x11, 0xfd, 0x70, 0x00, 0x82, 0x1b,
	0xeb, 0xfa, 0xfd, 0x72, 0x03, 0xc4, 0x25, 0x7a, 0x1c, 0xea, 0x15, 0x6a, 0x1f, 0x51, 0xa3, 0xa9,
	0x84, 0x35, 0xbe, 0x1d, 0xce, 0x27, 0x04, 0x9f, 0x5c, 0x4e, 0x93, 0xf4, 0xa6, 0xdb, 0x39, 0xad,
	0x37, 0x0e, 0xef, 0xfb, 0x59, 0xbc, 0x47, 0xbe, 0xf6, 0x7c, 0x86, 0x1a, 0xd7, 0xa9, 0x34, 0x45,
	0x6b, 0x1c, 0x9f, 0x20, 0x67, 0x96, 0x25, 0xfd, 0x3f, 0x6e, 0x91, 0xed, 0x14, 0x4b, 0xa5, 0x2d,
	0x7d, 0x12, 0x54, 0xa1, 0x6e, 0xc1, 0xf7, 0x3c, 0xc4, 0x07, 0xf4, 0x3b, 0x4e, 0xa8, 0x1c, 0x40,
	0xed, 0xad, 0x0e, 0xe1, 0xc9, 0x78, 0x74, 0x7c, 0x3e, 0x4e, 0x8f, 0x47, 0x1f, 0x5c, 0x3c, 0x1e,
	0x1c, 0x9f, 0x7c, 0xbc, 0x0f, 0xa7, 0xe3, 0xb3, 0xf3, 0x8b, 0xd3, 0x74, 0xfc, 0xe8, 0xe8, 0xec,
	0xec, 0x78, 0xf4, 0x41, 0x10, 0x94, 0xbb, 0xa4, 0x67, 0xb1, 0x28, 0x1d, 0x2b, 0x82, 0x42, 0x2d,
	0xd7, 0xf4, 0x3d, 0x42, 0xda, 0x49, 0x8e, 0x3b, 0x5e, 0x18, 0xe3, 0x20, 0x8c, 0x1b, 0xf2, 0x97,
	0xae, 0xd8, 0x1e, 0x7e, 0x5a, 0xeb, 0xcc, 0xcf, 0x22, 0xf2, 0xd3, 0x68, 0x10, 0x30, 0x01, 0x37,
	0x4b, 0xfa, 0xe7, 0x6d, 0x87, 0x42, 0xc7, 0xae, 0xcf, 0x52, 0xdb, 0x25, 0x37, 0x4e, 0x1a, 0x1b,
	0x16, 0x17, 0x95, 0xb0, 0xbc, 0x14, 0xd8, 0x38, 0x75, 0x49, 0xac, 0xfa, 0xcd, 0xb1, 0x44, 0x99,
	0x3b, 0x92, 0x29, 0x09, 0x99, 0x92, 0x16, 0xaf, 0x6c, 0xd2, 0xff, 0xf5, 0x2e, 0xe9, 0x35, 0x88,
	0xe9, 0x1f, 0xa2, 0x55, 0xa1, 0x1e, 0xfe, 0xae, 0x96, 0x83, 0x5f, 0x45, 0xf4, 0x17, 0xd7, 0xe4,
	0xa0, 0x85, 0x93, 0xc0, 0xd9, 0x4c, 0x55, 0x22, 0x77, 0x08, 0x2a, 0xc9, 0x5f, 0x56, 0x08, 0x4c,
	0xe6, 0x5e, 0x38, 0x5d, 0x0c, 0xc6, 0x25, 0xe4, 0xca, 0x9a, 0x04, 0x06, 0x4e, 0x21, 0x26, 0x95,
	0x00, 0x93, 0xcd, 0xb0, 0x40, 0x97, 0xb3, 0x9b, 0x05, 0x8d, 0xec, 0x05, 0x64, 0xcc, 0xe2, 0x54,
	0x79, 0xfa, 0xf8, 0xf1, 0xcb, 0x95, 0xad, 0x05, 0xee, 0x84, 0xcb, 0xea, 0x2a, 0x19, 0x6a, 0x35,
	0x37, 0xa8, 0x4d, 0xf2, 0x68, 0xa6, 0x55, 0x81, 0x1f, 0x72, 0x63, 0x95, 0x5e, 0x04, 0x41, 0x78,
	0xba, 0xae, 0x07, 0xbe, 0x53, 0xc3, 0x03, 0x0f, 0xfc, 0x3e, 0xfd, 0xe6, 0x73, 0xc7, 0xc6, 0x75,
	0x29, 0x32, 0x60, 0xf5, 0xc2, 0xcf, 0x9a, 0x6a, 0x6a, 0x79, 0x6d, 0xa6, 0xdf, 0x25, 0xdb, 0xac,
	0xb2, 0x33, 0xa5, 0xe3, 0x5b, 0xde, 0xdb, 0x57, 0xbd, 0xb7, 0x2f, 0xd3, 0x2f, 0x0d, 0xfc, 0xee,
	0x46, 0x09, 0xd2, 0x60, 0x4e, 0x1f, 0x93, 0x5d, 0x8d, 0x13, 0xd4, 0x28, 0x33, 0x0c, 0x93, 0xf2,
	0x0d, 0x7f, 0x16, 0xe8, 0x57, 0x5c, 0xb3, 0xc3, 0xa7, 0x56, 0x90, 0x5a, 0x17, 0xed, 0xc1, 0x0d,
	0x49, 0xe9, 0xfd, 0xdf, 0x24, 0x45, 0xfc, 0x2f, 0x34, 0x1e, 0xbe, 0xe3, 0x11, 0xec, 0xd3, 0x6f,
	0x9d, 0xb6, 0x97, 0x58, 0x1d, 0xbb, 0xd4, 0xea, 0x15, 0x5f, 0xb9, 0x09, 0xdb, 0xb4, 0x56, 0xfc,
	0xd3, 0x71, 0x98, 0x4f, 0xe2, 0xf3, 0xf9, 0xbe, 0xf7, 0xf6, 0x90, 0x3e, 0x70, 0xcc, 0xb2, 0x61,
	0x46, 0x97, 0x57, 0x5d, 0x02, 0x8f, 0x6a, 0x56, 0x8f, 0xc6, 0xe9, 0x93, 0xc1, 0xc9, 0x3e, 0x1c,
	0x3d, 0x3b, 0x1a, 0x9d, 0xef, 0xc3, 0xd9, 0x51, 0xfa, 0xec, 0x28, 0x0d, 0x13, 0xfa, 0x09, 0xd9,
	0xa9, 0xf3, 0x32, 0xf1, 0x8d, 0xb5, 0xb7, 0xc9, 0xfa, 0x2d, 0x37, 0xbc, 0xef, 0x43, 0xdd, 0xa3,
	0xff, 0x5d, 0x4e, 0xd2, 0xc6, 0x21, 0x7d, 0x4e, 0x7a, 0x5c, 0x66, 0xa2, 0xca, 0xd1, 0xc4, 0xbb,
	0xbe, 0x93, 0x4b, 0xc0, 0xad, 0xe6, 0xad, 0x5f, 0x13, 0xbe, 0x1a, 0x05, 0xea, 0xa9, 0x1b, 0x5d,
	0x1d, 0x4a, 0xee, 0x09, 0x9d, 0xa4, 0x4b, 0x67, 0xb4, 0x20, 0x3b, 0xf5, 0x80, 0x9a, 0xf8, 0xa6,
	0x07, 0x7d, 0x3b, 0x80, 0xae, 0x55, 0x6c, 0xb5, 0xcf, 0x4d, 0x98, 0x60, 0xef, 0xdc, 0x97, 0xca,
	0xa2, 0xb4, 0x9c, 0x09, 0xb1, 0x58, 0xd3, 0xd0, 0xeb, 0x74, 0x6a, 0x62, 0xd0, 0xf7, 0x48, 0x47,
	0xb3, 0x79, 0xfd, 0x2a, 0x6d, 0xc9, 0xe8, 0x6a, 0xae, 0xd9, 0x1c, 0x3e, 0x1e, 0x3c, 0x39, 0xd9,
	0xb8, 0xe0, 0x93, 0xd4, 0x1d, 0x39, 0xfc, 0x89, 0x17, 0xaa, 0x05, 0x99, 0x0f, 0x64, 0x5b, 0xae,
	0xb9, 0x66, 0xa5, 0x01, 0xe6, 0x29, 0x58, 0x5f, 0x1e, 0x5c, 0x82, 0xc6, 0xca, 0xb0, 0x4b, 0x81,
	0xfb, 0x90, 0xab, 0xac, 0x2a, 0x50, 0xfa, 0x7b, 0x94, 0x2d, 0x92, 0xf6, 0x21, 0xe5, 0x1f, 0x4b,
	0x42, 0x00, 0xbb, 0x54, 0xd5, 0x52, 0xc2, 0x02, 0x3b, 0xdd, 0x03, 0xc8, 0x3d, 0x24, 0x98, 0x64,
	0x62, 0xf1, 0xe3, 0xf0, 0x8e, 0x29, 0x92, 0xfe, 0xfb, 0xe4, 0xf3, 0x8d, 0x83, 0xf6, 0xa1, 0x69,
	0xe8, 0xd7, 0xd7, 0xdf, 0xa3, 0x6f, 0x5c, 0xeb, 0x79, 0x78, 0x89, 0x5e, 0x6e, 0xfb, 0xed, 0x07,
	0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x4b, 0xc6, 0x8b, 0x99, 0x0d, 0x00, 0x00,
}
