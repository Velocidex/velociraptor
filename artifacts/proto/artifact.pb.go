// Code generated by protoc-gen-go. DO NOT EDIT.
// source: artifact.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	_ "www.velocidex.com/golang/velociraptor/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FieldDescriptor struct {
	FriendlyName string   `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Repeated     bool     `protobuf:"varint,3,opt,name=repeated,proto3" json:"repeated,omitempty"`
	Type         string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Doc          string   `protobuf:"bytes,5,opt,name=doc,proto3" json:"doc,omitempty"`
	Labels       []string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	Default      string   `protobuf:"bytes,7,opt,name=default,proto3" json:"default,omitempty"`
	// Same as doc field.
	Description          string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldDescriptor) Reset()         { *m = FieldDescriptor{} }
func (m *FieldDescriptor) String() string { return proto.CompactTextString(m) }
func (*FieldDescriptor) ProtoMessage()    {}
func (*FieldDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{0}
}

func (m *FieldDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDescriptor.Unmarshal(m, b)
}
func (m *FieldDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDescriptor.Marshal(b, m, deterministic)
}
func (m *FieldDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDescriptor.Merge(m, src)
}
func (m *FieldDescriptor) XXX_Size() int {
	return xxx_messageInfo_FieldDescriptor.Size(m)
}
func (m *FieldDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDescriptor proto.InternalMessageInfo

func (m *FieldDescriptor) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *FieldDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldDescriptor) GetRepeated() bool {
	if m != nil {
		return m.Repeated
	}
	return false
}

func (m *FieldDescriptor) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FieldDescriptor) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

func (m *FieldDescriptor) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *FieldDescriptor) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *FieldDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type EnumValue struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnumValue) Reset()         { *m = EnumValue{} }
func (m *EnumValue) String() string { return proto.CompactTextString(m) }
func (*EnumValue) ProtoMessage()    {}
func (*EnumValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{1}
}

func (m *EnumValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnumValue.Unmarshal(m, b)
}
func (m *EnumValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnumValue.Marshal(b, m, deterministic)
}
func (m *EnumValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnumValue.Merge(m, src)
}
func (m *EnumValue) XXX_Size() int {
	return xxx_messageInfo_EnumValue.Size(m)
}
func (m *EnumValue) XXX_DiscardUnknown() {
	xxx_messageInfo_EnumValue.DiscardUnknown(m)
}

var xxx_messageInfo_EnumValue proto.InternalMessageInfo

func (m *EnumValue) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *EnumValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TypeDescriptor struct {
	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	// Same as doc field.
	Description  string             `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Fields       []*FieldDescriptor `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Name         string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	FriendlyName string             `protobuf:"bytes,7,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	Kind         string             `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	// The fields are all part of a single one of structure. NOTE:
	// Currently we only support an all or nothing approach to oneof -
	// there can be at most a single oneof group within the proto and
	// it implies that all the fields belong to it.
	Oneof                bool         `protobuf:"varint,5,opt,name=oneof,proto3" json:"oneof,omitempty"`
	Default              string       `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`
	AllowedValues        []*EnumValue `protobuf:"bytes,8,rep,name=allowed_values,json=allowedValues,proto3" json:"allowed_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TypeDescriptor) Reset()         { *m = TypeDescriptor{} }
func (m *TypeDescriptor) String() string { return proto.CompactTextString(m) }
func (*TypeDescriptor) ProtoMessage()    {}
func (*TypeDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{2}
}

func (m *TypeDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeDescriptor.Unmarshal(m, b)
}
func (m *TypeDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeDescriptor.Marshal(b, m, deterministic)
}
func (m *TypeDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeDescriptor.Merge(m, src)
}
func (m *TypeDescriptor) XXX_Size() int {
	return xxx_messageInfo_TypeDescriptor.Size(m)
}
func (m *TypeDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_TypeDescriptor proto.InternalMessageInfo

func (m *TypeDescriptor) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

func (m *TypeDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TypeDescriptor) GetFields() []*FieldDescriptor {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *TypeDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TypeDescriptor) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *TypeDescriptor) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TypeDescriptor) GetOneof() bool {
	if m != nil {
		return m.Oneof
	}
	return false
}

func (m *TypeDescriptor) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *TypeDescriptor) GetAllowedValues() []*EnumValue {
	if m != nil {
		return m.AllowedValues
	}
	return nil
}

type Types struct {
	Items                []*TypeDescriptor `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Types) Reset()         { *m = Types{} }
func (m *Types) String() string { return proto.CompactTextString(m) }
func (*Types) ProtoMessage()    {}
func (*Types) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{3}
}

func (m *Types) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Types.Unmarshal(m, b)
}
func (m *Types) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Types.Marshal(b, m, deterministic)
}
func (m *Types) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Types.Merge(m, src)
}
func (m *Types) XXX_Size() int {
	return xxx_messageInfo_Types.Size(m)
}
func (m *Types) XXX_DiscardUnknown() {
	xxx_messageInfo_Types.DiscardUnknown(m)
}

var xxx_messageInfo_Types proto.InternalMessageInfo

func (m *Types) GetItems() []*TypeDescriptor {
	if m != nil {
		return m.Items
	}
	return nil
}

type ArtifactParameter struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Default     string `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// For type = choice
	Choices              []string `protobuf:"bytes,6,rep,name=choices,proto3" json:"choices,omitempty"`
	FriendlyName         string   `protobuf:"bytes,5,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtifactParameter) Reset()         { *m = ArtifactParameter{} }
func (m *ArtifactParameter) String() string { return proto.CompactTextString(m) }
func (*ArtifactParameter) ProtoMessage()    {}
func (*ArtifactParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{4}
}

func (m *ArtifactParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactParameter.Unmarshal(m, b)
}
func (m *ArtifactParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactParameter.Marshal(b, m, deterministic)
}
func (m *ArtifactParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactParameter.Merge(m, src)
}
func (m *ArtifactParameter) XXX_Size() int {
	return xxx_messageInfo_ArtifactParameter.Size(m)
}
func (m *ArtifactParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactParameter.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactParameter proto.InternalMessageInfo

func (m *ArtifactParameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtifactParameter) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *ArtifactParameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ArtifactParameter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ArtifactParameter) GetChoices() []string {
	if m != nil {
		return m.Choices
	}
	return nil
}

func (m *ArtifactParameter) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

type ArtifactSource struct {
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Precondition         string   `protobuf:"bytes,1,opt,name=precondition,proto3" json:"precondition,omitempty"`
	Query                string   `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	Queries              []string `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
	PostProcess          []string `protobuf:"bytes,5,rep,name=post_process,json=postProcess,proto3" json:"post_process,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtifactSource) Reset()         { *m = ArtifactSource{} }
func (m *ArtifactSource) String() string { return proto.CompactTextString(m) }
func (*ArtifactSource) ProtoMessage()    {}
func (*ArtifactSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{5}
}

func (m *ArtifactSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactSource.Unmarshal(m, b)
}
func (m *ArtifactSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactSource.Marshal(b, m, deterministic)
}
func (m *ArtifactSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactSource.Merge(m, src)
}
func (m *ArtifactSource) XXX_Size() int {
	return xxx_messageInfo_ArtifactSource.Size(m)
}
func (m *ArtifactSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactSource.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactSource proto.InternalMessageInfo

func (m *ArtifactSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtifactSource) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ArtifactSource) GetPrecondition() string {
	if m != nil {
		return m.Precondition
	}
	return ""
}

func (m *ArtifactSource) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ArtifactSource) GetQueries() []string {
	if m != nil {
		return m.Queries
	}
	return nil
}

func (m *ArtifactSource) GetPostProcess() []string {
	if m != nil {
		return m.PostProcess
	}
	return nil
}

type Report struct {
	// Each report type will be handled differently. Read about the
	// different types in reporting.go
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// If specified we only allow the report to take this long.
	Timeout              uint64               `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Name                 string               `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Template             string               `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Parameters           []*ArtifactParameter `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Report) Reset()         { *m = Report{} }
func (m *Report) String() string { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()    {}
func (*Report) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{6}
}

func (m *Report) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Report.Unmarshal(m, b)
}
func (m *Report) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Report.Marshal(b, m, deterministic)
}
func (m *Report) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Report.Merge(m, src)
}
func (m *Report) XXX_Size() int {
	return xxx_messageInfo_Report.Size(m)
}
func (m *Report) XXX_DiscardUnknown() {
	xxx_messageInfo_Report.DiscardUnknown(m)
}

var xxx_messageInfo_Report proto.InternalMessageInfo

func (m *Report) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Report) GetTimeout() uint64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *Report) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Report) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *Report) GetParameters() []*ArtifactParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type Artifact struct {
	Name                string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description         string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Author              string   `protobuf:"bytes,12,opt,name=author,proto3" json:"author,omitempty"`
	Reference           []string `protobuf:"bytes,5,rep,name=reference,proto3" json:"reference,omitempty"`
	RequiredPermissions []string `protobuf:"bytes,13,rep,name=required_permissions,json=requiredPermissions,proto3" json:"required_permissions,omitempty"`
	// An optional list of tool descriptions. These are only used to
	// initialize Velociraptor if there is no previous tool
	// definition. It will not override existing tools. The user may
	// override the tool name in order to control where it will be
	// downloaded from.
	Tools []*Tool `protobuf:"bytes,15,rep,name=tools,proto3" json:"tools,omitempty"`
	// If set here this applies to all sources.
	Precondition string               `protobuf:"bytes,8,opt,name=precondition,proto3" json:"precondition,omitempty"`
	Parameters   []*ArtifactParameter `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// Unfortunately we can not use enum due to limitations in
	// yaml->json->protobuf conversion.
	Type     string            `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Sources  []*ArtifactSource `protobuf:"bytes,4,rep,name=sources,proto3" json:"sources,omitempty"`
	Includes []string          `protobuf:"bytes,9,rep,name=includes,proto3" json:"includes,omitempty"`
	Reports  []*Report         `protobuf:"bytes,11,rep,name=reports,proto3" json:"reports,omitempty"`
	// Internal use only
	Raw                  string   `protobuf:"bytes,7,opt,name=raw,proto3" json:"raw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{7}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Artifact) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Artifact) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Artifact) GetReference() []string {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *Artifact) GetRequiredPermissions() []string {
	if m != nil {
		return m.RequiredPermissions
	}
	return nil
}

func (m *Artifact) GetTools() []*Tool {
	if m != nil {
		return m.Tools
	}
	return nil
}

func (m *Artifact) GetPrecondition() string {
	if m != nil {
		return m.Precondition
	}
	return ""
}

func (m *Artifact) GetParameters() []*ArtifactParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Artifact) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Artifact) GetSources() []*ArtifactSource {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *Artifact) GetIncludes() []string {
	if m != nil {
		return m.Includes
	}
	return nil
}

func (m *Artifact) GetReports() []*Report {
	if m != nil {
		return m.Reports
	}
	return nil
}

func (m *Artifact) GetRaw() string {
	if m != nil {
		return m.Raw
	}
	return ""
}

type ArtifactDescriptors struct {
	Items                []*Artifact `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ArtifactDescriptors) Reset()         { *m = ArtifactDescriptors{} }
func (m *ArtifactDescriptors) String() string { return proto.CompactTextString(m) }
func (*ArtifactDescriptors) ProtoMessage()    {}
func (*ArtifactDescriptors) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{8}
}

func (m *ArtifactDescriptors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactDescriptors.Unmarshal(m, b)
}
func (m *ArtifactDescriptors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactDescriptors.Marshal(b, m, deterministic)
}
func (m *ArtifactDescriptors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactDescriptors.Merge(m, src)
}
func (m *ArtifactDescriptors) XXX_Size() int {
	return xxx_messageInfo_ArtifactDescriptors.Size(m)
}
func (m *ArtifactDescriptors) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactDescriptors.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactDescriptors proto.InternalMessageInfo

func (m *ArtifactDescriptors) GetItems() []*Artifact {
	if m != nil {
		return m.Items
	}
	return nil
}

type Tool struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The URL to fetch the tool from when we upload it the first
	// time, or when we update.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// The URL we serve the tool from when we serve locally. If this
	// is empty we just let the endpoint download its own tool from
	// the url above.
	ServeUrl string `protobuf:"bytes,8,opt,name=serve_url,json=serveUrl,proto3" json:"serve_url,omitempty"`
	// As an alternative to a url we allow scrapping of GitHub
	// releases using the github API. NOTE: When this method is
	// specified, the file will always be served locally.
	GithubProject    string `protobuf:"bytes,9,opt,name=github_project,json=githubProject,proto3" json:"github_project,omitempty"`
	GithubAssetRegex string `protobuf:"bytes,10,opt,name=github_asset_regex,json=githubAssetRegex,proto3" json:"github_asset_regex,omitempty"`
	// If set, the tool will be served locally from the filestore path
	// - otherwise the endpoint will download the file by itself from
	// the url above.
	ServeLocally bool `protobuf:"varint,3,opt,name=serve_locally,json=serveLocally,proto3" json:"serve_locally,omitempty"`
	// A filestore path where the file can be downloaded from - if
	// served locally.
	FilestorePath string `protobuf:"bytes,4,opt,name=filestore_path,json=filestorePath,proto3" json:"filestore_path,omitempty"`
	// The name of the cached file on the endpoint. This file will
	// persist and can be accessed again if this tool is needed in
	// future. If the file is missing (or has the wrong hash), then it
	// will be downloaded again.
	Filename string `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`
	// Hex encoded sha256 hash of the file. Endpoints will check this
	// hash against their fetch file to ensure it was correctly
	// transferred.
	Hash string `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
	// This is set when an admin explicitly overrides a tool. If this
	// is set we will not update the tool definition when upgrading
	// server versions.
	AdminOverride bool `protobuf:"varint,7,opt,name=admin_override,json=adminOverride,proto3" json:"admin_override,omitempty"`
	// If set on a request we refresh the hash.
	Materialize          bool     `protobuf:"varint,11,opt,name=materialize,proto3" json:"materialize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tool) Reset()         { *m = Tool{} }
func (m *Tool) String() string { return proto.CompactTextString(m) }
func (*Tool) ProtoMessage()    {}
func (*Tool) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{9}
}

func (m *Tool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tool.Unmarshal(m, b)
}
func (m *Tool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tool.Marshal(b, m, deterministic)
}
func (m *Tool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tool.Merge(m, src)
}
func (m *Tool) XXX_Size() int {
	return xxx_messageInfo_Tool.Size(m)
}
func (m *Tool) XXX_DiscardUnknown() {
	xxx_messageInfo_Tool.DiscardUnknown(m)
}

var xxx_messageInfo_Tool proto.InternalMessageInfo

func (m *Tool) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tool) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Tool) GetServeUrl() string {
	if m != nil {
		return m.ServeUrl
	}
	return ""
}

func (m *Tool) GetGithubProject() string {
	if m != nil {
		return m.GithubProject
	}
	return ""
}

func (m *Tool) GetGithubAssetRegex() string {
	if m != nil {
		return m.GithubAssetRegex
	}
	return ""
}

func (m *Tool) GetServeLocally() bool {
	if m != nil {
		return m.ServeLocally
	}
	return false
}

func (m *Tool) GetFilestorePath() string {
	if m != nil {
		return m.FilestorePath
	}
	return ""
}

func (m *Tool) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Tool) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Tool) GetAdminOverride() bool {
	if m != nil {
		return m.AdminOverride
	}
	return false
}

func (m *Tool) GetMaterialize() bool {
	if m != nil {
		return m.Materialize
	}
	return false
}

// Keep track of all the third party tools we know about.
type ThirdParty struct {
	Tools                []*Tool  `protobuf:"bytes,1,rep,name=tools,proto3" json:"tools,omitempty"`
	Version              uint64   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThirdParty) Reset()         { *m = ThirdParty{} }
func (m *ThirdParty) String() string { return proto.CompactTextString(m) }
func (*ThirdParty) ProtoMessage()    {}
func (*ThirdParty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1932e98ed811590, []int{10}
}

func (m *ThirdParty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThirdParty.Unmarshal(m, b)
}
func (m *ThirdParty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThirdParty.Marshal(b, m, deterministic)
}
func (m *ThirdParty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThirdParty.Merge(m, src)
}
func (m *ThirdParty) XXX_Size() int {
	return xxx_messageInfo_ThirdParty.Size(m)
}
func (m *ThirdParty) XXX_DiscardUnknown() {
	xxx_messageInfo_ThirdParty.DiscardUnknown(m)
}

var xxx_messageInfo_ThirdParty proto.InternalMessageInfo

func (m *ThirdParty) GetTools() []*Tool {
	if m != nil {
		return m.Tools
	}
	return nil
}

func (m *ThirdParty) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*FieldDescriptor)(nil), "proto.FieldDescriptor")
	proto.RegisterType((*EnumValue)(nil), "proto.EnumValue")
	proto.RegisterType((*TypeDescriptor)(nil), "proto.TypeDescriptor")
	proto.RegisterType((*Types)(nil), "proto.Types")
	proto.RegisterType((*ArtifactParameter)(nil), "proto.ArtifactParameter")
	proto.RegisterType((*ArtifactSource)(nil), "proto.ArtifactSource")
	proto.RegisterType((*Report)(nil), "proto.Report")
	proto.RegisterType((*Artifact)(nil), "proto.Artifact")
	proto.RegisterType((*ArtifactDescriptors)(nil), "proto.ArtifactDescriptors")
	proto.RegisterType((*Tool)(nil), "proto.Tool")
	proto.RegisterType((*ThirdParty)(nil), "proto.third_party")
}

func init() {
	proto.RegisterFile("artifact.proto", fileDescriptor_a1932e98ed811590)
}

var fileDescriptor_a1932e98ed811590 = []byte{
	// 1886 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x51, 0x6f, 0x1c, 0x49,
	0x11, 0xd6, 0x78, 0xbd, 0xf6, 0xba, 0x1d, 0xe7, 0x42, 0x5f, 0x08, 0xc3, 0x21, 0x1d, 0x75, 0x1b,
	0x1d, 0x24, 0x90, 0x8c, 0xa5, 0xbb, 0x8b, 0x12, 0x99, 0x13, 0x62, 0x37, 0x31, 0xba, 0x8b, 0x7c,
	0xb6, 0x33, 0x31, 0x89, 0xc8, 0x8b, 0xd5, 0x9e, 0xa9, 0xdd, 0xe9, 0x4b, 0x4f, 0xf7, 0xa4, 0xbb,
	0xc7, 0xeb, 0xbd, 0x17, 0x1e, 0x90, 0x10, 0x2f, 0x27, 0x21, 0x10, 0x0f, 0x20, 0xfe, 0x03, 0xf0,
	0x1f, 0xf8, 0x0d, 0x08, 0x78, 0x3a, 0xb8, 0xbf, 0xc1, 0x03, 0xea, 0x9e, 0x99, 0x9d, 0x59, 0x6f,
	0x00, 0xf1, 0xc0, 0xd3, 0x4e, 0x57, 0x57, 0x57, 0x55, 0x57, 0x7d, 0xf5, 0x75, 0x2d, 0xb9, 0xca,
	0xb4, 0xe5, 0x13, 0x96, 0xd8, 0xa8, 0xd0, 0xca, 0x2a, 0xda, 0xf7, 0x3f, 0x6f, 0x5d, 0xf7, 0x3f,
	0xbb, 0x06, 0x73, 0x26, 0x2d, 0x4f, 0xaa, 0xcd, 0xe1, 0x17, 0x01, 0x79, 0xe3, 0x87, 0x1c, 0x45,
	0xfa, 0x08, 0x4d, 0xa2, 0x79, 0x61, 0x95, 0xa6, 0x37, 0xc9, 0xce, 0x44, 0x73, 0x94, 0xa9, 0x98,
	0x9f, 0x4a, 0x96, 0x63, 0x18, 0x40, 0x70, 0x6b, 0x2b, 0xbe, 0xd2, 0x08, 0x0f, 0x59, 0x8e, 0x94,
	0x92, 0x75, 0xbf, 0xb7, 0xe6, 0xf7, 0xfc, 0x37, 0x7d, 0x8b, 0x0c, 0x34, 0x16, 0xc8, 0x2c, 0xa6,
	0x61, 0x0f, 0x82, 0x5b, 0x83, 0x78, 0xb1, 0x76, 0xfa, 0x76, 0x5e, 0x60, 0xb8, 0x5e, 0xe9, 0xbb,
	0x6f, 0x7a, 0x8d, 0xf4, 0x52, 0x95, 0x84, 0x7d, 0x2f, 0x72, 0x9f, 0xf4, 0x06, 0xd9, 0x10, 0xec,
	0x0c, 0x85, 0x09, 0x37, 0xa0, 0x77, 0x6b, 0x2b, 0xae, 0x57, 0x34, 0x24, 0x9b, 0x29, 0x4e, 0x58,
	0x29, 0x6c, 0xb8, 0xe9, 0xb5, 0x9b, 0x25, 0x05, 0xb2, 0x9d, 0xd6, 0xa1, 0x73, 0x25, 0xc3, 0x81,
	0xdf, 0xed, 0x8a, 0x86, 0xf7, 0xc8, 0xd6, 0xbe, 0x2c, 0xf3, 0x67, 0x4c, 0x94, 0x48, 0xaf, 0x93,
	0xfe, 0xb9, 0xfb, 0xf0, 0x77, 0xea, 0xc7, 0xd5, 0xe2, 0x75, 0x97, 0x19, 0xfe, 0x7d, 0x8d, 0x5c,
	0x3d, 0x99, 0x17, 0xd8, 0x49, 0x4c, 0x1d, 0x6f, 0xd0, 0xc6, 0x7b, 0xc9, 0xfb, 0xd6, 0x8a, 0x77,
	0x1a, 0x91, 0x8d, 0x89, 0xcb, 0xaf, 0x09, 0xd7, 0xa0, 0x77, 0x6b, 0xfb, 0xbd, 0x1b, 0x55, 0xe2,
	0xa3, 0x4b, 0x49, 0x8f, 0x6b, 0xad, 0x45, 0x28, 0xbd, 0x4e, 0x5e, 0x57, 0x0a, 0xb2, 0xf9, 0xfa,
	0x82, 0xbc, 0xe4, 0x32, 0x6d, 0x12, 0xec, 0xbe, 0xdd, 0x6d, 0x95, 0x44, 0x35, 0xf1, 0x29, 0x1e,
	0xc4, 0xd5, 0x82, 0x1e, 0xb5, 0xc9, 0xdc, 0x70, 0xca, 0xe3, 0x7b, 0xff, 0xf8, 0xe7, 0x97, 0x7f,
	0x0a, 0x76, 0xe9, 0xdd, 0x93, 0x0c, 0xe1, 0x53, 0xa3, 0x24, 0xa0, 0x4c, 0x54, 0x8a, 0x29, 0xd4,
	0x7a, 0xe0, 0xd3, 0x04, 0x13, 0xa5, 0xc1, 0x66, 0xdc, 0x80, 0xab, 0x5e, 0xd4, 0xd6, 0xe0, 0x3e,
	0xb9, 0xca, 0x84, 0x50, 0x33, 0x4c, 0x4f, 0xbd, 0xa2, 0x09, 0x07, 0xfe, 0xae, 0xd7, 0xea, 0xbb,
	0x2e, 0xd2, 0x1f, 0xef, 0xd4, 0x7a, 0x7e, 0x65, 0x86, 0x1f, 0x90, 0xbe, 0x4b, 0xb1, 0xa1, 0xdf,
	0x25, 0x7d, 0x6e, 0x31, 0x37, 0x61, 0xe0, 0x0f, 0x7e, 0xb5, 0x3e, 0xb8, 0x9c, 0xff, 0xb8, 0xd2,
	0x19, 0xfe, 0xa6, 0x47, 0xbe, 0x32, 0xaa, 0x31, 0x7e, 0xcc, 0x34, 0xcb, 0xd1, 0xa2, 0x5e, 0x24,
	0x2e, 0xe8, 0x24, 0xae, 0x03, 0x9b, 0xb5, 0xff, 0x08, 0x9b, 0xde, 0x6a, 0xe1, 0x5e, 0x07, 0xd8,
	0x90, 0x6c, 0x26, 0x99, 0xe2, 0x09, 0x36, 0xf8, 0x6c, 0x96, 0xab, 0x25, 0xea, 0xaf, 0x96, 0x68,
	0xef, 0x8b, 0xe0, 0x6f, 0x2e, 0xd1, 0x7f, 0x0d, 0xc8, 0x9f, 0x83, 0xe6, 0x02, 0x06, 0x72, 0x36,
	0x07, 0x96, 0x24, 0x58, 0x58, 0x28, 0x9a, 0xdb, 0x18, 0x98, 0x65, 0x3c, 0xc9, 0x80, 0x69, 0x04,
	0x96, 0xba, 0x4a, 0x58, 0x05, 0x36, 0x43, 0x30, 0x89, 0x2a, 0x10, 0x0a, 0xcd, 0x5d, 0x29, 0x14,
	0xe0, 0x05, 0x26, 0xa5, 0x0b, 0x37, 0x82, 0xc3, 0xa3, 0x93, 0xfd, 0x3d, 0x60, 0x42, 0x74, 0xad,
	0xb8, 0xf3, 0xc6, 0x6a, 0x2e, 0xa7, 0x06, 0xee, 0x02, 0x9f, 0xc0, 0x5c, 0x95, 0x20, 0x11, 0x53,
	0x30, 0x2a, 0x47, 0x9b, 0x71, 0x39, 0x05, 0x14, 0x06, 0xbd, 0xed, 0x57, 0x25, 0xea, 0x39, 0x24,
	0x4c, 0x42, 0x29, 0x0b, 0x96, 0xbc, 0x04, 0x8c, 0xa6, 0x11, 0x4c, 0xb4, 0xca, 0xe1, 0xf1, 0xd3,
	0xa3, 0x43, 0x28, 0x8d, 0x53, 0x77, 0x9a, 0x6e, 0x79, 0xcc, 0xb4, 0xc1, 0x5b, 0xb7, 0xe1, 0xd9,
	0x93, 0x03, 0x98, 0x94, 0x32, 0xf1, 0x51, 0x0c, 0x7f, 0xbe, 0x41, 0xae, 0x36, 0x57, 0x7b, 0xaa,
	0x4a, 0x9d, 0x20, 0xfd, 0x7d, 0xd0, 0x85, 0xf4, 0xf8, 0xb7, 0x81, 0x47, 0xdb, 0xaf, 0x02, 0xfa,
	0x8b, 0xc0, 0xe1, 0xcd, 0x6d, 0x81, 0x9a, 0x54, 0xc0, 0x6a, 0xa8, 0x0b, 0x8c, 0x3f, 0x1b, 0xc1,
	0xc7, 0x13, 0x90, 0xca, 0x82, 0x41, 0x0b, 0x33, 0x84, 0xb2, 0x8e, 0xd4, 0x2c, 0xce, 0x60, 0x7b,
	0x84, 0x5b, 0x83, 0x62, 0x12, 0xc1, 0x49, 0x57, 0x98, 0xa8, 0xbc, 0xe0, 0x02, 0x35, 0xcc, 0xb8,
	0x10, 0x30, 0x45, 0x89, 0x9a, 0x59, 0x04, 0x56, 0x5f, 0x76, 0xc6, 0x6d, 0x56, 0x79, 0x76, 0x61,
	0x44, 0x35, 0x6c, 0x3e, 0x0f, 0x96, 0xd1, 0xe1, 0x21, 0x30, 0x7e, 0xe9, 0xe3, 0x46, 0x9a, 0x8c,
	0xa0, 0xb3, 0x59, 0xa7, 0xb7, 0xed, 0x8d, 0x26, 0xf2, 0x43, 0x65, 0x11, 0xb8, 0xf5, 0xf9, 0x3c,
	0x43, 0xe0, 0xd2, 0xa2, 0x2e, 0x94, 0x70, 0x64, 0x58, 0xb9, 0x55, 0x36, 0x43, 0xdd, 0x46, 0xda,
	0xb1, 0x69, 0xa2, 0x65, 0x28, 0x66, 0xe4, 0x4a, 0xa1, 0x31, 0x51, 0x32, 0xe5, 0x3e, 0x1e, 0x0f,
	0xf1, 0xf1, 0x23, 0x1f, 0xcf, 0xf7, 0xe9, 0x87, 0x23, 0x5f, 0x03, 0xbc, 0x28, 0x34, 0x1a, 0xe3,
	0x42, 0xb2, 0xca, 0x79, 0x44, 0xd7, 0x8b, 0xde, 0xdd, 0x02, 0x2e, 0x4d, 0x05, 0xdb, 0x30, 0xe3,
	0x25, 0xcb, 0xf4, 0x03, 0xd2, 0xf7, 0x89, 0xa9, 0x89, 0xe1, 0x6d, 0xef, 0x22, 0xa4, 0x37, 0x46,
	0x90, 0x97, 0xc2, 0xf2, 0xbb, 0x82, 0x4b, 0xf4, 0xde, 0xbc, 0x56, 0x5c, 0x29, 0x53, 0x4b, 0x36,
	0xdd, 0x07, 0xc7, 0x8a, 0xe4, 0xb6, 0xc6, 0x2f, 0xfc, 0xb9, 0x13, 0x1a, 0x3f, 0xa9, 0xc4, 0x60,
	0x33, 0x66, 0xab, 0x12, 0xe8, 0x52, 0x02, 0x97, 0xa0, 0x74, 0x8a, 0x3a, 0x82, 0x23, 0x29, 0xe6,
	0xa0, 0x4a, 0x5b, 0x94, 0xb6, 0x02, 0x9a, 0xab, 0xa8, 0x60, 0xc6, 0x2e, 0xea, 0x23, 0x84, 0xbb,
	0x4b, 0xa2, 0x84, 0xc0, 0xc4, 0x62, 0x1a, 0xc5, 0x8d, 0x2b, 0x6a, 0xc8, 0x95, 0x42, 0x19, 0x7b,
	0x5a, 0x68, 0x95, 0xa0, 0x31, 0x61, 0xdf, 0xbb, 0x3e, 0xf6, 0xae, 0x1f, 0xd3, 0x8f, 0x46, 0x20,
	0xb8, 0xb1, 0x0e, 0x25, 0xaf, 0x56, 0x82, 0x38, 0x43, 0x1f, 0x87, 0x3a, 0x47, 0xed, 0x3d, 0x6a,
	0x34, 0xa5, 0xb0, 0xc6, 0x17, 0xd1, 0xd9, 0x84, 0xda, 0x26, 0x97, 0xd3, 0x28, 0xde, 0x76, 0x92,
	0xe3, 0x4a, 0xb0, 0x77, 0xdb, 0x77, 0xf0, 0x4d, 0xf2, 0xce, 0xf3, 0x0c, 0x35, 0x2e, 0x03, 0x70,
	0x8a, 0xd6, 0x38, 0x14, 0x42, 0xca, 0x2c, 0x8b, 0x86, 0x7f, 0x59, 0x23, 0x1b, 0x31, 0x16, 0x4a,
	0x5b, 0xba, 0x57, 0x73, 0x49, 0x55, 0xb8, 0x6f, 0xf9, 0x10, 0x81, 0xbe, 0xed, 0xe8, 0xcd, 0x05,
	0xa8, 0xbd, 0xd6, 0x1e, 0x3c, 0x3c, 0xf8, 0x78, 0xff, 0xf0, 0xe4, 0x0e, 0x3c, 0xdd, 0x8f, 0x9f,
	0xed, 0xc7, 0x2d, 0xe7, 0x58, 0x9e, 0xa3, 0x2a, 0xad, 0xc7, 0xe1, 0x7a, 0xdc, 0x2c, 0x17, 0x8c,
	0xd7, 0x5f, 0x7e, 0x82, 0x2d, 0xe6, 0x85, 0x83, 0x59, 0x4d, 0x79, 0x8b, 0x35, 0x7d, 0x40, 0x48,
	0x4b, 0x0d, 0x61, 0xcf, 0x33, 0x6d, 0x58, 0x33, 0xed, 0x0a, 0x9f, 0xc6, 0x1d, 0xdd, 0xbd, 0xcf,
	0x2b, 0xe2, 0xfa, 0x59, 0x40, 0x7e, 0x1a, 0x8c, 0xea, 0x70, 0x81, 0x9b, 0x45, 0x3f, 0xa5, 0x6d,
	0xf1, 0xea, 0x62, 0x5e, 0x6e, 0xce, 0xb6, 0x80, 0xae, 0x3f, 0x35, 0x36, 0x6d, 0xe1, 0x61, 0x55,
	0x08, 0x6c, 0x8c, 0xba, 0x2b, 0x77, 0xed, 0xa6, 0x58, 0xa0, 0x4c, 0x1d, 0x6a, 0x95, 0x84, 0x44,
	0x49, 0x8b, 0x17, 0x36, 0x1a, 0xfe, 0x81, 0x90, 0x41, 0x13, 0x31, 0xfd, 0x63, 0xd0, 0x65, 0xfe,
	0xf1, 0xef, 0x2a, 0x7e, 0xf9, 0x75, 0x40, 0x7f, 0x79, 0x89, 0x5f, 0xda, 0x70, 0x22, 0x78, 0x9a,
	0xa9, 0x52, 0xa4, 0x2e, 0x82, 0x52, 0xf2, 0x57, 0x25, 0x02, 0x93, 0xa9, 0x67, 0x62, 0xe7, 0x83,
	0x71, 0x09, 0xa9, 0xb2, 0x26, 0x82, 0x91, 0xa3, 0x9c, 0x49, 0x29, 0xc0, 0x24, 0x19, 0xe6, 0xe8,
	0xee, 0xec, 0x9a, 0x4b, 0x23, 0x7b, 0x09, 0x09, 0xb3, 0x38, 0x55, 0x1e, 0x59, 0xbe, 0x9f, 0x53,
	0x65, 0x2b, 0xc6, 0x3c, 0xe0, 0xb2, 0xbc, 0x88, 0xc6, 0x5a, 0xcd, 0x0c, 0x6a, 0x13, 0x3d, 0xcc,
	0xb4, 0xca, 0xf1, 0x23, 0x6e, 0xac, 0xd2, 0xf3, 0xba, 0x4c, 0x4f, 0x96, 0x09, 0xc6, 0x57, 0x6a,
	0xbc, 0xeb, 0x03, 0xbf, 0x4d, 0xbf, 0xfd, 0xdc, 0x01, 0x75, 0x99, 0xdb, 0x0c, 0x58, 0x3d, 0xf7,
	0xcd, 0xab, 0x9a, 0x5c, 0x5e, 0x22, 0x89, 0xfb, 0x64, 0x83, 0x95, 0x36, 0x53, 0x3a, 0xbc, 0xe2,
	0xad, 0x7d, 0xd3, 0x5b, 0xfb, 0x3a, 0xfd, 0xda, 0xc8, 0x4b, 0x57, 0x52, 0x10, 0xd7, 0xea, 0xf4,
	0x11, 0xd9, 0xd2, 0x38, 0x41, 0x8d, 0x32, 0xc1, 0xba, 0x89, 0x16, 0x08, 0x75, 0xc5, 0xae, 0xb7,
	0x5a, 0x86, 0x6b, 0x4d, 0xb4, 0x07, 0xa9, 0x21, 0xd7, 0x35, 0xbe, 0x2a, 0xb9, 0xc6, 0xf4, 0xb4,
	0x40, 0x9d, 0x73, 0x4f, 0x45, 0x26, 0xdc, 0xf1, 0x06, 0x7f, 0xe0, 0x0d, 0xee, 0xd1, 0x07, 0x6d,
	0x57, 0x36, 0xda, 0xd0, 0xd1, 0xee, 0xdc, 0xee, 0xb2, 0xab, 0x37, 0x1b, 0xfd, 0xe3, 0x56, 0x9d,
	0xbe, 0x43, 0xfa, 0x56, 0x29, 0x61, 0xc2, 0x37, 0x3c, 0x98, 0xb7, 0x9b, 0xb1, 0x41, 0x29, 0x11,
	0x57, 0x3b, 0x2b, 0xdc, 0x39, 0xf8, 0xbf, 0x71, 0xa7, 0xf8, 0x5f, 0xda, 0x6b, 0xfc, 0x9e, 0x8f,
	0xe0, 0x0e, 0xfd, 0xce, 0x71, 0xfb, 0x5a, 0x57, 0xbe, 0x0b, 0xad, 0xce, 0x79, 0xe7, 0xc9, 0x6f,
	0x73, 0xd0, 0xb1, 0x4f, 0x8f, 0x6a, 0x4a, 0x21, 0xfe, 0x3e, 0xdf, 0xf3, 0xd6, 0xee, 0xd1, 0xf7,
	0x1d, 0xe2, 0x6d, 0x4d, 0x2b, 0x8b, 0x37, 0x3d, 0x82, 0x87, 0x55, 0xb7, 0x1d, 0x1e, 0xc5, 0x9f,
	0x8c, 0x0e, 0xee, 0xc0, 0xfe, 0xb3, 0x55, 0x9e, 0x79, 0x41, 0x36, 0xab, 0x7b, 0x99, 0x70, 0x7d,
	0x69, 0x08, 0x5b, 0x7e, 0xce, 0xc7, 0xb7, 0xbd, 0xab, 0x9b, 0xf4, 0xbf, 0x33, 0x60, 0xdc, 0x18,
	0xa4, 0xcf, 0xc9, 0x80, 0xcb, 0x44, 0x94, 0x29, 0x9a, 0x70, 0xcb, 0x03, 0x62, 0x11, 0x70, 0x0b,
	0x88, 0xe5, 0xf7, 0xd0, 0x67, 0x23, 0x47, 0x3d, 0x75, 0x94, 0xa2, 0xeb, 0x94, 0xfb, 0x46, 0x8b,
	0xe2, 0x85, 0x31, 0x9a, 0x93, 0xcd, 0x8a, 0x38, 0x4c, 0xb8, 0xed, 0x83, 0xde, 0xa9, 0x83, 0xae,
	0x88, 0xb7, 0x5b, 0xe7, 0x16, 0x77, 0x5e, 0xdf, 0x99, 0x2f, 0x94, 0x45, 0x69, 0x39, 0x13, 0x62,
	0xbe, 0x44, 0xfb, 0x97, 0xb1, 0xd7, 0xf8, 0xa0, 0x0f, 0x48, 0x4f, 0xb3, 0x59, 0x35, 0x7e, 0x77,
	0x68, 0xdc, 0xbd, 0x20, 0x6c, 0x06, 0x3f, 0x1e, 0x7d, 0x72, 0xb0, 0x32, 0xc9, 0x44, 0xb1, 0x3b,
	0xb2, 0xf7, 0x13, 0x4f, 0xa0, 0x73, 0x32, 0x1b, 0xc9, 0x36, 0x5d, 0x33, 0xcd, 0x0a, 0x03, 0xac,
	0x7d, 0x50, 0xdd, 0xcb, 0xa8, 0xb1, 0x34, 0xec, 0x4c, 0xe0, 0x1d, 0x48, 0x55, 0x52, 0xe6, 0x28,
	0xfd, 0xc0, 0xc0, 0xe6, 0x51, 0x3b, 0x31, 0xfa, 0xa9, 0x50, 0x08, 0x60, 0x67, 0xaa, 0x5c, 0x50,
	0x6b, 0x8d, 0x4e, 0x37, 0xe9, 0xb9, 0x89, 0x89, 0x49, 0x26, 0xe6, 0x9f, 0xd5, 0x03, 0x5b, 0x1e,
	0x0d, 0x3f, 0x24, 0x6f, 0x36, 0x06, 0xda, 0x89, 0xda, 0xd0, 0x77, 0x97, 0x07, 0xef, 0x37, 0x2e,
	0xd5, 0xbc, 0x19, 0xb9, 0xbf, 0x5c, 0x23, 0xeb, 0xae, 0xab, 0x5e, 0x3b, 0x65, 0x5f, 0x23, 0xbd,
	0x52, 0x8b, 0xfa, 0xb9, 0x71, 0x9f, 0xf4, 0x1b, 0x64, 0xcb, 0xa0, 0x3e, 0xc7, 0x53, 0x27, 0xaf,
	0xfe, 0x92, 0x0d, 0xbc, 0xe0, 0x47, 0x5a, 0xd0, 0x77, 0xc9, 0xd5, 0x29, 0xb7, 0x59, 0x79, 0xe6,
	0x5e, 0xee, 0x4f, 0x31, 0xb1, 0xf5, 0xdf, 0xa6, 0x9d, 0x4a, 0x7a, 0x5c, 0x09, 0xe9, 0x1d, 0x42,
	0x6b, 0x35, 0x66, 0x0c, 0xda, 0x53, 0x8d, 0x53, 0xbc, 0xa8, 0xe0, 0x1e, 0x5f, 0xab, 0x76, 0x46,
	0x6e, 0x23, 0x76, 0x72, 0x37, 0x7f, 0x57, 0x1e, 0x85, 0x4a, 0x5c, 0x3d, 0xeb, 0xff, 0x9f, 0x57,
	0xbc, 0xf0, 0xa0, 0x92, 0x39, 0xcf, 0x13, 0x2e, 0xd0, 0x11, 0x31, 0x9e, 0x16, 0xcc, 0x66, 0xf5,
	0x70, 0xbf, 0xb3, 0x90, 0x1e, 0x33, 0x9b, 0xb9, 0x37, 0xd4, 0x09, 0x3a, 0x6f, 0xeb, 0x62, 0xed,
	0xee, 0x9f, 0x31, 0x93, 0x55, 0xf3, 0x51, 0xec, 0xbf, 0x9d, 0x59, 0x96, 0xe6, 0x5c, 0x9e, 0xba,
	0x79, 0x42, 0xf3, 0xb4, 0xfa, 0x7f, 0x36, 0x88, 0x77, 0xbc, 0xf4, 0xa8, 0x16, 0xba, 0xbf, 0x1c,
	0x39, 0xb3, 0xa8, 0x39, 0x13, 0xfc, 0x33, 0x0c, 0xb7, 0xbd, 0x4e, 0x57, 0x34, 0x7c, 0x4c, 0xb6,
	0x6d, 0xc6, 0x75, 0x7a, 0x5a, 0x30, 0x6d, 0xe7, 0x2d, 0xbb, 0x05, 0xff, 0x96, 0xdd, 0x42, 0xb2,
	0x79, 0x8e, 0xda, 0x34, 0x6f, 0xc8, 0x7a, 0xdc, 0x2c, 0xc7, 0xf7, 0x5f, 0xdc, 0x9b, 0xcd, 0x66,
	0xd1, 0x39, 0x0a, 0x95, 0xf0, 0x14, 0x2f, 0xa2, 0x44, 0xe5, 0xbb, 0x53, 0x25, 0x98, 0x9c, 0xee,
	0x56, 0x42, 0xcd, 0x1c, 0x04, 0x76, 0x17, 0x0d, 0xb7, 0xeb, 0xcd, 0x9f, 0x6d, 0xf8, 0x9f, 0xf7,
	0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0xfe, 0x28, 0xdf, 0x23, 0x47, 0x10, 0x00, 0x00,
}
