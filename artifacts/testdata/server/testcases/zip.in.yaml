Queries:
  - LET zip_files = SELECT FullPath, Size FROM glob(
      globs=srcDir+"/artifacts/testdata/files/**/*.zip")
    WHERE Name =~ "test"

  - SELECT basename(path=FullPath) as Name, Size FROM zip_files

  # The following use the deprecated url() notation which is still
  # supported for now.

  # Find txt files inside the zip files.
  - LET hits = SELECT * from foreach(row=zip_files, query= {
       select FullPath, Mtime, Size from glob(
          globs=url(
            scheme='file',
            path=FullPath,
            fragment='/**/*.txt'), accessor='zip') } )

  - SELECT url(parse=FullPath).Fragment as Name, Size, Mtime from hits

  # Same as above but now we use the new pathspec() objects.
  - LET hits = SELECT * from foreach(row=zip_files, query= {
       select FullPath, Mtime, Size from glob(
         globs=pathspec(DelegateAccessor='file',
              DelegatePath=FullPath,
              Path='/**/*.txt'),
         accessor='zip')
    } )

  - SELECT pathspec(parse=FullPath).Path as Name, Size, Mtime from hits

  # Make sure we can read the contents of zip members.
  - SELECT Data, Offset, basename(path=FullPath) as Name
    FROM foreach(row=hits, query={
       SELECT *, FullPath from read_file(filenames=FullPath, accessor='zip')
    })

  - SELECT read_file(
        filename=srcDir+'/artifacts/testdata/files/hi.gz',
        accessor='gzip') AS Hi,
     read_file(
        filename=srcDir+'/artifacts/testdata/files/goodbye.bz2',
        accessor='bzip2') AS Bye
     FROM scope()

  # Test Gzip a string - often the "data" accessor does not work here
  # because the binary data can not be serialized to a pathspec
  # properly. This is what the "scope" accessor is for. Define a
  # reusable function.
  - LET dynamic_gunzip(Data) = read_file(accessor="gzip",
      filename=pathspec(DelegateAccessor="scope", DelegatePath="Data"))

  # Now decompress a gzip string.
  - SELECT dynamic_gunzip(Data=read_file(
      filename=srcDir+"/artifacts/testdata/files/hi.gz")) FROM scope()

  # Test the gzip accessor
  - SELECT read_file(
       filename=srcDir+'/artifacts/testdata/files/hi.gz',
       accessor='gzip') AS Hi,
     read_file(
       filename=srcDir+'/artifacts/testdata/files/goodbye.bz2',
       accessor='bzip2') AS Bye
     FROM scope()

  # Test the unzip() plugin
  - LET tmpdir <= tempdir()
  - SELECT OriginalPath, relpath(path=NewPath, base=tmpdir, sep="/"), Size
    FROM unzip(filename=srcDir + '/artifacts/testdata/files/test.zip',
       output_directory=tmpdir)

  # Test the unzip() plugin on tar gz files
  - LET tmpdir_tgz <= tempdir()
  - SELECT OriginalPath, relpath(path=NewPath, base=tmpdir_tgz, sep="/"), Size
    FROM unzip(filename=srcDir + '/artifacts/testdata/files/tar_test.tgz',
       output_directory=tmpdir_tgz)

  # Test that unzip works on virtual files.
  - SELECT OriginalPath, relpath(path=NewPath, base=tmpdir, sep="/"), Size
    FROM unzip(
       filename=read_file(filename=srcDir + '/artifacts/testdata/files/test.zip'),
       accessor="data",
       output_directory=tmpdir)

  # We can pass a pathspec to zip accessor in glob root (root is on
  # test directory inside the zip).
  - SELECT pathspec(parse=FullPath).Path AS Member
    FROM glob(globs="/*.txt", accessor="zip",
     root=pathspec(
         DelegateAccessor="file",
         DelegatePath=srcDir + '/artifacts/testdata/files/test.zip',
         Path="test"))

  # Test that unzip can unencrypt zip files transparently.  Password
  # is set in the scope so it can not leak in output
  - LET ZIP_PASSWORDS = 'hello'
  - |
    SELECT read_file(filename=OSPath, accessor='zip')
    FROM glob(globs='**/BasicInformation.json',
      accessor='zip',
      root=pathspec(
        DelegateAccessor='zip',
        DelegatePath=pathspec(DelegateAccessor='file',
          DelegatePath=srcDir + '/artifacts/testdata/files/encrypted_collector_password.zip',
          Path='/data.zip')))
