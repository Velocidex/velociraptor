LET _ <= SELECT
      mock(plugin='info', results=[dict(OS='windows')]),
      mock(plugin='http_client', results=[
         dict(Url='http://remote',
              Content=IsPE, Response=200)]),

      -- First call to Windows.NTFS.MFT reveal target dll info
      -- srcDir needs to be used to align fields
      mock(artifact=Artifact.Windows.NTFS.MFT, results=[
         dict(
          EntryNumber=42344,
          InUse = true,
          ParentEntryNumber = 3589,
          MFTPath = srcDir + "$MFT",
          FullPath = "/artifacts/testdata/files/wkscli.dll",
          FileName = "wkscli.dll",
          FileSize = 764976,
          ReferenceCount = 2,
          IsDir = false,
          Created0x10 = "2020-11-19T02:48:46.9885373Z",
          Created0x30 = "2021-01-24T06:57:36.7073284Z",
          LastModified0x10 = "2020-11-19T02:48:47.0041758Z",
          LastModified0x30 = "2021-01-24T06:57:39.5353986Z",
          LastRecordChange0x10 = "2021-01-24T06:59:40.7021579Z",
          LastRecordChange0x30 = "2021-01-24T06:57:39.5353986Z",
          LastAccess0x10 = "2021-03-05T13:44:04.1999087Z",
          LastAccess0x30 = "2021-01-24T06:57:36.7073284Z")
      ])
FROM scope()
[]SELECT relpath(path=FullPath, base=srcDir, sep="/") as TestPath, Size, Rule, HitContext, HitOffset FROM Artifact.Windows.Detection.Yara.NTFS( DriveLetter=srcDir, PathRegex='wkscli.dll', ShortHandYara='wide ascii:MZ')[
 {
  "TestPath": "artifacts/testdata/files/wkscli.dll",
  "Size": 9728,
  "Rule": "X",
  "HitContext": "MZ",
  "HitOffset": 0
 }
]SELECT relpath(path=FullPath, base=srcDir, sep="/") as TestPath, Size, Rule, HitContext, HitOffset FROM Artifact.Windows.Detection.Yara.NTFS( DriveLetter=srcDir, PathRegex='wkscli.dll', YaraRule=IsPE)[
 {
  "TestPath": "artifacts/testdata/files/wkscli.dll",
  "Size": 9728,
  "Rule": "IsPE",
  "HitContext": "Null",
  "HitOffset": null
 }
]