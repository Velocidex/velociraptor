Query: SELECT parse_json_array(data=JSONArrayWithDicts) FROM scope()
Output: [
 {
  "parse_json_array(data=JSONArrayWithDicts)": [
   {
    "foo": 1
   },
   {
    "baz": 2
   }
  ]
 }
]

Query: SELECT parse_json_array(data=JSONArrayWithStrings) FROM scope()
Output: [
 {
  "parse_json_array(data=JSONArrayWithStrings)": [
   "foo",
   "baz"
  ]
 }
]

# Test writing a JSONL file
Query: LET T <= tempfile()
Output: []

Query: SELECT * FROM write_jsonl( filename=T, query={SELECT * FROM range(end=3)})
Output: [
 {
  "_value": 0
 },
 {
  "_value": 1
 },
 {
  "_value": 2
 }
]

Query: SELECT * FROM parse_jsonl(filename=T)
Output: [
 {
  "_value": 0
 },
 {
  "_value": 1
 },
 {
  "_value": 2
 }
]

# Missing final \n is allowed and should return both rows
Query: SELECT * FROM parse_jsonl(accessor="data", filename='{"Foo":"First"}\n{"Foo":"Second"}')
Output: [
 {
  "Foo": "First"
 },
 {
  "Foo": "Second"
 }
]

# Empty line should be ignore
Query: SELECT * FROM parse_jsonl(accessor="data", filename='{"Foo":"First"}\n\n{"Foo":"Second"}')
Output: [
 {
  "Foo": "First"
 },
 {
  "Foo": "Second"
 }
]

# Skip corrupted lines but try to get other lines
Query: SELECT * FROM parse_jsonl(accessor="data", filename='{"Foo":"First}\n{"Foo":"Second"}')
Output: [
 {
  "Foo": "Second"
 }
]

# Corrupted last line is ignored
Query: SELECT * FROM parse_jsonl(accessor="data", filename='{"Foo":"First"}\n{"Foo":\n{"Foo":\n{"Foo":"Second"}')
Output: [
 {
  "Foo": "First"
 },
 {
  "Foo": "Second"
 }
]

# JSONL files with non-dict lines
Query: SELECT * FROM parse_jsonl(accessor="data", filename='1\ntrue\n[1,2,3]\n{"Foo":"First"}\n')
Output: [
 {
  "_value": 1
 },
 {
  "_value": true
 },
 {
  "_value": [
   1,
   2,
   3
  ]
 },
 {
  "Foo": "First"
 }
]

