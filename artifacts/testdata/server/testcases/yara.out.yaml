LET _ <= SELECT
      mock(plugin='http_client', results=[
         dict(Url='http://remote',
              Content=remoteYara, Response=200)]),

      // First call to pslist will reveal our own process.
      mock(plugin='pslist', results=[
         dict(CommandLine="velociraptor", Pid=12, Name="Velociraptor")
      ]),

      // Second call is a process listing.
      mock(plugin='pslist', results=[
         dict(CommandLine="cmd", Pid=1232, Name="cmd.exe"),
         dict(CommandLine="svchost", Pid=1234, Name="svchost.exe"),
         dict(CommandLine="mimikatz", Pid=1236, Name="mimikatz.exe")
      ]),

      mock(plugin='proc_yara', results=[
         dict(Rule="Proc Hit",
              Meta=dict(),
              Namespace="default",
              Strings=[
                dict(Name="Name1",
                     Data="Foobar",
                     Offset=20),
                dict(Name="Name2",
                     Data="Other Hit",
                     Offset=50)
              ])
      ]),

      mock(plugin='proc_dump', results=[
         dict(FullPath="C:\\Users\\test\\AppData\\Local\\Temp\\dmp770529331.dmp",
              Pid=844)
      ]),

      mock(function='upload', results=[
         dict(FullPath="C:\\Users\\test\\AppData\\Local\\Temp\\dmp770529331.dmp",
              Pid=844)
      ])
FROM scope()
[]SELECT * FROM Artifact.Windows.Detection.RemoteYara.Process( source="", processRegex='cmd', yaraURL='http://remote')[
 {
  "ProcessName": "cmd.exe",
  "CommandLine": "cmd",
  "Pid": 1232,
  "Offsets": [
   20,
   50
  ],
  "Namespace": "default",
  "Rule": "Proc Hit",
  "Meta": {},
  "IOCname": [
   "Name1",
   "Name2"
  ],
  "IOCdata": "[]vfilter.Any{\"Foobar\", \"Other Hit\"} [Foobar Other Hit]",
  "_Source": "Windows.Detection.RemoteYara.Process"
 }
]SELECT mock_check(plugin='proc_dump', expected_calls=0), mock_check(function='upload', expected_calls=0), mock_check(plugin="proc_yara", expected_calls=1) FROM scope()[
 {
  "mock_check(plugin='proc_dump', expected_calls=0)": {
   "Error": "OK"
  },
  "mock_check(function='upload', expected_calls=0)": {
   "Error": "OK"
  },
  "mock_check(plugin=\"proc_yara\", expected_calls=1)": {
   "Error": "OK"
  }
 }
]SELECT * FROM Artifact.Windows.Detection.RemoteYara.Process( source="", pidRegex='1236', yaraURL='http://remote')[
 {
  "ProcessName": "mimikatz.exe",
  "CommandLine": "mimikatz",
  "Pid": 1236,
  "Offsets": [
   20,
   50
  ],
  "Namespace": "default",
  "Rule": "Proc Hit",
  "Meta": {},
  "IOCname": [
   "Name1",
   "Name2"
  ],
  "IOCdata": "[]vfilter.Any{\"Foobar\", \"Other Hit\"} [Foobar Other Hit]",
  "_Source": "Windows.Detection.RemoteYara.Process"
 }
]SELECT mock_check(plugin='proc_dump', expected_calls=0), mock_check(function='upload', expected_calls=0), mock_check(plugin="proc_yara", expected_calls=1) FROM scope()[
 {
  "mock_check(plugin='proc_dump', expected_calls=0)": {
   "Error": "OK"
  },
  "mock_check(function='upload', expected_calls=0)": {
   "Error": "OK"
  },
  "mock_check(plugin=\"proc_yara\", expected_calls=1)": {
   "Error": "OK"
  }
 }
]SELECT * FROM Artifact.Windows.Detection.RemoteYara.Process( pidRegex='1236',  collectProcess="Y", yaraURL='http://remote')[
 {
  "ProcessName": "mimikatz.exe",
  "CommandLine": "mimikatz",
  "Pid": 1236,
  "Offsets": [
   20,
   50
  ],
  "Namespace": "default",
  "Rule": "Proc Hit",
  "Meta": {},
  "IOCname": [
   "Name1",
   "Name2"
  ],
  "IOCdata": "[]vfilter.Any{\"Foobar\", \"Other Hit\"} [Foobar Other Hit]",
  "_Source": "Windows.Detection.RemoteYara.Process"
 },
 {
  "ProcessName": "mimikatz.exe",
  "Pid": 844,
  "UploadName": "844.dmp",
  "MiniProcDump": {
   "FullPath": "C:\\Users\\test\\AppData\\Local\\Temp\\dmp770529331.dmp",
   "Pid": 844
  },
  "_Source": "Windows.Detection.RemoteYara.Process/Upload"
 }
]SELECT mock_check(plugin='proc_dump', expected_calls=1), mock_check(function='upload', expected_calls=1), mock_check(plugin="proc_yara", expected_calls=1) FROM scope()[
 {
  "mock_check(plugin='proc_dump', expected_calls=1)": {
   "Error": "OK"
  },
  "mock_check(function='upload', expected_calls=1)": {
   "Error": "OK"
  },
  "mock_check(plugin=\"proc_yara\", expected_calls=1)": {
   "Error": "OK"
  }
 }
]