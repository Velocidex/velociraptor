LET rows <= SELECT * FROM scope()[]SELECT len(list=["a", "b"]), len(list="hello"), len(list=dict(foo=1, bar=2, baz=3)), len(list=rows) FROM scope()[
 {
  "len(list= [\"a\", \"b\"])": 2,
  "len(list=\"hello\")": 5,
  "len(list=dict(foo=1, bar=2, baz=3))": 3,
  "len(list=rows)": 1
 }
]SELECT to_dict(item={ SELECT * FROM foreach(row=items(item=dict(X=1, Y=2, Z=3)), query={ SELECT _key, _value from scope() WHERE _value = 3 }) }) AS Filtered FROM scope()[
 {
  "Filtered": {
   "Z": 3
  }
 }
]SELECT dict(A=1, B=2) + dict(A=3, X=1) FROM scope()[
 {
  "dict(A=1, B=2) + dict(A=3, X=1)": {
   "B": 2,
   "A": 3,
   "X": 1
  }
 }
]LET Foo(X) = if(condition=log(message=format(format="I Ran with %v", args=X)), then=X + 5)[]SELECT cache(func=Foo(X=5), key=5), cache(func=Foo(X=10), key=5), cache(func=Foo(X=10), key=10) FROM scope()[
 {
  "cache(func=Foo(X=5), key=5)": 10,
  "cache(func=Foo(X=10), key=5)": 10,
  "cache(func=Foo(X=10), key=10)": 15
 }
]SELECT * FROM column_filter( query={ SELECT 1 AS A, 2 AS B, 3 AS AB, 4 AS AA FROM scope() }, include="A", exclude="B")[
 {
  "A": 1,
  "AA": 4
 }
]SELECT xor(string='test@velociraptor',key='$'), xor(string='test@velociraptor',key='test'), xor(string=unhex(string='000100010002'), key=unhex(string='2e')) FROM scope()[
 {
  "xor(string='test@velociraptor', key='$')": "PAWPdRAHKGMVETPKV",
  "xor(string='test@velociraptor', key='test')": "\u0000\u0000\u0000\u00004\u0013\u0016\u0018\u001b\u0006\u001a\u0006\u0015\u0015\u0007\u001b\u0006",
  "xor(string=unhex(string='000100010002'), key=unhex(string='2e'))": "././.,"
 }
]LET Foo <= dict(A=1)[]SELECT set(item=Foo, field="B", value=2) FROM scope()[
 {
  "set(item=Foo, field=\"B\", value=2)": {
   "A": 1,
   "B": 2
  }
 }
]SELECT Foo FROM scope()[
 {
  "Foo": {
   "A": 1,
   "B": 2
  }
 }
]SELECT cidr_contains(ip="192.168.0.132", ranges="192.168.0.0/24"), cidr_contains(ip="191.168.0.132", ranges="192.168.0.0/24"), cidr_contains(ip="10.168.0.132", ranges=["192.168.0.0/24", "10.0.0.0/8"]) FROM scope()[
 {
  "cidr_contains(ip=\"192.168.0.132\", ranges=\"192.168.0.0/24\")": true,
  "cidr_contains(ip=\"191.168.0.132\", ranges=\"192.168.0.0/24\")": false,
  "cidr_contains(ip=\"10.168.0.132\", ranges= [\"192.168.0.0/24\", \"10.0.0.0/8\"])": true
 }
]SELECT commandline_split(command='''"C:\Program Files\Velociraptor\Velociraptor.exe" service run'''), commandline_split(command="/usr/bin/ls -l 'file with space.txt'", bash_style=TRUE) FROM scope()[
 {
  "commandline_split(command='''\"C:\\Program Files\\Velociraptor\\Velociraptor.exe\" service run''')": [
   "C:\\Program Files\\Velociraptor\\Velociraptor.exe",
   "service",
   "run"
  ],
  "commandline_split(command=\"/usr/bin/ls -l 'file with space.txt'\", bash_style=TRUE)": [
   "/usr/bin/ls",
   "-l",
   "file with space.txt"
  ]
 }
]SELECT regex_transform(source="Hello world", map=dict( `^Hello`="Goodbye", `world`="Space"), key="A") FROM scope()[
 {
  "regex_transform(source=\"Hello world\", map=dict(`^Hello`=\"Goodbye\", `world`=\"Space\"), key=\"A\")": "Goodbye Space"
 }
]SELECT entropy(string="Hello world") FROM scope()[
 {
  "entropy(string=\"Hello world\")": 2.84
 }
]LET base64_shellcode = 'H4sIAK4zh2IA/7VWbW/bNhD+bP0KohAgCVAE1+k2JECAOU7tOq0dr0oTZK4xMNLZYkuRKkm5Ubv+9x71kjpoUiQD5i/my93x7nmeO3tdisQwKYgsh68p+er0FlTRnPjul/EkJG5yGvR6Ts9N+Fk8IUfEXw6L4kTmlInV4eGoVAqEafbRBMxQa8ivOQPtB+RfcpmBgr2z6w+QGPKVuP9EEy6vKW/NqhFNMiB7Q5HauzcyoTaXKC44M773/r0XLPeer6KXn0rKte/FlTaQRynnXkC+BfbB86oA35uxREkt1ya6ZGJ/EL0Tmq5hjtG2MAOTyVR7gYN1KDClEliWLcf6N7e+h8uFkskwTRVo7YVkaSMvV6s//WX77NtSGJZDNBUGlCxiUFuWgI5eUZFyeAvrFXrFRjGxWQUBmm3lR/BdUXIekqeE8efwuQPtsU7+rhNaLYwKQmTxvkJnMi05NK7ePZla6gP8NPQHzjfHuZXJzcGORpxeb1kvAbPyF1Kz2uaI9EMyw/DUSFXh1j1XJQSrW0yJSz+czvPwQf/nnTGafsoP8GR5IVm6cno1i+52Hv92ak8fFuMJrJmAk0rQnCWd3u6g1EELa45bq7vObI4Z+V57AekJcNhQY7GyDP/k9jJn5tb3uGQ8BTVMkB6NWSFzwd1kGvh9bypmkCNAzR4l565R5dBZt8quutftHo28Eadah2RRYpslIYmBckhDMhSatVfD0sh6aWXcpjsruWEJ1aYLt0IkGxzb90ZSaKPKBDnD2s/jAhJGuYUiJK9YCsdVzDbduzuRd4AYUc5R/Rhpi0TgiQUgNlYJClNsWA+iGMw0LzjkaFQ3/JjTDbZ3K/JaO3QDqW3ZOyl2Gm4Ea8HoUNhJEBmOuTQhuWDK4NywwKKG/tvzPyZGk8dIQUuFX/fF8rgyVtGuuBpYPbaY1Agog9WPlcyPqYbfXzSTwX92kV/o68G8SPLx53RyUE1fnW6vBubL9K+jo2f4ZM9xs2wn1kOtP6NKZ5TjG9jSHatjqcZtqy4ksx6+30z2j6AEcJyNOD07aIacy8SOCexqHFDN2LBT7B0u9wf3rgL8CWgNcUR0s6M7Ojz8G5NErBGP6A2IjcnC/s1+v48ToX/zoh84jy9rJIsKh9LVAF0xYpa1YXkdNnAct9TrP17/z1C1jGf4lf4aqh9nv7h9FHz90Fb70+Hdg6dA+fSyLykzaBqjZDk0A/O+6ltN7PyI1Jwg5+v2Y/8GnJVmb44/Ls53zqaNf24IAAA='[]SELECT gunzip(string=base64decode(string=base64_shellcode)) FROM scope()[
 {
  "gunzip(string=base64decode(string=base64_shellcode))": "function ouAKa {\n\tParam ($zFG, $cJ)\t\t\n\t$clOSG = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\\\')[-1].Equals('System.dll') }).GetType('Microsoft.Win32.UnsafeNativeMethods')\n\t\n\treturn $clOSG.GetMethod('GetProcAddress', [Type[]]@([System.Runtime.InteropServices.HandleRef], [String])).Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($clOSG.GetMethod('GetModuleHandle')).Invoke($null, @($zFG)))), $cJ))\n}\n\nfunction x9 {\n\tParam (\n\t\t[Parameter(Position = 0, Mandatory = $True)] [Type[]] $ajJNm,\n\t\t[Parameter(Position = 1)] [Type] $qm9 = [Void]\n\t)\n\t\n\t$vNS5J = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName('ReflectedDelegate')), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule('InMemoryModule', $false).DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])\n\t$vNS5J.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $ajJNm).SetImplementationFlags('Runtime, Managed')\n\t$vNS5J.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $qm9, $ajJNm).SetImplementationFlags('Runtime, Managed')\n\t\n\treturn $vNS5J.CreateType()\n}\n\n[Byte[]]$nY2 = [System.Convert]::FromBase64String(\"VmVsb2NpcmFwdG9yIHJvY2tzIQ==\")\n\t\t\n$hh = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((ouAKa kernel32.dll VirtualAlloc), (x9 @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr]))).Invoke([IntPtr]::Zero, $nY2.Length,0x3000, 0x40)\n[System.Runtime.InteropServices.Marshal]::Copy($nY2, 0, $hh, $nY2.length)\n\n$usf7K = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((ouAKa kernel32.dll CreateThread), (x9 @([IntPtr], [UInt32], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr]))).Invoke([IntPtr]::Zero,0,$hh,[IntPtr]::Zero,0,[IntPtr]::Zero)\n[System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((ouAKa kernel32.dll WaitForSingleObject), (x9 @([IntPtr], [Int32]))).Invoke($usf7K,0xffffffff) | Out-Null\n"
 }
]LET TestArray <= ("Hello", "World", "Goodbye", "Universe")[]SELECT all(items=TestArray, filter="x=>x=~'Hello|Uni|Wo|G'"), all(items=TestArray, filter="x=>x=~'Hello|Uni'"), all(items=["Hi", "There"], filter="x=>x =~ 'Hi'"), all(items=["Hi", "There"], filter="x=>x =~ 'Hi|There'") FROM scope()[
 {
  "all(items=TestArray, filter=\"x=\u003ex=~'Hello|Uni|Wo|G'\")": true,
  "all(items=TestArray, filter=\"x=\u003ex=~'Hello|Uni'\")": false,
  "all(items= [\"Hi\", \"There\"], filter=\"x=\u003ex =~ 'Hi'\")": false,
  "all(items= [\"Hi\", \"There\"], filter=\"x=\u003ex =~ 'Hi|There'\")": true
 }
]SELECT all(items=TestArray, regex='Hello|Uni|Wo|G'), all(items=TestArray, regex='Hello|Uni'), all(items=["Hi", "There"], regex='Hi'), all(items=["Hi", "There"], regex='Hi|There') FROM scope()[
 {
  "all(items=TestArray, regex='Hello|Uni|Wo|G')": true,
  "all(items=TestArray, regex='Hello|Uni')": false,
  "all(items= [\"Hi\", \"There\"], regex='Hi')": false,
  "all(items= [\"Hi\", \"There\"], regex='Hi|There')": true
 }
]SELECT all(items="Hi There", regex=['Hi', "Goodbye"]), all(items="Hi There", regex=['Hi', "ere"]), all(items=["Hi", "There"], regex=['H|T', 'i|r']) FROM scope()[
 {
  "all(items=\"Hi There\", regex= ['Hi', \"Goodbye\"])": false,
  "all(items=\"Hi There\", regex= ['Hi', \"ere\"])": true,
  "all(items= [\"Hi\", \"There\"], regex= ['H|T', 'i|r'])": true
 }
]LET TestArray <= (dict(X=1, Y="Hello"), dict(X=2, Y="Goodbye"), dict(X=1, Y="World"))[]SELECT *, all(items=Y, filter="x=>x =~ 'Hello|World'"), all(items=Y, filter="x=>x =~ 'World'"), all(items=Y, filter="x=>x =~ 'Goodby'") FROM foreach(row=TestArray) GROUP BY X[
 {
  "X": 1,
  "Y": "World",
  "all(items=Y, filter=\"x=\u003ex =~ 'Hello|World'\")": true,
  "all(items=Y, filter=\"x=\u003ex =~ 'World'\")": false,
  "all(items=Y, filter=\"x=\u003ex =~ 'Goodby'\")": false
 },
 {
  "X": 2,
  "Y": "Goodbye",
  "all(items=Y, filter=\"x=\u003ex =~ 'Hello|World'\")": false,
  "all(items=Y, filter=\"x=\u003ex =~ 'World'\")": false,
  "all(items=Y, filter=\"x=\u003ex =~ 'Goodby'\")": true
 }
]SELECT all(items={ SELECT * FROM foreach(row=TestArray) WHERE X = 1 }, filter="x=> x.Y =~ 'Hel|Worl'") FROM scope()[
 {
  "all(items= { SELECT * FROM foreach(row=TestArray) WHERE X = 1}, filter=\"x=\u003e x.Y =~ 'Hel|Worl'\")": true
 }
]SELECT any(items=TestArray, filter="x=>x.Y =~ 'Good'"), all(items=TestArray, filter="x=>x.Y =~ 'Good'") FROM scope()[
 {
  "any(items=TestArray, filter=\"x=\u003ex.Y =~ 'Good'\")": true,
  "all(items=TestArray, filter=\"x=\u003ex.Y =~ 'Good'\")": false
 }
]