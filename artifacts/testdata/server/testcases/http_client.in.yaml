# This tests the http client against a live test server - it is too
# flakey on the CI pipeline
Queries:

# Common use case - take a url, extract the query string, add some
# more parameters and make a new request.
- LET URL <= url(parse="http://www.google.com/?q=Hello&lang=fr")

# Test various URL construction
- SELECT url(scheme="http", host="www.google.com", query=dict(foo="bar")).String
  FROM scope()

# Dict addition can be used to override the original map replacing the
# value of lang
- LET NewQuery <= URL.Query + dict(lang="en")

## Encode parameters in GET query. Check that we can send headers.
#- SELECT parse_json(data=Content).url, parse_json(data=Content).headers.`Foo-Bar`
#  FROM http_client(url="https://httpbin.org/get",
#      params=NewQuery, headers=dict(`foo-bar`="baz"),
#      method="GET")

## Encode parameters in POST query
#- SELECT parse_json(data=Content).data
#  FROM http_client(url="https://httpbin.org/post",
#       params=NewQuery, method="POST")

# Test Secrets
- SELECT secret_define(type="HTTP Secrets", template=dict(url="")),
         secret_add(type="HTTP Secrets", name="Google",
           secret=dict(url="http://www.google.com/")),
         secret_modify(type="HTTP Secrets", name="Google", add_users="VelociraptorServer")
  FROM scope()

# A 200 response indicates the secret was converted to a URL and fetched.
- SELECT Response FROM http_client(url="secret://Google")

# Test multiple URLs: First URL will fail but next one will work.
- SELECT Response FROM http_client(url=["http://localhost:232/sdfsd", "secret://Google"])
