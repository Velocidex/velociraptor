Queries:
  - SELECT mock(plugin='info', results=[dict(OS='windows'), dict(OS='windows')] )
    FROM scope()

  # Test semantics around listing registry keys with default
  # values. The 0 key actually has a default value. In the glob model
  # it is a directory (since it is a Key) as well as a file (because
  # it also is a value).  Velociraptor's glob model can not deal with
  # directories which are also files (most artifacts test for IsDir to
  # avoid reading directories.).

  # Therefore we separate the value out into a default value called
  # "@" within the key/directory. Globbing the parent directory will
  # only show keys, while Globbing the keys will show the default
  # value of the key as @.

  # Just a regular key
  - SELECT OSPath.Path AS Key, Data FROM glob(globs="*", accessor="raw_reg", root=pathspec(
       Path="/Local Settings/Software/Microsoft/Windows/Shell/BagMRU",
       DelegatePath=srcDir+"/artifacts/testdata/files/UsrClass.dat"))
    WHERE OSPath.Basename =~ "0"

  # A value with name @
  - SELECT OSPath.Path AS Key, Data FROM glob(globs="*", accessor="raw_reg", root=pathspec(
       Path="/Local Settings/Software/Microsoft/Windows/Shell/BagMRU/0",
       DelegatePath=srcDir+"/artifacts/testdata/files/UsrClass.dat"))
    WHERE OSPath.Basename =~ "@"

  # Now test read_file on values
  - SELECT format(format="%02x", args=read_file(accessor='raw_reg', filename=pathspec(
       Path="/Local Settings/Software/Microsoft/Windows/Shell/BagMRU/0/@",
       DelegatePath=srcDir+"/artifacts/testdata/files/UsrClass.dat"))) AS ValueContent
    FROM scope()

  # This artifact uses the raw registry parser.
  - SELECT LastModified, Binary, Name, Size, ProductName, Publisher, BinFileVersion
    FROM Artifact.Windows.System.Amcache(
       source="InventoryApplicationFile",
       amCacheGlob=srcDir+"/artifacts/testdata/files/Amcache.hve") LIMIT 5

  # Test the shell bags artifact
  - SELECT ModTime, basename(path=Hive), KeyPath, Description, Path, _Parsed
    FROM Artifact.Windows.Forensics.Shellbags(SearchSpecs=[
      dict(
         HiveGlob=srcDir+"/artifacts/testdata/files/UsrClass.dat",
         KeyGlob='''\Local Settings\Software\Microsoft\Windows\Shell\BagMRU\**'''),])
    ORDER BY KeyPath

  # Test the SAM parsers
  - SELECT ParsedF, ParsedV FROM Artifact.Windows.Forensics.SAM(
       SAMPath=srcDir+"/artifacts/testdata/files/SAM", source="Parsed")

  - SELECT * FROM Artifact.Windows.Forensics.SAM(
       SAMPath=srcDir+"/artifacts/testdata/files/SAM", source="CreateTimes")

  # Check raw reg can read values as files - REG_SZ.
  - SELECT utf16(string=read_file(filename=pathspec(
        Path="\\Root\\DeviceCensus\\Processor\\ProcessorIdentifier",
        DelegatePath=srcDir+"/artifacts/testdata/files/Amcache.hve",
        DelegateAccessor='file'),
      accessor="raw_reg"))
    FROM scope()

  # Check raw reg can read values as files - REG_DWORD
  - SELECT utf16(string=read_file(filename=pathspec(
        Path="\\Root\\DeviceCensus\\WritePermissionsCheck",
        DelegatePath=srcDir+"/artifacts/testdata/files/Amcache.hve",
        DelegateAccessor='file'),
      accessor="raw_reg"))
    FROM scope()
