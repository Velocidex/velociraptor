# This file tests the collector accessor which provides transparent
# access to Velociraptor offline collections with automatic decryption
# if possible.
Parameters:
  Artifact1: |
    name: Artifact1
    sources:
    - query: SELECT 1 AS X FROM scope()
  Artifact2: |
    name: Artifact2
    sources:
    - query: SELECT 2 AS X FROM scope()

Queries:
  # First unencrypted file
  - SELECT read_file(filename=OSPath, accessor='collector')
    FROM glob(globs='**/BasicInformation.json',
      accessor='collector',
      root=pathspec(
          DelegatePath=srcDir +
              '/artifacts/testdata/files/unencrypted_collector.zip'))

  # Test that unzip can unencrypt zip files transparently. This file
  # was build from the server certificate.
  - SELECT read_file(filename=OSPath, accessor='collector')
    FROM glob(globs='**/BasicInformation.json',
      accessor='collector',
      root=pathspec(
          DelegatePath=srcDir +
              '/artifacts/testdata/files/encrypted_collector_pki.zip'))

  # Password is set in the scope so it can not leak in output
  - LET ZIP_PASSWORDS <= "hello"
  - SELECT read_file(filename=OSPath, accessor='collector')
    FROM glob(globs='**/BasicInformation.json',
      accessor='collector',
      root=pathspec(
          DelegatePath=srcDir +
              '/artifacts/testdata/files/encrypted_collector_password.zip'))


  # Clear the password now.
  - LET ZIP_PASSWORDS <= ""

  # This file contains a complex filename with illegal characters. We
  # escape those for the zip container. We must be able to read the
  # file from the serialized version of the pathspec.
  - |
    SELECT read_file(filename=OSPath, accessor='zip'),
           read_file(filename=OSPath.String, accessor='zip'),
           OSPath.Components, OSPath.Path
    FROM glob(globs='*', accessor='zip',
          root=pathspec(Path='/uploads/file/tmp/',
                        DelegatePath=srcDir + '/vql/tools/collector/fixtures/import.zip'))

  # Same as above for the collector accessor. We must be able to read
  # the file from the serialized version of the pathspec.
  - |
    SELECT read_file(filename=OSPath, accessor='collector'),
           read_file(filename=OSPath.String, accessor='collector'),
           OSPath.Components, OSPath.Path
    FROM glob(globs='*', accessor='collector',
          root=pathspec(Path='/uploads/file/tmp/',
                        DelegatePath=srcDir + '/vql/tools/collector/fixtures/import.zip'))

  # Test we can pass definitions to the collect() plugin. This passes
  # a []string{} to artifact_definitions.
  - SELECT * FROM collect(
       artifact_definitions=split(sep_string="-----", string=Artifact1 + "-----" + Artifact2),
       artifacts=["Artifact1", "Artifact2"])
    ORDER BY _Source

  # This is passes a []LazyExpr{} to artifact_definitions
  - SELECT * FROM collect(
       artifact_definitions=[Artifact1, Artifact2],
       artifacts=["Artifact1", "Artifact2"])
    ORDER BY _Source
