# Test the Link parser as it is responsible for shell bags. The
# shellbag format is crazy complicated and looks to be created by
# drunk monkeys so parsing shell bags is notoriously difficult. The
# below are some example shell bags retrieved from live systems.

# The procedure is to just find shell bags that do not parse properly,
# add them to this link and fix the Lnk parser to support
# them. Rinse/Repeat.

Parameters:
  _ShellBags: |
    ["GgIAABQCu6+TOwYCBAAAAAAARQAAADFTUFMC1c3VnC4bEJOXCAArLPmuKQAAAAIAAAAAHxAAAAEAAAAJAAAAQwBvAG0AcAB1AHQAZQByAAAAAAAAAAAA1gAAADFTUFNzQ+UKvkOtT4XkadyGM5huEQAAAAsAAAAACwAAAP//AACpAAAABwAAAAAfAAAATAAAAFAAcgBvAHYAaQBkAGUAcgBcAE0AaQBjAHIAbwBzAG8AZgB0AC4ATgBlAHQAdwBvAHIAawBpAG4AZwAuAE4AZQB0AGIAaQBvAHMALwAvAFYATQB3AGEAcgBlACAAUwBoAGEAcgBlAGQAIABGAG8AbABkAGUAcgBzADoAOgBcAFwAdgBtAHcAYQByAGUALQBoAG8AcwB0AAAAAAAAAEUAAAAxU1BTMPElt+9HGhCl8QJgjJ7rrCkAAAAKAAAAAB8AAAAMAAAAdgBtAHcAYQByAGUALQBoAG8AcwB0AAAAAAAAABwAAAAxU1BTsztqZcDs/UOEd0rgQEqWzQAAAABZAAAAMVNQU6ZqYyg9ldIRtdYAwE/ZGNA9AAAAHwAAAAAfAAAAFgAAAFYATQB3AGEAcgBlACAAUwBoAGEAcgBlAGQAIABGAG8AbABkAGUAcgBzAAAAAAAAAC0AAAAxU1BTOqS93rM3g0OR50SY2imVqxEAAAADAAAAABMAAAACAAAAAAAAAAAAAAAAAAAA",
    "DAEAAEF1Z00EAAAAAgAAAAAAAQB4ADEAAAAAAFNZoJARAE1JQ1IjTTF+AABgAAkABADvvlNZoJBTWaCQLgAAAA4AAAAAAACAAAAAAAAAAAAAAAAAAAAgbk4ATQBpAGMAcgBvAHMAbwBmAHQAIABWAGkAcwB1AGEAbAAgAFMAdAB1AGQAaQBvAAAAGAAAAAEAAAB4ADEAAAAAAFNZoJARAE1JQ1IjTTF+AABgAAkABADvvlNZoJBTWaCQLgAAAA4AAAAAAACAAAAAAAAAAAAAAAAAAAAgbk4ATQBpAGMAcgBvAHMAbwBmAHQAIABWAGkAcwB1AGEAbAAgAFMAdAB1AGQAaQBvAAAAGAAAAAAA",
    "DAABAIQh3jkDAAAAAAA=",
    "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"
    ]

Queries:
  - LET _ <= import(artifact="Windows.Forensics.Lnk")

  - LET ShellBags <= parse_json_array(data=_ShellBags)

  - LET Parse(Lnk) = parse_binary(filename=base64decode(string=Lnk), accessor="data",
       profile=Profile, struct="ItemIDList")

# Use this to write the test file for inspection with a hex editor.
#  - SELECT copy(accessor="data", dest="/tmp/1.bin",
#                filename=base64decode(string=ShellBags[13]))
#    FROM scope()

  - |
    SELECT count() - 1 AS IDX,
           Parse(Lnk=_value) AS ParsedShellBag FROM foreach(row=ShellBags)
