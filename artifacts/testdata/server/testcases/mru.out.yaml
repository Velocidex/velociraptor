SELECT LastWriteTime, Type, MruEntries, Key, basename(path=HiveName) as HiveName FROM Artifact.Windows.Registry.RecentDocs(HiveGlob=srcDir + "/artifacts/testdata/files/ntuser.dat") ORDER BY Type[
 {
  "LastWriteTime": "2009-08-04T15:19:23Z",
  "Type": ".txt",
  "MruEntries": [
   "1 := Not to be seen document.txt",
   "0 := Very secret document.txt"
  ],
  "Key": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\\.txt\\MRUListEx",
  "HiveName": "ntuser.dat"
 },
 {
  "LastWriteTime": "2009-08-04T15:19:23Z",
  "Type": "Folder",
  "MruEntries": [
   "0 := Administrator's Documents"
  ],
  "Key": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\\Folder\\MRUListEx",
  "HiveName": "ntuser.dat"
 },
 {
  "LastWriteTime": "2009-08-04T15:19:23Z",
  "Type": "RecentDocs",
  "MruEntries": [
   "1 := Administrator's Documents",
   "2 := Not to be seen document.txt",
   "0 := Very secret document.txt"
  ],
  "Key": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\\MRUListEx",
  "HiveName": "ntuser.dat"
 }
]SELECT LastWriteTime, Type, MruEntries, Key, basename(path=HiveName) as HiveName FROM Artifact.Windows.Registry.RecentDocs(HiveGlob=srcDir + "/artifacts/testdata/files/ntuser.dat",EntryRegex="Very secret document\.txt") ORDER BY Type[
 {
  "LastWriteTime": "2009-08-04T15:19:23Z",
  "Type": ".txt",
  "MruEntries": [
   "1 := Not to be seen document.txt",
   "0 := Very secret document.txt"
  ],
  "Key": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\\.txt\\MRUListEx",
  "HiveName": "ntuser.dat"
 },
 {
  "LastWriteTime": "2009-08-04T15:19:23Z",
  "Type": "RecentDocs",
  "MruEntries": [
   "1 := Administrator's Documents",
   "2 := Not to be seen document.txt",
   "0 := Very secret document.txt"
  ],
  "Key": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\\MRUListEx",
  "HiveName": "ntuser.dat"
 }
]LET _ <= SELECT mock(plugin='info', results=[dict(Fqdn='DESKTOP-687T2NR', OS='windows')]), mock(artifact=Artifact.Windows.Registry.NTUser, results={ SELECT *, pathspec(parse=FullPath) AS OSPath FROM parse_json_array(data=NTUserRunMRU) }), mock(plugin="glob", results={ SELECT *, pathspec(parse=FullPath) AS OSPath FROM parse_json_array(data=ArtifactRunMRUGlobMock) }) FROM scope()[]SELECT * from Artifact.Windows.Timeline.Registry.RunMRU(groupResults=FALSE)[
 {
  "event_time": "2020-04-30T01:46:57Z",
  "hostname": "DESKTOP-687T2NR",
  "parser": "RunMRU",
  "message": "RunMRU evidence user: yolo, order: 0, command: powershell'",
  "source": "/C:/Users/yolo/NTUSER.DAT",
  "user": "yolo",
  "reg_key": "HKEY_USERS\\S-1-5-21-2201333269-445358460-1233016754-1000\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU",
  "reg_mtime": "2020-04-30T01:46:57Z",
  "reg_name": "a",
  "reg_value": "powershell",
  "reg_type": "REG_SZ",
  "_Source": "Windows.Timeline.Registry.RunMRU"
 },
 {
  "event_time": "2020-04-30T01:46:57Z",
  "hostname": "DESKTOP-687T2NR",
  "parser": "RunMRU",
  "message": "RunMRU evidence user: yolo, order: 1, command: \\\\criticalserver\\c$'",
  "source": "/C:/Users/yolo/NTUSER.DAT",
  "user": "yolo",
  "reg_key": "HKEY_USERS\\S-1-5-21-2201333269-445358460-1233016754-1000\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU",
  "reg_mtime": "2020-04-30T01:46:57Z",
  "reg_name": "b",
  "reg_value": "\\\\criticalserver\\c$",
  "reg_type": "REG_SZ",
  "_Source": "Windows.Timeline.Registry.RunMRU"
 }
]SELECT * from Artifact.Windows.Timeline.Registry.RunMRU(groupResults=TRUE)[
 {
  "event_time": "2020-04-30T01:46:57Z",
  "hostname": "DESKTOP-687T2NR",
  "parser": "RunMRU",
  "message": "RunMRU evidence user: yolo, MRU0: powershell | MRU1: \\\\criticalserver\\c$'",
  "source": "/C:/Users/yolo/NTUSER.DAT",
  "user": "yolo",
  "_Source": "Windows.Timeline.Registry.RunMRU"
 }
]