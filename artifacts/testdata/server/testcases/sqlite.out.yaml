Query: SELECT * FROM sqlite( file=srcDir + "/artifacts/testdata/files/history.sqlite", query="SELECT * FROM urls")
Output: [
 {
  "id": 2,
  "url": "https://localhost:8889/app.html",
  "title": "Velociraptor | Hunts",
  "visit_count": 8,
  "typed_count": 1,
  "last_visit_time": 13205403909588967,
  "hidden": 0
 },
 {
  "id": 3,
  "url": "https://localhost:8889/app.html#/hunts",
  "title": "Velociraptor | Home",
  "visit_count": 41,
  "typed_count": 0,
  "last_visit_time": 13205513380758164,
  "hidden": 0
 }
]

# Test that parameter interpolations work.
Query: SELECT * FROM sqlite( file=srcDir + "/artifacts/testdata/files/history.sqlite", query="SELECT * FROM urls WHERE url like ?", args='%hunt%')
Output: [
 {
  "id": 3,
  "url": "https://localhost:8889/app.html#/hunts",
  "title": "Velociraptor | Home",
  "visit_count": 41,
  "typed_count": 0,
  "last_visit_time": 13205513380758164,
  "hidden": 0
 }
]

Query: SELECT * FROM sqlite( file=srcDir + "/artifacts/testdata/files/history.sqlite", query="SELECT * FROM urls WHERE typed_count = ? and visit_count = ?", args=[0, 41])
Output: [
 {
  "id": 3,
  "url": "https://localhost:8889/app.html#/hunts",
  "title": "Velociraptor | Home",
  "visit_count": 41,
  "typed_count": 0,
  "last_visit_time": 13205513380758164,
  "hidden": 0
 }
]

# Test that we can read sqlite files from accessors - we will copy
# to a tempfile and parse that instead. This allows us to access
# locked files.
Query: SELECT * FROM foreach( row={ SELECT Data from read_file( filenames=srcDir + "/artifacts/testdata/files/history.sqlite") }, query={ SELECT * FROM sqlite(file=Data, accessor="data", query="SELECT * FROM urls") })
Output: [
 {
  "id": 2,
  "url": "https://localhost:8889/app.html",
  "title": "Velociraptor | Hunts",
  "visit_count": 8,
  "typed_count": 1,
  "last_visit_time": 13205403909588967,
  "hidden": 0
 },
 {
  "id": 3,
  "url": "https://localhost:8889/app.html#/hunts",
  "title": "Velociraptor | Home",
  "visit_count": 41,
  "typed_count": 0,
  "last_visit_time": 13205513380758164,
  "hidden": 0
 }
]

# Test the Generic.Collectors.SQLECmd artifact
Query: SELECT ID, URLTitle, URL, VisitCount, _Source, OSPath.Basename AS OSPath FROM Artifact.Generic.Collectors.SQLECmd( UseFilenames=FALSE, GlobExpr=[dict(Name="X", Glob=srcDir + "/artifacts/testdata/files/**")]) WHERE _Source =~ "Chromium Browser History"
Output: [
 {
  "ID": 1,
  "URLTitle": "Google",
  "URL": "https://www.google.com/",
  "VisitCount": 2,
  "_Source": "Generic.Collectors.SQLECmd/Chromium Browser History",
  "OSPath": "ChromeHistory.sqlite"
 },
 {
  "ID": 1,
  "URLTitle": "Google",
  "URL": "https://www.google.com/",
  "VisitCount": 2,
  "_Source": "Generic.Collectors.SQLECmd/Chromium Browser History",
  "OSPath": "ChromeHistory.sqlite"
 }
]

