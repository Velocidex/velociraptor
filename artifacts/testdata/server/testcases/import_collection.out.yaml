# Client IDs are random so we sanitize them in the results below.
Query: LET Sanitize(X) = regex_replace(re="[C]\\.[0-9a-z]+", replace="C.ID", source=X)
Output: []

# Import a collection once
Query: LET X <= SELECT * FROM Artifact.Server.Utils.ImportCollection( Hostname="FooBarHost", Path=srcDir+"/vql/tools/collector/fixtures/import.zip")
Output: []

# Import the same collection again - it should re-use the same client id
Query: LET Y <= SELECT * FROM Artifact.Server.Utils.ImportCollection( Hostname="FooBarHost", Path=srcDir+"/vql/tools/collector/fixtures/import.zip")
Output: []

# Make sure the client ids were the same
Query: SELECT X[0].ClientId = Y[0].ClientId AS ClientIdEqual FROM scope()
Output: [
 {
  "ClientIdEqual": true
 }
]

# Delete the new clients that were created (exclude time dependent data)
Query: SELECT Sanitize(X=vfs_path) AS vfs_path FROM Artifact.Server.Utils.DeleteClient( ClientIdList=[X[0].ClientId, Y[0].ClientId], ReallyDoIt=TRUE) WHERE NOT vfs_path =~ "monitoring" Order by vfs_path
Output: [
 {
  "vfs_path": ""
 },
 {
  "vfs_path": "/clients/C.ID/artifacts/Linux.Search.FileFinder/F.01.json"
 },
 {
  "vfs_path": "/clients/C.ID/artifacts/Linux.Search.FileFinder/F.01.json.index"
 },
 {
  "vfs_path": "/clients/C.ID/artifacts/Linux.Search.FileFinder/F.CD62UJJO259A4.json"
 },
 {
  "vfs_path": "/clients/C.ID/artifacts/Linux.Search.FileFinder/F.CD62UJJO259A4.json.index"
 },
 {
  "vfs_path": "/clients/C.ID/collections"
 },
 {
  "vfs_path": "/clients/C.ID/collections"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.01.json.db"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.01/logs.json"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.01/logs.json.index"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.01/uploads.json"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.01/uploads.json.index"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.01/uploads/file/tmp/\"ls\\with\\back:slash\""
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.CD62UJJO259A4"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.CD62UJJO259A4"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.CD62UJJO259A4.json.db"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.CD62UJJO259A4/logs.json"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.CD62UJJO259A4/logs.json.index"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.CD62UJJO259A4/task.db"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.CD62UJJO259A4/uploads.json"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.CD62UJJO259A4/uploads.json.index"
 },
 {
  "vfs_path": "/clients/C.ID/collections/F.CD62UJJO259A4/uploads/file/tmp/\"ls\\with\\back:slash\""
 },
 {
  "vfs_path": "/clients/C.ID/flow_index.json"
 },
 {
  "vfs_path": "/clients/C.ID/flow_index.json.index"
 }
]

